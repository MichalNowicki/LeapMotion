   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_adc.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
 20033              		.align	2
 20034              		.global	ADC_DeInit
 20035              		.thumb
 20036              		.thumb_func
 20038              	ADC_DeInit:
 20039              	.LFB29:
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20040              		.loc 1 180 0
 20041              		.cfi_startproc
 20042              		@ args = 0, pretend = 0, frame = 8
 20043              		@ frame_needed = 1, uses_anonymous_args = 0
 20044 0000 80B5     		push	{r7, lr}
 20045              	.LCFI0:
 20046              		.cfi_def_cfa_offset 8
 20047 0002 82B0     		sub	sp, sp, #8
 20048              	.LCFI1:
 20049              		.cfi_def_cfa_offset 16
 20050 0004 00AF     		add	r7, sp, #0
 20051              		.cfi_offset 14, -4
 20052              		.cfi_offset 7, -8
 20053              	.LCFI2:
 20054              		.cfi_def_cfa_register 7
 20055 0006 7860     		str	r0, [r7, #4]
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
 20056              		.loc 1 184 0
 20057 0008 7A68     		ldr	r2, [r7, #4]
 20058 000a 1A4B     		ldr	r3, .L5
 20059 000c 9A42     		cmp	r2, r3
 20060 000e 0CD1     		bne	.L2
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
 20061              		.loc 1 187 0
 20062 0010 4FF40070 		mov	r0, #512
 20063 0014 4FF00101 		mov	r1, #1
 20064 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
 20065              		.loc 1 189 0
 20066 001c 4FF40070 		mov	r0, #512
 20067 0020 4FF00001 		mov	r1, #0
 20068 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 20069 0028 20E0     		b	.L1
 20070              	.L2:
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
 20071              		.loc 1 191 0
 20072 002a 7A68     		ldr	r2, [r7, #4]
 20073 002c 124B     		ldr	r3, .L5+4
 20074 002e 9A42     		cmp	r2, r3
 20075 0030 0CD1     		bne	.L4
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
 20076              		.loc 1 194 0
 20077 0032 4FF48060 		mov	r0, #1024
 20078 0036 4FF00101 		mov	r1, #1
 20079 003a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
 20080              		.loc 1 196 0
 20081 003e 4FF48060 		mov	r0, #1024
 20082 0042 4FF00001 		mov	r1, #0
 20083 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 20084 004a 0FE0     		b	.L1
 20085              	.L4:
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
 20086              		.loc 1 200 0
 20087 004c 7A68     		ldr	r2, [r7, #4]
 20088 004e 0B4B     		ldr	r3, .L5+8
 20089 0050 9A42     		cmp	r2, r3
 20090 0052 0BD1     		bne	.L1
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
 20091              		.loc 1 203 0
 20092 0054 4FF40040 		mov	r0, #32768
 20093 0058 4FF00101 		mov	r1, #1
 20094 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
 20095              		.loc 1 205 0
 20096 0060 4FF40040 		mov	r0, #32768
 20097 0064 4FF00001 		mov	r1, #0
 20098 0068 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 20099              	.L1:
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20100              		.loc 1 208 0
 20101 006c 07F10807 		add	r7, r7, #8
 20102 0070 BD46     		mov	sp, r7
 20103 0072 80BD     		pop	{r7, pc}
 20104              	.L6:
 20105              		.align	2
 20106              	.L5:
 20107 0074 00240140 		.word	1073816576
 20108 0078 00280140 		.word	1073817600
 20109 007c 003C0140 		.word	1073822720
 20110              		.cfi_endproc
 20111              	.LFE29:
 20113              		.section	.text.ADC_Init,"ax",%progbits
 20114              		.align	2
 20115              		.global	ADC_Init
 20116              		.thumb
 20117              		.thumb_func
 20119              	ADC_Init:
 20120              	.LFB30:
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20121              		.loc 1 219 0
 20122              		.cfi_startproc
 20123              		@ args = 0, pretend = 0, frame = 16
 20124              		@ frame_needed = 1, uses_anonymous_args = 0
 20125              		@ link register save eliminated.
 20126 0000 80B4     		push	{r7}
 20127              	.LCFI3:
 20128              		.cfi_def_cfa_offset 4
 20129 0002 85B0     		sub	sp, sp, #20
 20130              	.LCFI4:
 20131              		.cfi_def_cfa_offset 24
 20132 0004 00AF     		add	r7, sp, #0
 20133              		.cfi_offset 7, -4
 20134              	.LCFI5:
 20135              		.cfi_def_cfa_register 7
 20136 0006 7860     		str	r0, [r7, #4]
 20137 0008 3960     		str	r1, [r7, #0]
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 20138              		.loc 1 220 0
 20139 000a 4FF00003 		mov	r3, #0
 20140 000e FB60     		str	r3, [r7, #12]
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 20141              		.loc 1 221 0
 20142 0010 4FF00003 		mov	r3, #0
 20143 0014 FB72     		strb	r3, [r7, #11]
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 20144              		.loc 1 233 0
 20145 0016 7B68     		ldr	r3, [r7, #4]
 20146 0018 5B68     		ldr	r3, [r3, #4]
 20147 001a FB60     		str	r3, [r7, #12]
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 20148              		.loc 1 235 0
 20149 001c FB68     		ldr	r3, [r7, #12]
 20150 001e 23F47023 		bic	r3, r3, #983040
 20151 0022 23F48073 		bic	r3, r3, #256
 20152 0026 FB60     		str	r3, [r7, #12]
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 20153              		.loc 1 239 0
 20154 0028 3B68     		ldr	r3, [r7, #0]
 20155 002a 1A68     		ldr	r2, [r3, #0]
 20156 002c 3B68     		ldr	r3, [r7, #0]
 20157 002e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20158 0030 4FEA0323 		lsl	r3, r3, #8
 20159 0034 42EA0303 		orr	r3, r2, r3
 20160 0038 FA68     		ldr	r2, [r7, #12]
 20161 003a 42EA0303 		orr	r3, r2, r3
 20162 003e FB60     		str	r3, [r7, #12]
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 20163              		.loc 1 241 0
 20164 0040 7B68     		ldr	r3, [r7, #4]
 20165 0042 FA68     		ldr	r2, [r7, #12]
 20166 0044 5A60     		str	r2, [r3, #4]
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 20167              		.loc 1 245 0
 20168 0046 7B68     		ldr	r3, [r7, #4]
 20169 0048 9B68     		ldr	r3, [r3, #8]
 20170 004a FB60     		str	r3, [r7, #12]
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 20171              		.loc 1 247 0
 20172 004c FA68     		ldr	r2, [r7, #12]
 20173 004e 1A4B     		ldr	r3, .L8
 20174 0050 02EA0303 		and	r3, r2, r3
 20175 0054 FB60     		str	r3, [r7, #12]
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 20176              		.loc 1 252 0
 20177 0056 3B68     		ldr	r3, [r7, #0]
 20178 0058 DA68     		ldr	r2, [r3, #12]
 20179 005a 3B68     		ldr	r3, [r7, #0]
 20180 005c 9B68     		ldr	r3, [r3, #8]
 20181 005e 1A43     		orrs	r2, r2, r3
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 20182              		.loc 1 253 0
 20183 0060 3B68     		ldr	r3, [r7, #0]
 20184 0062 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 20185 0064 4FEA4303 		lsl	r3, r3, #1
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 20186              		.loc 1 252 0
 20187 0068 42EA0303 		orr	r3, r2, r3
 20188 006c FA68     		ldr	r2, [r7, #12]
 20189 006e 42EA0303 		orr	r3, r2, r3
 20190 0072 FB60     		str	r3, [r7, #12]
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 20191              		.loc 1 255 0
 20192 0074 7B68     		ldr	r3, [r7, #4]
 20193 0076 FA68     		ldr	r2, [r7, #12]
 20194 0078 9A60     		str	r2, [r3, #8]
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 20195              		.loc 1 259 0
 20196 007a 7B68     		ldr	r3, [r7, #4]
 20197 007c DB6A     		ldr	r3, [r3, #44]
 20198 007e FB60     		str	r3, [r7, #12]
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 20199              		.loc 1 261 0
 20200 0080 FB68     		ldr	r3, [r7, #12]
 20201 0082 23F47003 		bic	r3, r3, #15728640
 20202 0086 FB60     		str	r3, [r7, #12]
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 20203              		.loc 1 264 0
 20204 0088 3B68     		ldr	r3, [r7, #0]
 20205 008a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 20206 008c 03F1FF33 		add	r3, r3, #-1
 20207 0090 DAB2     		uxtb	r2, r3
 20208 0092 FB7A     		ldrb	r3, [r7, #11]
 20209 0094 42EA0303 		orr	r3, r2, r3
 20210 0098 FB72     		strb	r3, [r7, #11]
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 20211              		.loc 1 265 0
 20212 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20213 009c 4FEA0353 		lsl	r3, r3, #20
 20214 00a0 FA68     		ldr	r2, [r7, #12]
 20215 00a2 42EA0303 		orr	r3, r2, r3
 20216 00a6 FB60     		str	r3, [r7, #12]
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 20217              		.loc 1 267 0
 20218 00a8 7B68     		ldr	r3, [r7, #4]
 20219 00aa FA68     		ldr	r2, [r7, #12]
 20220 00ac DA62     		str	r2, [r3, #44]
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20221              		.loc 1 268 0
 20222 00ae 07F11407 		add	r7, r7, #20
 20223 00b2 BD46     		mov	sp, r7
 20224 00b4 80BC     		pop	{r7}
 20225 00b6 7047     		bx	lr
 20226              	.L9:
 20227              		.align	2
 20228              	.L8:
 20229 00b8 FDF7F1FF 		.word	-919555
 20230              		.cfi_endproc
 20231              	.LFE30:
 20233              		.section	.text.ADC_StructInit,"ax",%progbits
 20234              		.align	2
 20235              		.global	ADC_StructInit
 20236              		.thumb
 20237              		.thumb_func
 20239              	ADC_StructInit:
 20240              	.LFB31:
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20241              		.loc 1 276 0
 20242              		.cfi_startproc
 20243              		@ args = 0, pretend = 0, frame = 8
 20244              		@ frame_needed = 1, uses_anonymous_args = 0
 20245              		@ link register save eliminated.
 20246 0000 80B4     		push	{r7}
 20247              	.LCFI6:
 20248              		.cfi_def_cfa_offset 4
 20249 0002 83B0     		sub	sp, sp, #12
 20250              	.LCFI7:
 20251              		.cfi_def_cfa_offset 16
 20252 0004 00AF     		add	r7, sp, #0
 20253              		.cfi_offset 7, -4
 20254              	.LCFI8:
 20255              		.cfi_def_cfa_register 7
 20256 0006 7860     		str	r0, [r7, #4]
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 20257              		.loc 1 279 0
 20258 0008 7B68     		ldr	r3, [r7, #4]
 20259 000a 4FF00002 		mov	r2, #0
 20260 000e 1A60     		str	r2, [r3, #0]
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 20261              		.loc 1 281 0
 20262 0010 7B68     		ldr	r3, [r7, #4]
 20263 0012 4FF00002 		mov	r2, #0
 20264 0016 1A71     		strb	r2, [r3, #4]
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 20265              		.loc 1 283 0
 20266 0018 7B68     		ldr	r3, [r7, #4]
 20267 001a 4FF00002 		mov	r2, #0
 20268 001e 5A71     		strb	r2, [r3, #5]
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 20269              		.loc 1 285 0
 20270 0020 7B68     		ldr	r3, [r7, #4]
 20271 0022 4FF00002 		mov	r2, #0
 20272 0026 9A60     		str	r2, [r3, #8]
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 20273              		.loc 1 287 0
 20274 0028 7B68     		ldr	r3, [r7, #4]
 20275 002a 4FF00002 		mov	r2, #0
 20276 002e DA60     		str	r2, [r3, #12]
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 20277              		.loc 1 289 0
 20278 0030 7B68     		ldr	r3, [r7, #4]
 20279 0032 4FF00102 		mov	r2, #1
 20280 0036 1A74     		strb	r2, [r3, #16]
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20281              		.loc 1 290 0
 20282 0038 07F10C07 		add	r7, r7, #12
 20283 003c BD46     		mov	sp, r7
 20284 003e 80BC     		pop	{r7}
 20285 0040 7047     		bx	lr
 20286              		.cfi_endproc
 20287              	.LFE31:
 20289 0042 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 20290              		.align	2
 20291              		.global	ADC_Cmd
 20292              		.thumb
 20293              		.thumb_func
 20295              	ADC_Cmd:
 20296              	.LFB32:
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20297              		.loc 1 300 0
 20298              		.cfi_startproc
 20299              		@ args = 0, pretend = 0, frame = 8
 20300              		@ frame_needed = 1, uses_anonymous_args = 0
 20301              		@ link register save eliminated.
 20302 0000 80B4     		push	{r7}
 20303              	.LCFI9:
 20304              		.cfi_def_cfa_offset 4
 20305 0002 83B0     		sub	sp, sp, #12
 20306              	.LCFI10:
 20307              		.cfi_def_cfa_offset 16
 20308 0004 00AF     		add	r7, sp, #0
 20309              		.cfi_offset 7, -4
 20310              	.LCFI11:
 20311              		.cfi_def_cfa_register 7
 20312 0006 7860     		str	r0, [r7, #4]
 20313 0008 0B46     		mov	r3, r1
 20314 000a FB70     		strb	r3, [r7, #3]
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 20315              		.loc 1 304 0
 20316 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20317 000e 002B     		cmp	r3, #0
 20318 0010 06D0     		beq	.L12
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 20319              		.loc 1 307 0
 20320 0012 7B68     		ldr	r3, [r7, #4]
 20321 0014 9B68     		ldr	r3, [r3, #8]
 20322 0016 43F00102 		orr	r2, r3, #1
 20323 001a 7B68     		ldr	r3, [r7, #4]
 20324 001c 9A60     		str	r2, [r3, #8]
 20325 001e 05E0     		b	.L11
 20326              	.L12:
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 20327              		.loc 1 312 0
 20328 0020 7B68     		ldr	r3, [r7, #4]
 20329 0022 9B68     		ldr	r3, [r3, #8]
 20330 0024 23F00102 		bic	r2, r3, #1
 20331 0028 7B68     		ldr	r3, [r7, #4]
 20332 002a 9A60     		str	r2, [r3, #8]
 20333              	.L11:
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20334              		.loc 1 314 0
 20335 002c 07F10C07 		add	r7, r7, #12
 20336 0030 BD46     		mov	sp, r7
 20337 0032 80BC     		pop	{r7}
 20338 0034 7047     		bx	lr
 20339              		.cfi_endproc
 20340              	.LFE32:
 20342 0036 00BF     		.section	.text.ADC_DMACmd,"ax",%progbits
 20343              		.align	2
 20344              		.global	ADC_DMACmd
 20345              		.thumb
 20346              		.thumb_func
 20348              	ADC_DMACmd:
 20349              	.LFB33:
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20350              		.loc 1 325 0
 20351              		.cfi_startproc
 20352              		@ args = 0, pretend = 0, frame = 8
 20353              		@ frame_needed = 1, uses_anonymous_args = 0
 20354              		@ link register save eliminated.
 20355 0000 80B4     		push	{r7}
 20356              	.LCFI12:
 20357              		.cfi_def_cfa_offset 4
 20358 0002 83B0     		sub	sp, sp, #12
 20359              	.LCFI13:
 20360              		.cfi_def_cfa_offset 16
 20361 0004 00AF     		add	r7, sp, #0
 20362              		.cfi_offset 7, -4
 20363              	.LCFI14:
 20364              		.cfi_def_cfa_register 7
 20365 0006 7860     		str	r0, [r7, #4]
 20366 0008 0B46     		mov	r3, r1
 20367 000a FB70     		strb	r3, [r7, #3]
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 20368              		.loc 1 329 0
 20369 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20370 000e 002B     		cmp	r3, #0
 20371 0010 06D0     		beq	.L15
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 20372              		.loc 1 332 0
 20373 0012 7B68     		ldr	r3, [r7, #4]
 20374 0014 9B68     		ldr	r3, [r3, #8]
 20375 0016 43F48072 		orr	r2, r3, #256
 20376 001a 7B68     		ldr	r3, [r7, #4]
 20377 001c 9A60     		str	r2, [r3, #8]
 20378 001e 05E0     		b	.L14
 20379              	.L15:
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 20380              		.loc 1 337 0
 20381 0020 7B68     		ldr	r3, [r7, #4]
 20382 0022 9B68     		ldr	r3, [r3, #8]
 20383 0024 23F48072 		bic	r2, r3, #256
 20384 0028 7B68     		ldr	r3, [r7, #4]
 20385 002a 9A60     		str	r2, [r3, #8]
 20386              	.L14:
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20387              		.loc 1 339 0
 20388 002c 07F10C07 		add	r7, r7, #12
 20389 0030 BD46     		mov	sp, r7
 20390 0032 80BC     		pop	{r7}
 20391 0034 7047     		bx	lr
 20392              		.cfi_endproc
 20393              	.LFE33:
 20395 0036 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 20396              		.align	2
 20397              		.global	ADC_ITConfig
 20398              		.thumb
 20399              		.thumb_func
 20401              	ADC_ITConfig:
 20402              	.LFB34:
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20403              		.loc 1 354 0
 20404              		.cfi_startproc
 20405              		@ args = 0, pretend = 0, frame = 16
 20406              		@ frame_needed = 1, uses_anonymous_args = 0
 20407              		@ link register save eliminated.
 20408 0000 80B4     		push	{r7}
 20409              	.LCFI15:
 20410              		.cfi_def_cfa_offset 4
 20411 0002 85B0     		sub	sp, sp, #20
 20412              	.LCFI16:
 20413              		.cfi_def_cfa_offset 24
 20414 0004 00AF     		add	r7, sp, #0
 20415              		.cfi_offset 7, -4
 20416              	.LCFI17:
 20417              		.cfi_def_cfa_register 7
 20418 0006 7860     		str	r0, [r7, #4]
 20419 0008 1346     		mov	r3, r2
 20420 000a 0A46     		mov	r2, r1	@ movhi
 20421 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 20422 000e 7B70     		strb	r3, [r7, #1]
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 20423              		.loc 1 355 0
 20424 0010 4FF00003 		mov	r3, #0
 20425 0014 FB73     		strb	r3, [r7, #15]
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 20426              		.loc 1 361 0
 20427 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20428 0018 FB73     		strb	r3, [r7, #15]
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 20429              		.loc 1 362 0
 20430 001a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20431 001c 002B     		cmp	r3, #0
 20432 001e 06D0     		beq	.L18
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 20433              		.loc 1 365 0
 20434 0020 7B68     		ldr	r3, [r7, #4]
 20435 0022 5A68     		ldr	r2, [r3, #4]
 20436 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20437 0026 1A43     		orrs	r2, r2, r3
 20438 0028 7B68     		ldr	r3, [r7, #4]
 20439 002a 5A60     		str	r2, [r3, #4]
 20440 002c 07E0     		b	.L17
 20441              	.L18:
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 20442              		.loc 1 370 0
 20443 002e 7B68     		ldr	r3, [r7, #4]
 20444 0030 5A68     		ldr	r2, [r3, #4]
 20445 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20446 0034 6FEA0303 		mvn	r3, r3
 20447 0038 1A40     		ands	r2, r2, r3
 20448 003a 7B68     		ldr	r3, [r7, #4]
 20449 003c 5A60     		str	r2, [r3, #4]
 20450              	.L17:
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20451              		.loc 1 372 0
 20452 003e 07F11407 		add	r7, r7, #20
 20453 0042 BD46     		mov	sp, r7
 20454 0044 80BC     		pop	{r7}
 20455 0046 7047     		bx	lr
 20456              		.cfi_endproc
 20457              	.LFE34:
 20459              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 20460              		.align	2
 20461              		.global	ADC_ResetCalibration
 20462              		.thumb
 20463              		.thumb_func
 20465              	ADC_ResetCalibration:
 20466              	.LFB35:
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20467              		.loc 1 380 0
 20468              		.cfi_startproc
 20469              		@ args = 0, pretend = 0, frame = 8
 20470              		@ frame_needed = 1, uses_anonymous_args = 0
 20471              		@ link register save eliminated.
 20472 0000 80B4     		push	{r7}
 20473              	.LCFI18:
 20474              		.cfi_def_cfa_offset 4
 20475 0002 83B0     		sub	sp, sp, #12
 20476              	.LCFI19:
 20477              		.cfi_def_cfa_offset 16
 20478 0004 00AF     		add	r7, sp, #0
 20479              		.cfi_offset 7, -4
 20480              	.LCFI20:
 20481              		.cfi_def_cfa_register 7
 20482 0006 7860     		str	r0, [r7, #4]
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 20483              		.loc 1 384 0
 20484 0008 7B68     		ldr	r3, [r7, #4]
 20485 000a 9B68     		ldr	r3, [r3, #8]
 20486 000c 43F00802 		orr	r2, r3, #8
 20487 0010 7B68     		ldr	r3, [r7, #4]
 20488 0012 9A60     		str	r2, [r3, #8]
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20489              		.loc 1 385 0
 20490 0014 07F10C07 		add	r7, r7, #12
 20491 0018 BD46     		mov	sp, r7
 20492 001a 80BC     		pop	{r7}
 20493 001c 7047     		bx	lr
 20494              		.cfi_endproc
 20495              	.LFE35:
 20497 001e 00BF     		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 20498              		.align	2
 20499              		.global	ADC_GetResetCalibrationStatus
 20500              		.thumb
 20501              		.thumb_func
 20503              	ADC_GetResetCalibrationStatus:
 20504              	.LFB36:
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20505              		.loc 1 393 0
 20506              		.cfi_startproc
 20507              		@ args = 0, pretend = 0, frame = 16
 20508              		@ frame_needed = 1, uses_anonymous_args = 0
 20509              		@ link register save eliminated.
 20510 0000 80B4     		push	{r7}
 20511              	.LCFI21:
 20512              		.cfi_def_cfa_offset 4
 20513 0002 85B0     		sub	sp, sp, #20
 20514              	.LCFI22:
 20515              		.cfi_def_cfa_offset 24
 20516 0004 00AF     		add	r7, sp, #0
 20517              		.cfi_offset 7, -4
 20518              	.LCFI23:
 20519              		.cfi_def_cfa_register 7
 20520 0006 7860     		str	r0, [r7, #4]
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 20521              		.loc 1 394 0
 20522 0008 4FF00003 		mov	r3, #0
 20523 000c FB73     		strb	r3, [r7, #15]
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 20524              		.loc 1 398 0
 20525 000e 7B68     		ldr	r3, [r7, #4]
 20526 0010 9B68     		ldr	r3, [r3, #8]
 20527 0012 03F00803 		and	r3, r3, #8
 20528 0016 002B     		cmp	r3, #0
 20529 0018 03D0     		beq	.L22
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 20530              		.loc 1 401 0
 20531 001a 4FF00103 		mov	r3, #1
 20532 001e FB73     		strb	r3, [r7, #15]
 20533 0020 02E0     		b	.L23
 20534              	.L22:
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 20535              		.loc 1 406 0
 20536 0022 4FF00003 		mov	r3, #0
 20537 0026 FB73     		strb	r3, [r7, #15]
 20538              	.L23:
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 20539              		.loc 1 409 0
 20540 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20541              		.loc 1 410 0
 20542 002a 1846     		mov	r0, r3
 20543 002c 07F11407 		add	r7, r7, #20
 20544 0030 BD46     		mov	sp, r7
 20545 0032 80BC     		pop	{r7}
 20546 0034 7047     		bx	lr
 20547              		.cfi_endproc
 20548              	.LFE36:
 20550 0036 00BF     		.section	.text.ADC_StartCalibration,"ax",%progbits
 20551              		.align	2
 20552              		.global	ADC_StartCalibration
 20553              		.thumb
 20554              		.thumb_func
 20556              	ADC_StartCalibration:
 20557              	.LFB37:
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20558              		.loc 1 418 0
 20559              		.cfi_startproc
 20560              		@ args = 0, pretend = 0, frame = 8
 20561              		@ frame_needed = 1, uses_anonymous_args = 0
 20562              		@ link register save eliminated.
 20563 0000 80B4     		push	{r7}
 20564              	.LCFI24:
 20565              		.cfi_def_cfa_offset 4
 20566 0002 83B0     		sub	sp, sp, #12
 20567              	.LCFI25:
 20568              		.cfi_def_cfa_offset 16
 20569 0004 00AF     		add	r7, sp, #0
 20570              		.cfi_offset 7, -4
 20571              	.LCFI26:
 20572              		.cfi_def_cfa_register 7
 20573 0006 7860     		str	r0, [r7, #4]
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 20574              		.loc 1 422 0
 20575 0008 7B68     		ldr	r3, [r7, #4]
 20576 000a 9B68     		ldr	r3, [r3, #8]
 20577 000c 43F00402 		orr	r2, r3, #4
 20578 0010 7B68     		ldr	r3, [r7, #4]
 20579 0012 9A60     		str	r2, [r3, #8]
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20580              		.loc 1 423 0
 20581 0014 07F10C07 		add	r7, r7, #12
 20582 0018 BD46     		mov	sp, r7
 20583 001a 80BC     		pop	{r7}
 20584 001c 7047     		bx	lr
 20585              		.cfi_endproc
 20586              	.LFE37:
 20588 001e 00BF     		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 20589              		.align	2
 20590              		.global	ADC_GetCalibrationStatus
 20591              		.thumb
 20592              		.thumb_func
 20594              	ADC_GetCalibrationStatus:
 20595              	.LFB38:
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20596              		.loc 1 431 0
 20597              		.cfi_startproc
 20598              		@ args = 0, pretend = 0, frame = 16
 20599              		@ frame_needed = 1, uses_anonymous_args = 0
 20600              		@ link register save eliminated.
 20601 0000 80B4     		push	{r7}
 20602              	.LCFI27:
 20603              		.cfi_def_cfa_offset 4
 20604 0002 85B0     		sub	sp, sp, #20
 20605              	.LCFI28:
 20606              		.cfi_def_cfa_offset 24
 20607 0004 00AF     		add	r7, sp, #0
 20608              		.cfi_offset 7, -4
 20609              	.LCFI29:
 20610              		.cfi_def_cfa_register 7
 20611 0006 7860     		str	r0, [r7, #4]
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 20612              		.loc 1 432 0
 20613 0008 4FF00003 		mov	r3, #0
 20614 000c FB73     		strb	r3, [r7, #15]
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 20615              		.loc 1 436 0
 20616 000e 7B68     		ldr	r3, [r7, #4]
 20617 0010 9B68     		ldr	r3, [r3, #8]
 20618 0012 03F00403 		and	r3, r3, #4
 20619 0016 002B     		cmp	r3, #0
 20620 0018 03D0     		beq	.L26
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 20621              		.loc 1 439 0
 20622 001a 4FF00103 		mov	r3, #1
 20623 001e FB73     		strb	r3, [r7, #15]
 20624 0020 02E0     		b	.L27
 20625              	.L26:
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 20626              		.loc 1 444 0
 20627 0022 4FF00003 		mov	r3, #0
 20628 0026 FB73     		strb	r3, [r7, #15]
 20629              	.L27:
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 20630              		.loc 1 447 0
 20631 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20632              		.loc 1 448 0
 20633 002a 1846     		mov	r0, r3
 20634 002c 07F11407 		add	r7, r7, #20
 20635 0030 BD46     		mov	sp, r7
 20636 0032 80BC     		pop	{r7}
 20637 0034 7047     		bx	lr
 20638              		.cfi_endproc
 20639              	.LFE38:
 20641 0036 00BF     		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 20642              		.align	2
 20643              		.global	ADC_SoftwareStartConvCmd
 20644              		.thumb
 20645              		.thumb_func
 20647              	ADC_SoftwareStartConvCmd:
 20648              	.LFB39:
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20649              		.loc 1 458 0
 20650              		.cfi_startproc
 20651              		@ args = 0, pretend = 0, frame = 8
 20652              		@ frame_needed = 1, uses_anonymous_args = 0
 20653              		@ link register save eliminated.
 20654 0000 80B4     		push	{r7}
 20655              	.LCFI30:
 20656              		.cfi_def_cfa_offset 4
 20657 0002 83B0     		sub	sp, sp, #12
 20658              	.LCFI31:
 20659              		.cfi_def_cfa_offset 16
 20660 0004 00AF     		add	r7, sp, #0
 20661              		.cfi_offset 7, -4
 20662              	.LCFI32:
 20663              		.cfi_def_cfa_register 7
 20664 0006 7860     		str	r0, [r7, #4]
 20665 0008 0B46     		mov	r3, r1
 20666 000a FB70     		strb	r3, [r7, #3]
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 20667              		.loc 1 462 0
 20668 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20669 000e 002B     		cmp	r3, #0
 20670 0010 06D0     		beq	.L29
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 20671              		.loc 1 466 0
 20672 0012 7B68     		ldr	r3, [r7, #4]
 20673 0014 9B68     		ldr	r3, [r3, #8]
 20674 0016 43F4A002 		orr	r2, r3, #5242880
 20675 001a 7B68     		ldr	r3, [r7, #4]
 20676 001c 9A60     		str	r2, [r3, #8]
 20677 001e 05E0     		b	.L28
 20678              	.L29:
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 20679              		.loc 1 472 0
 20680 0020 7B68     		ldr	r3, [r7, #4]
 20681 0022 9B68     		ldr	r3, [r3, #8]
 20682 0024 23F4A002 		bic	r2, r3, #5242880
 20683 0028 7B68     		ldr	r3, [r7, #4]
 20684 002a 9A60     		str	r2, [r3, #8]
 20685              	.L28:
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20686              		.loc 1 474 0
 20687 002c 07F10C07 		add	r7, r7, #12
 20688 0030 BD46     		mov	sp, r7
 20689 0032 80BC     		pop	{r7}
 20690 0034 7047     		bx	lr
 20691              		.cfi_endproc
 20692              	.LFE39:
 20694 0036 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 20695              		.align	2
 20696              		.global	ADC_GetSoftwareStartConvStatus
 20697              		.thumb
 20698              		.thumb_func
 20700              	ADC_GetSoftwareStartConvStatus:
 20701              	.LFB40:
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20702              		.loc 1 482 0
 20703              		.cfi_startproc
 20704              		@ args = 0, pretend = 0, frame = 16
 20705              		@ frame_needed = 1, uses_anonymous_args = 0
 20706              		@ link register save eliminated.
 20707 0000 80B4     		push	{r7}
 20708              	.LCFI33:
 20709              		.cfi_def_cfa_offset 4
 20710 0002 85B0     		sub	sp, sp, #20
 20711              	.LCFI34:
 20712              		.cfi_def_cfa_offset 24
 20713 0004 00AF     		add	r7, sp, #0
 20714              		.cfi_offset 7, -4
 20715              	.LCFI35:
 20716              		.cfi_def_cfa_register 7
 20717 0006 7860     		str	r0, [r7, #4]
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 20718              		.loc 1 483 0
 20719 0008 4FF00003 		mov	r3, #0
 20720 000c FB73     		strb	r3, [r7, #15]
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 20721              		.loc 1 487 0
 20722 000e 7B68     		ldr	r3, [r7, #4]
 20723 0010 9B68     		ldr	r3, [r3, #8]
 20724 0012 03F48003 		and	r3, r3, #4194304
 20725 0016 002B     		cmp	r3, #0
 20726 0018 03D0     		beq	.L32
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 20727              		.loc 1 490 0
 20728 001a 4FF00103 		mov	r3, #1
 20729 001e FB73     		strb	r3, [r7, #15]
 20730 0020 02E0     		b	.L33
 20731              	.L32:
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 20732              		.loc 1 495 0
 20733 0022 4FF00003 		mov	r3, #0
 20734 0026 FB73     		strb	r3, [r7, #15]
 20735              	.L33:
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 20736              		.loc 1 498 0
 20737 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20738              		.loc 1 499 0
 20739 002a 1846     		mov	r0, r3
 20740 002c 07F11407 		add	r7, r7, #20
 20741 0030 BD46     		mov	sp, r7
 20742 0032 80BC     		pop	{r7}
 20743 0034 7047     		bx	lr
 20744              		.cfi_endproc
 20745              	.LFE40:
 20747 0036 00BF     		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 20748              		.align	2
 20749              		.global	ADC_DiscModeChannelCountConfig
 20750              		.thumb
 20751              		.thumb_func
 20753              	ADC_DiscModeChannelCountConfig:
 20754              	.LFB41:
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20755              		.loc 1 510 0
 20756              		.cfi_startproc
 20757              		@ args = 0, pretend = 0, frame = 16
 20758              		@ frame_needed = 1, uses_anonymous_args = 0
 20759              		@ link register save eliminated.
 20760 0000 80B4     		push	{r7}
 20761              	.LCFI36:
 20762              		.cfi_def_cfa_offset 4
 20763 0002 85B0     		sub	sp, sp, #20
 20764              	.LCFI37:
 20765              		.cfi_def_cfa_offset 24
 20766 0004 00AF     		add	r7, sp, #0
 20767              		.cfi_offset 7, -4
 20768              	.LCFI38:
 20769              		.cfi_def_cfa_register 7
 20770 0006 7860     		str	r0, [r7, #4]
 20771 0008 0B46     		mov	r3, r1
 20772 000a FB70     		strb	r3, [r7, #3]
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 20773              		.loc 1 511 0
 20774 000c 4FF00003 		mov	r3, #0
 20775 0010 FB60     		str	r3, [r7, #12]
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 20776              		.loc 1 512 0
 20777 0012 4FF00003 		mov	r3, #0
 20778 0016 BB60     		str	r3, [r7, #8]
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 20779              		.loc 1 517 0
 20780 0018 7B68     		ldr	r3, [r7, #4]
 20781 001a 5B68     		ldr	r3, [r3, #4]
 20782 001c FB60     		str	r3, [r7, #12]
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 20783              		.loc 1 519 0
 20784 001e FB68     		ldr	r3, [r7, #12]
 20785 0020 23F46043 		bic	r3, r3, #57344
 20786 0024 FB60     		str	r3, [r7, #12]
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 20787              		.loc 1 521 0
 20788 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20789 0028 03F1FF33 		add	r3, r3, #-1
 20790 002c BB60     		str	r3, [r7, #8]
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 20791              		.loc 1 522 0
 20792 002e BB68     		ldr	r3, [r7, #8]
 20793 0030 4FEA4333 		lsl	r3, r3, #13
 20794 0034 FA68     		ldr	r2, [r7, #12]
 20795 0036 42EA0303 		orr	r3, r2, r3
 20796 003a FB60     		str	r3, [r7, #12]
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 20797              		.loc 1 524 0
 20798 003c 7B68     		ldr	r3, [r7, #4]
 20799 003e FA68     		ldr	r2, [r7, #12]
 20800 0040 5A60     		str	r2, [r3, #4]
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20801              		.loc 1 525 0
 20802 0042 07F11407 		add	r7, r7, #20
 20803 0046 BD46     		mov	sp, r7
 20804 0048 80BC     		pop	{r7}
 20805 004a 7047     		bx	lr
 20806              		.cfi_endproc
 20807              	.LFE41:
 20809              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 20810              		.align	2
 20811              		.global	ADC_DiscModeCmd
 20812              		.thumb
 20813              		.thumb_func
 20815              	ADC_DiscModeCmd:
 20816              	.LFB42:
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20817              		.loc 1 537 0
 20818              		.cfi_startproc
 20819              		@ args = 0, pretend = 0, frame = 8
 20820              		@ frame_needed = 1, uses_anonymous_args = 0
 20821              		@ link register save eliminated.
 20822 0000 80B4     		push	{r7}
 20823              	.LCFI39:
 20824              		.cfi_def_cfa_offset 4
 20825 0002 83B0     		sub	sp, sp, #12
 20826              	.LCFI40:
 20827              		.cfi_def_cfa_offset 16
 20828 0004 00AF     		add	r7, sp, #0
 20829              		.cfi_offset 7, -4
 20830              	.LCFI41:
 20831              		.cfi_def_cfa_register 7
 20832 0006 7860     		str	r0, [r7, #4]
 20833 0008 0B46     		mov	r3, r1
 20834 000a FB70     		strb	r3, [r7, #3]
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 20835              		.loc 1 541 0
 20836 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20837 000e 002B     		cmp	r3, #0
 20838 0010 06D0     		beq	.L36
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 20839              		.loc 1 544 0
 20840 0012 7B68     		ldr	r3, [r7, #4]
 20841 0014 5B68     		ldr	r3, [r3, #4]
 20842 0016 43F40062 		orr	r2, r3, #2048
 20843 001a 7B68     		ldr	r3, [r7, #4]
 20844 001c 5A60     		str	r2, [r3, #4]
 20845 001e 05E0     		b	.L35
 20846              	.L36:
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 20847              		.loc 1 549 0
 20848 0020 7B68     		ldr	r3, [r7, #4]
 20849 0022 5B68     		ldr	r3, [r3, #4]
 20850 0024 23F40062 		bic	r2, r3, #2048
 20851 0028 7B68     		ldr	r3, [r7, #4]
 20852 002a 5A60     		str	r2, [r3, #4]
 20853              	.L35:
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 20854              		.loc 1 551 0
 20855 002c 07F10C07 		add	r7, r7, #12
 20856 0030 BD46     		mov	sp, r7
 20857 0032 80BC     		pop	{r7}
 20858 0034 7047     		bx	lr
 20859              		.cfi_endproc
 20860              	.LFE42:
 20862 0036 00BF     		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 20863              		.align	2
 20864              		.global	ADC_RegularChannelConfig
 20865              		.thumb
 20866              		.thumb_func
 20868              	ADC_RegularChannelConfig:
 20869              	.LFB43:
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 20870              		.loc 1 591 0
 20871              		.cfi_startproc
 20872              		@ args = 0, pretend = 0, frame = 16
 20873              		@ frame_needed = 1, uses_anonymous_args = 0
 20874              		@ link register save eliminated.
 20875 0000 80B4     		push	{r7}
 20876              	.LCFI42:
 20877              		.cfi_def_cfa_offset 4
 20878 0002 85B0     		sub	sp, sp, #20
 20879              	.LCFI43:
 20880              		.cfi_def_cfa_offset 24
 20881 0004 00AF     		add	r7, sp, #0
 20882              		.cfi_offset 7, -4
 20883              	.LCFI44:
 20884              		.cfi_def_cfa_register 7
 20885 0006 7860     		str	r0, [r7, #4]
 20886 0008 F970     		strb	r1, [r7, #3]
 20887 000a BA70     		strb	r2, [r7, #2]
 20888 000c 7B70     		strb	r3, [r7, #1]
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 20889              		.loc 1 592 0
 20890 000e 4FF00003 		mov	r3, #0
 20891 0012 FB60     		str	r3, [r7, #12]
 20892 0014 4FF00003 		mov	r3, #0
 20893 0018 BB60     		str	r3, [r7, #8]
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 20894              		.loc 1 599 0
 20895 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20896 001c 092B     		cmp	r3, #9
 20897 001e 29D9     		bls	.L39
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 20898              		.loc 1 602 0
 20899 0020 7B68     		ldr	r3, [r7, #4]
 20900 0022 DB68     		ldr	r3, [r3, #12]
 20901 0024 FB60     		str	r3, [r7, #12]
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 20902              		.loc 1 604 0
 20903 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20904 0028 1346     		mov	r3, r2
 20905 002a 4FEA4303 		lsl	r3, r3, #1
 20906 002e 9B18     		adds	r3, r3, r2
 20907 0030 A3F11E03 		sub	r3, r3, #30
 20908 0034 4FF00702 		mov	r2, #7
 20909 0038 02FA03F3 		lsl	r3, r2, r3
 20910 003c BB60     		str	r3, [r7, #8]
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 20911              		.loc 1 606 0
 20912 003e BB68     		ldr	r3, [r7, #8]
 20913 0040 6FEA0303 		mvn	r3, r3
 20914 0044 FA68     		ldr	r2, [r7, #12]
 20915 0046 02EA0303 		and	r3, r2, r3
 20916 004a FB60     		str	r3, [r7, #12]
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 20917              		.loc 1 608 0
 20918 004c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 20919 004e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20920 0050 1346     		mov	r3, r2
 20921 0052 4FEA4303 		lsl	r3, r3, #1
 20922 0056 9B18     		adds	r3, r3, r2
 20923 0058 A3F11E03 		sub	r3, r3, #30
 20924 005c 01FA03F3 		lsl	r3, r1, r3
 20925 0060 BB60     		str	r3, [r7, #8]
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 20926              		.loc 1 610 0
 20927 0062 FA68     		ldr	r2, [r7, #12]
 20928 0064 BB68     		ldr	r3, [r7, #8]
 20929 0066 42EA0303 		orr	r3, r2, r3
 20930 006a FB60     		str	r3, [r7, #12]
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 20931              		.loc 1 612 0
 20932 006c 7B68     		ldr	r3, [r7, #4]
 20933 006e FA68     		ldr	r2, [r7, #12]
 20934 0070 DA60     		str	r2, [r3, #12]
 20935 0072 24E0     		b	.L40
 20936              	.L39:
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 20937              		.loc 1 617 0
 20938 0074 7B68     		ldr	r3, [r7, #4]
 20939 0076 1B69     		ldr	r3, [r3, #16]
 20940 0078 FB60     		str	r3, [r7, #12]
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 20941              		.loc 1 619 0
 20942 007a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20943 007c 1346     		mov	r3, r2
 20944 007e 4FEA4303 		lsl	r3, r3, #1
 20945 0082 9B18     		adds	r3, r3, r2
 20946 0084 4FF00702 		mov	r2, #7
 20947 0088 02FA03F3 		lsl	r3, r2, r3
 20948 008c BB60     		str	r3, [r7, #8]
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 20949              		.loc 1 621 0
 20950 008e BB68     		ldr	r3, [r7, #8]
 20951 0090 6FEA0303 		mvn	r3, r3
 20952 0094 FA68     		ldr	r2, [r7, #12]
 20953 0096 02EA0303 		and	r3, r2, r3
 20954 009a FB60     		str	r3, [r7, #12]
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 20955              		.loc 1 623 0
 20956 009c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 20957 009e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20958 00a0 1346     		mov	r3, r2
 20959 00a2 4FEA4303 		lsl	r3, r3, #1
 20960 00a6 9B18     		adds	r3, r3, r2
 20961 00a8 01FA03F3 		lsl	r3, r1, r3
 20962 00ac BB60     		str	r3, [r7, #8]
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 20963              		.loc 1 625 0
 20964 00ae FA68     		ldr	r2, [r7, #12]
 20965 00b0 BB68     		ldr	r3, [r7, #8]
 20966 00b2 42EA0303 		orr	r3, r2, r3
 20967 00b6 FB60     		str	r3, [r7, #12]
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 20968              		.loc 1 627 0
 20969 00b8 7B68     		ldr	r3, [r7, #4]
 20970 00ba FA68     		ldr	r2, [r7, #12]
 20971 00bc 1A61     		str	r2, [r3, #16]
 20972              	.L40:
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 20973              		.loc 1 630 0
 20974 00be BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 20975 00c0 062B     		cmp	r3, #6
 20976 00c2 29D8     		bhi	.L41
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 20977              		.loc 1 633 0
 20978 00c4 7B68     		ldr	r3, [r7, #4]
 20979 00c6 5B6B     		ldr	r3, [r3, #52]
 20980 00c8 FB60     		str	r3, [r7, #12]
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 20981              		.loc 1 635 0
 20982 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 20983 00cc 03F1FF32 		add	r2, r3, #-1
 20984 00d0 1346     		mov	r3, r2
 20985 00d2 4FEA8303 		lsl	r3, r3, #2
 20986 00d6 9B18     		adds	r3, r3, r2
 20987 00d8 4FF01F02 		mov	r2, #31
 20988 00dc 02FA03F3 		lsl	r3, r2, r3
 20989 00e0 BB60     		str	r3, [r7, #8]
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 20990              		.loc 1 637 0
 20991 00e2 BB68     		ldr	r3, [r7, #8]
 20992 00e4 6FEA0303 		mvn	r3, r3
 20993 00e8 FA68     		ldr	r2, [r7, #12]
 20994 00ea 02EA0303 		and	r3, r2, r3
 20995 00ee FB60     		str	r3, [r7, #12]
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 20996              		.loc 1 639 0
 20997 00f0 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 20998 00f2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 20999 00f4 03F1FF32 		add	r2, r3, #-1
 21000 00f8 1346     		mov	r3, r2
 21001 00fa 4FEA8303 		lsl	r3, r3, #2
 21002 00fe 9B18     		adds	r3, r3, r2
 21003 0100 01FA03F3 		lsl	r3, r1, r3
 21004 0104 BB60     		str	r3, [r7, #8]
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 21005              		.loc 1 641 0
 21006 0106 FA68     		ldr	r2, [r7, #12]
 21007 0108 BB68     		ldr	r3, [r7, #8]
 21008 010a 42EA0303 		orr	r3, r2, r3
 21009 010e FB60     		str	r3, [r7, #12]
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 21010              		.loc 1 643 0
 21011 0110 7B68     		ldr	r3, [r7, #4]
 21012 0112 FA68     		ldr	r2, [r7, #12]
 21013 0114 5A63     		str	r2, [r3, #52]
 21014 0116 55E0     		b	.L38
 21015              	.L41:
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 21016              		.loc 1 646 0
 21017 0118 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 21018 011a 0C2B     		cmp	r3, #12
 21019 011c 29D8     		bhi	.L43
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 21020              		.loc 1 649 0
 21021 011e 7B68     		ldr	r3, [r7, #4]
 21022 0120 1B6B     		ldr	r3, [r3, #48]
 21023 0122 FB60     		str	r3, [r7, #12]
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 21024              		.loc 1 651 0
 21025 0124 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 21026 0126 1346     		mov	r3, r2
 21027 0128 4FEA8303 		lsl	r3, r3, #2
 21028 012c 9B18     		adds	r3, r3, r2
 21029 012e A3F12303 		sub	r3, r3, #35
 21030 0132 4FF01F02 		mov	r2, #31
 21031 0136 02FA03F3 		lsl	r3, r2, r3
 21032 013a BB60     		str	r3, [r7, #8]
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 21033              		.loc 1 653 0
 21034 013c BB68     		ldr	r3, [r7, #8]
 21035 013e 6FEA0303 		mvn	r3, r3
 21036 0142 FA68     		ldr	r2, [r7, #12]
 21037 0144 02EA0303 		and	r3, r2, r3
 21038 0148 FB60     		str	r3, [r7, #12]
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 21039              		.loc 1 655 0
 21040 014a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21041 014c BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 21042 014e 1346     		mov	r3, r2
 21043 0150 4FEA8303 		lsl	r3, r3, #2
 21044 0154 9B18     		adds	r3, r3, r2
 21045 0156 A3F12303 		sub	r3, r3, #35
 21046 015a 01FA03F3 		lsl	r3, r1, r3
 21047 015e BB60     		str	r3, [r7, #8]
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 21048              		.loc 1 657 0
 21049 0160 FA68     		ldr	r2, [r7, #12]
 21050 0162 BB68     		ldr	r3, [r7, #8]
 21051 0164 42EA0303 		orr	r3, r2, r3
 21052 0168 FB60     		str	r3, [r7, #12]
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 21053              		.loc 1 659 0
 21054 016a 7B68     		ldr	r3, [r7, #4]
 21055 016c FA68     		ldr	r2, [r7, #12]
 21056 016e 1A63     		str	r2, [r3, #48]
 21057 0170 28E0     		b	.L38
 21058              	.L43:
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 21059              		.loc 1 665 0
 21060 0172 7B68     		ldr	r3, [r7, #4]
 21061 0174 DB6A     		ldr	r3, [r3, #44]
 21062 0176 FB60     		str	r3, [r7, #12]
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 21063              		.loc 1 667 0
 21064 0178 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 21065 017a 1346     		mov	r3, r2
 21066 017c 4FEA8303 		lsl	r3, r3, #2
 21067 0180 9B18     		adds	r3, r3, r2
 21068 0182 A3F14103 		sub	r3, r3, #65
 21069 0186 4FF01F02 		mov	r2, #31
 21070 018a 02FA03F3 		lsl	r3, r2, r3
 21071 018e BB60     		str	r3, [r7, #8]
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 21072              		.loc 1 669 0
 21073 0190 BB68     		ldr	r3, [r7, #8]
 21074 0192 6FEA0303 		mvn	r3, r3
 21075 0196 FA68     		ldr	r2, [r7, #12]
 21076 0198 02EA0303 		and	r3, r2, r3
 21077 019c FB60     		str	r3, [r7, #12]
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 21078              		.loc 1 671 0
 21079 019e F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21080 01a0 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 21081 01a2 1346     		mov	r3, r2
 21082 01a4 4FEA8303 		lsl	r3, r3, #2
 21083 01a8 9B18     		adds	r3, r3, r2
 21084 01aa A3F14103 		sub	r3, r3, #65
 21085 01ae 01FA03F3 		lsl	r3, r1, r3
 21086 01b2 BB60     		str	r3, [r7, #8]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 21087              		.loc 1 673 0
 21088 01b4 FA68     		ldr	r2, [r7, #12]
 21089 01b6 BB68     		ldr	r3, [r7, #8]
 21090 01b8 42EA0303 		orr	r3, r2, r3
 21091 01bc FB60     		str	r3, [r7, #12]
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 21092              		.loc 1 675 0
 21093 01be 7B68     		ldr	r3, [r7, #4]
 21094 01c0 FA68     		ldr	r2, [r7, #12]
 21095 01c2 DA62     		str	r2, [r3, #44]
 21096              	.L38:
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21097              		.loc 1 677 0
 21098 01c4 07F11407 		add	r7, r7, #20
 21099 01c8 BD46     		mov	sp, r7
 21100 01ca 80BC     		pop	{r7}
 21101 01cc 7047     		bx	lr
 21102              		.cfi_endproc
 21103              	.LFE43:
 21105 01ce 00BF     		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 21106              		.align	2
 21107              		.global	ADC_ExternalTrigConvCmd
 21108              		.thumb
 21109              		.thumb_func
 21111              	ADC_ExternalTrigConvCmd:
 21112              	.LFB44:
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21113              		.loc 1 687 0
 21114              		.cfi_startproc
 21115              		@ args = 0, pretend = 0, frame = 8
 21116              		@ frame_needed = 1, uses_anonymous_args = 0
 21117              		@ link register save eliminated.
 21118 0000 80B4     		push	{r7}
 21119              	.LCFI45:
 21120              		.cfi_def_cfa_offset 4
 21121 0002 83B0     		sub	sp, sp, #12
 21122              	.LCFI46:
 21123              		.cfi_def_cfa_offset 16
 21124 0004 00AF     		add	r7, sp, #0
 21125              		.cfi_offset 7, -4
 21126              	.LCFI47:
 21127              		.cfi_def_cfa_register 7
 21128 0006 7860     		str	r0, [r7, #4]
 21129 0008 0B46     		mov	r3, r1
 21130 000a FB70     		strb	r3, [r7, #3]
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 21131              		.loc 1 691 0
 21132 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21133 000e 002B     		cmp	r3, #0
 21134 0010 06D0     		beq	.L45
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 21135              		.loc 1 694 0
 21136 0012 7B68     		ldr	r3, [r7, #4]
 21137 0014 9B68     		ldr	r3, [r3, #8]
 21138 0016 43F48012 		orr	r2, r3, #1048576
 21139 001a 7B68     		ldr	r3, [r7, #4]
 21140 001c 9A60     		str	r2, [r3, #8]
 21141 001e 05E0     		b	.L44
 21142              	.L45:
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 21143              		.loc 1 699 0
 21144 0020 7B68     		ldr	r3, [r7, #4]
 21145 0022 9B68     		ldr	r3, [r3, #8]
 21146 0024 23F48012 		bic	r2, r3, #1048576
 21147 0028 7B68     		ldr	r3, [r7, #4]
 21148 002a 9A60     		str	r2, [r3, #8]
 21149              	.L44:
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21150              		.loc 1 701 0
 21151 002c 07F10C07 		add	r7, r7, #12
 21152 0030 BD46     		mov	sp, r7
 21153 0032 80BC     		pop	{r7}
 21154 0034 7047     		bx	lr
 21155              		.cfi_endproc
 21156              	.LFE44:
 21158 0036 00BF     		.section	.text.ADC_GetConversionValue,"ax",%progbits
 21159              		.align	2
 21160              		.global	ADC_GetConversionValue
 21161              		.thumb
 21162              		.thumb_func
 21164              	ADC_GetConversionValue:
 21165              	.LFB45:
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21166              		.loc 1 709 0
 21167              		.cfi_startproc
 21168              		@ args = 0, pretend = 0, frame = 8
 21169              		@ frame_needed = 1, uses_anonymous_args = 0
 21170              		@ link register save eliminated.
 21171 0000 80B4     		push	{r7}
 21172              	.LCFI48:
 21173              		.cfi_def_cfa_offset 4
 21174 0002 83B0     		sub	sp, sp, #12
 21175              	.LCFI49:
 21176              		.cfi_def_cfa_offset 16
 21177 0004 00AF     		add	r7, sp, #0
 21178              		.cfi_offset 7, -4
 21179              	.LCFI50:
 21180              		.cfi_def_cfa_register 7
 21181 0006 7860     		str	r0, [r7, #4]
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 21182              		.loc 1 713 0
 21183 0008 7B68     		ldr	r3, [r7, #4]
 21184 000a DB6C     		ldr	r3, [r3, #76]
 21185 000c 9BB2     		uxth	r3, r3
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21186              		.loc 1 714 0
 21187 000e 1846     		mov	r0, r3
 21188 0010 07F10C07 		add	r7, r7, #12
 21189 0014 BD46     		mov	sp, r7
 21190 0016 80BC     		pop	{r7}
 21191 0018 7047     		bx	lr
 21192              		.cfi_endproc
 21193              	.LFE45:
 21195 001a 00BF     		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 21196              		.align	2
 21197              		.global	ADC_GetDualModeConversionValue
 21198              		.thumb
 21199              		.thumb_func
 21201              	ADC_GetDualModeConversionValue:
 21202              	.LFB46:
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21203              		.loc 1 721 0
 21204              		.cfi_startproc
 21205              		@ args = 0, pretend = 0, frame = 0
 21206              		@ frame_needed = 1, uses_anonymous_args = 0
 21207              		@ link register save eliminated.
 21208 0000 80B4     		push	{r7}
 21209              	.LCFI51:
 21210              		.cfi_def_cfa_offset 4
 21211 0002 00AF     		add	r7, sp, #0
 21212              		.cfi_offset 7, -4
 21213              	.LCFI52:
 21214              		.cfi_def_cfa_register 7
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 21215              		.loc 1 723 0
 21216 0004 024B     		ldr	r3, .L49
 21217 0006 1B68     		ldr	r3, [r3, #0]
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21218              		.loc 1 724 0
 21219 0008 1846     		mov	r0, r3
 21220 000a BD46     		mov	sp, r7
 21221 000c 80BC     		pop	{r7}
 21222 000e 7047     		bx	lr
 21223              	.L50:
 21224              		.align	2
 21225              	.L49:
 21226 0010 4C240140 		.word	1073816652
 21227              		.cfi_endproc
 21228              	.LFE46:
 21230              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 21231              		.align	2
 21232              		.global	ADC_AutoInjectedConvCmd
 21233              		.thumb
 21234              		.thumb_func
 21236              	ADC_AutoInjectedConvCmd:
 21237              	.LFB47:
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21238              		.loc 1 735 0
 21239              		.cfi_startproc
 21240              		@ args = 0, pretend = 0, frame = 8
 21241              		@ frame_needed = 1, uses_anonymous_args = 0
 21242              		@ link register save eliminated.
 21243 0000 80B4     		push	{r7}
 21244              	.LCFI53:
 21245              		.cfi_def_cfa_offset 4
 21246 0002 83B0     		sub	sp, sp, #12
 21247              	.LCFI54:
 21248              		.cfi_def_cfa_offset 16
 21249 0004 00AF     		add	r7, sp, #0
 21250              		.cfi_offset 7, -4
 21251              	.LCFI55:
 21252              		.cfi_def_cfa_register 7
 21253 0006 7860     		str	r0, [r7, #4]
 21254 0008 0B46     		mov	r3, r1
 21255 000a FB70     		strb	r3, [r7, #3]
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 21256              		.loc 1 739 0
 21257 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21258 000e 002B     		cmp	r3, #0
 21259 0010 06D0     		beq	.L52
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 21260              		.loc 1 742 0
 21261 0012 7B68     		ldr	r3, [r7, #4]
 21262 0014 5B68     		ldr	r3, [r3, #4]
 21263 0016 43F48062 		orr	r2, r3, #1024
 21264 001a 7B68     		ldr	r3, [r7, #4]
 21265 001c 5A60     		str	r2, [r3, #4]
 21266 001e 05E0     		b	.L51
 21267              	.L52:
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 21268              		.loc 1 747 0
 21269 0020 7B68     		ldr	r3, [r7, #4]
 21270 0022 5B68     		ldr	r3, [r3, #4]
 21271 0024 23F48062 		bic	r2, r3, #1024
 21272 0028 7B68     		ldr	r3, [r7, #4]
 21273 002a 5A60     		str	r2, [r3, #4]
 21274              	.L51:
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21275              		.loc 1 749 0
 21276 002c 07F10C07 		add	r7, r7, #12
 21277 0030 BD46     		mov	sp, r7
 21278 0032 80BC     		pop	{r7}
 21279 0034 7047     		bx	lr
 21280              		.cfi_endproc
 21281              	.LFE47:
 21283 0036 00BF     		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 21284              		.align	2
 21285              		.global	ADC_InjectedDiscModeCmd
 21286              		.thumb
 21287              		.thumb_func
 21289              	ADC_InjectedDiscModeCmd:
 21290              	.LFB48:
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21291              		.loc 1 761 0
 21292              		.cfi_startproc
 21293              		@ args = 0, pretend = 0, frame = 8
 21294              		@ frame_needed = 1, uses_anonymous_args = 0
 21295              		@ link register save eliminated.
 21296 0000 80B4     		push	{r7}
 21297              	.LCFI56:
 21298              		.cfi_def_cfa_offset 4
 21299 0002 83B0     		sub	sp, sp, #12
 21300              	.LCFI57:
 21301              		.cfi_def_cfa_offset 16
 21302 0004 00AF     		add	r7, sp, #0
 21303              		.cfi_offset 7, -4
 21304              	.LCFI58:
 21305              		.cfi_def_cfa_register 7
 21306 0006 7860     		str	r0, [r7, #4]
 21307 0008 0B46     		mov	r3, r1
 21308 000a FB70     		strb	r3, [r7, #3]
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 21309              		.loc 1 765 0
 21310 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21311 000e 002B     		cmp	r3, #0
 21312 0010 06D0     		beq	.L55
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 21313              		.loc 1 768 0
 21314 0012 7B68     		ldr	r3, [r7, #4]
 21315 0014 5B68     		ldr	r3, [r3, #4]
 21316 0016 43F48052 		orr	r2, r3, #4096
 21317 001a 7B68     		ldr	r3, [r7, #4]
 21318 001c 5A60     		str	r2, [r3, #4]
 21319 001e 05E0     		b	.L54
 21320              	.L55:
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 21321              		.loc 1 773 0
 21322 0020 7B68     		ldr	r3, [r7, #4]
 21323 0022 5B68     		ldr	r3, [r3, #4]
 21324 0024 23F48052 		bic	r2, r3, #4096
 21325 0028 7B68     		ldr	r3, [r7, #4]
 21326 002a 5A60     		str	r2, [r3, #4]
 21327              	.L54:
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21328              		.loc 1 775 0
 21329 002c 07F10C07 		add	r7, r7, #12
 21330 0030 BD46     		mov	sp, r7
 21331 0032 80BC     		pop	{r7}
 21332 0034 7047     		bx	lr
 21333              		.cfi_endproc
 21334              	.LFE48:
 21336 0036 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 21337              		.align	2
 21338              		.global	ADC_ExternalTrigInjectedConvConfig
 21339              		.thumb
 21340              		.thumb_func
 21342              	ADC_ExternalTrigInjectedConvConfig:
 21343              	.LFB49:
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21344              		.loc 1 800 0
 21345              		.cfi_startproc
 21346              		@ args = 0, pretend = 0, frame = 16
 21347              		@ frame_needed = 1, uses_anonymous_args = 0
 21348              		@ link register save eliminated.
 21349 0000 80B4     		push	{r7}
 21350              	.LCFI59:
 21351              		.cfi_def_cfa_offset 4
 21352 0002 85B0     		sub	sp, sp, #20
 21353              	.LCFI60:
 21354              		.cfi_def_cfa_offset 24
 21355 0004 00AF     		add	r7, sp, #0
 21356              		.cfi_offset 7, -4
 21357              	.LCFI61:
 21358              		.cfi_def_cfa_register 7
 21359 0006 7860     		str	r0, [r7, #4]
 21360 0008 3960     		str	r1, [r7, #0]
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 21361              		.loc 1 801 0
 21362 000a 4FF00003 		mov	r3, #0
 21363 000e FB60     		str	r3, [r7, #12]
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 21364              		.loc 1 806 0
 21365 0010 7B68     		ldr	r3, [r7, #4]
 21366 0012 9B68     		ldr	r3, [r3, #8]
 21367 0014 FB60     		str	r3, [r7, #12]
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 21368              		.loc 1 808 0
 21369 0016 FB68     		ldr	r3, [r7, #12]
 21370 0018 23F4E043 		bic	r3, r3, #28672
 21371 001c FB60     		str	r3, [r7, #12]
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 21372              		.loc 1 810 0
 21373 001e FA68     		ldr	r2, [r7, #12]
 21374 0020 3B68     		ldr	r3, [r7, #0]
 21375 0022 42EA0303 		orr	r3, r2, r3
 21376 0026 FB60     		str	r3, [r7, #12]
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 21377              		.loc 1 812 0
 21378 0028 7B68     		ldr	r3, [r7, #4]
 21379 002a FA68     		ldr	r2, [r7, #12]
 21380 002c 9A60     		str	r2, [r3, #8]
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21381              		.loc 1 813 0
 21382 002e 07F11407 		add	r7, r7, #20
 21383 0032 BD46     		mov	sp, r7
 21384 0034 80BC     		pop	{r7}
 21385 0036 7047     		bx	lr
 21386              		.cfi_endproc
 21387              	.LFE49:
 21389              		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 21390              		.align	2
 21391              		.global	ADC_ExternalTrigInjectedConvCmd
 21392              		.thumb
 21393              		.thumb_func
 21395              	ADC_ExternalTrigInjectedConvCmd:
 21396              	.LFB50:
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21397              		.loc 1 825 0
 21398              		.cfi_startproc
 21399              		@ args = 0, pretend = 0, frame = 8
 21400              		@ frame_needed = 1, uses_anonymous_args = 0
 21401              		@ link register save eliminated.
 21402 0000 80B4     		push	{r7}
 21403              	.LCFI62:
 21404              		.cfi_def_cfa_offset 4
 21405 0002 83B0     		sub	sp, sp, #12
 21406              	.LCFI63:
 21407              		.cfi_def_cfa_offset 16
 21408 0004 00AF     		add	r7, sp, #0
 21409              		.cfi_offset 7, -4
 21410              	.LCFI64:
 21411              		.cfi_def_cfa_register 7
 21412 0006 7860     		str	r0, [r7, #4]
 21413 0008 0B46     		mov	r3, r1
 21414 000a FB70     		strb	r3, [r7, #3]
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 21415              		.loc 1 829 0
 21416 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21417 000e 002B     		cmp	r3, #0
 21418 0010 06D0     		beq	.L59
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 21419              		.loc 1 832 0
 21420 0012 7B68     		ldr	r3, [r7, #4]
 21421 0014 9B68     		ldr	r3, [r3, #8]
 21422 0016 43F40042 		orr	r2, r3, #32768
 21423 001a 7B68     		ldr	r3, [r7, #4]
 21424 001c 9A60     		str	r2, [r3, #8]
 21425 001e 05E0     		b	.L58
 21426              	.L59:
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 21427              		.loc 1 837 0
 21428 0020 7B68     		ldr	r3, [r7, #4]
 21429 0022 9B68     		ldr	r3, [r3, #8]
 21430 0024 23F40042 		bic	r2, r3, #32768
 21431 0028 7B68     		ldr	r3, [r7, #4]
 21432 002a 9A60     		str	r2, [r3, #8]
 21433              	.L58:
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21434              		.loc 1 839 0
 21435 002c 07F10C07 		add	r7, r7, #12
 21436 0030 BD46     		mov	sp, r7
 21437 0032 80BC     		pop	{r7}
 21438 0034 7047     		bx	lr
 21439              		.cfi_endproc
 21440              	.LFE50:
 21442 0036 00BF     		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 21443              		.align	2
 21444              		.global	ADC_SoftwareStartInjectedConvCmd
 21445              		.thumb
 21446              		.thumb_func
 21448              	ADC_SoftwareStartInjectedConvCmd:
 21449              	.LFB51:
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21450              		.loc 1 850 0
 21451              		.cfi_startproc
 21452              		@ args = 0, pretend = 0, frame = 8
 21453              		@ frame_needed = 1, uses_anonymous_args = 0
 21454              		@ link register save eliminated.
 21455 0000 80B4     		push	{r7}
 21456              	.LCFI65:
 21457              		.cfi_def_cfa_offset 4
 21458 0002 83B0     		sub	sp, sp, #12
 21459              	.LCFI66:
 21460              		.cfi_def_cfa_offset 16
 21461 0004 00AF     		add	r7, sp, #0
 21462              		.cfi_offset 7, -4
 21463              	.LCFI67:
 21464              		.cfi_def_cfa_register 7
 21465 0006 7860     		str	r0, [r7, #4]
 21466 0008 0B46     		mov	r3, r1
 21467 000a FB70     		strb	r3, [r7, #3]
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 21468              		.loc 1 854 0
 21469 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21470 000e 002B     		cmp	r3, #0
 21471 0010 06D0     		beq	.L62
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 21472              		.loc 1 858 0
 21473 0012 7B68     		ldr	r3, [r7, #4]
 21474 0014 9B68     		ldr	r3, [r3, #8]
 21475 0016 43F40212 		orr	r2, r3, #2129920
 21476 001a 7B68     		ldr	r3, [r7, #4]
 21477 001c 9A60     		str	r2, [r3, #8]
 21478 001e 05E0     		b	.L61
 21479              	.L62:
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 21480              		.loc 1 864 0
 21481 0020 7B68     		ldr	r3, [r7, #4]
 21482 0022 9B68     		ldr	r3, [r3, #8]
 21483 0024 23F40212 		bic	r2, r3, #2129920
 21484 0028 7B68     		ldr	r3, [r7, #4]
 21485 002a 9A60     		str	r2, [r3, #8]
 21486              	.L61:
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21487              		.loc 1 866 0
 21488 002c 07F10C07 		add	r7, r7, #12
 21489 0030 BD46     		mov	sp, r7
 21490 0032 80BC     		pop	{r7}
 21491 0034 7047     		bx	lr
 21492              		.cfi_endproc
 21493              	.LFE51:
 21495 0036 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 21496              		.align	2
 21497              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 21498              		.thumb
 21499              		.thumb_func
 21501              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 21502              	.LFB52:
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21503              		.loc 1 874 0
 21504              		.cfi_startproc
 21505              		@ args = 0, pretend = 0, frame = 16
 21506              		@ frame_needed = 1, uses_anonymous_args = 0
 21507              		@ link register save eliminated.
 21508 0000 80B4     		push	{r7}
 21509              	.LCFI68:
 21510              		.cfi_def_cfa_offset 4
 21511 0002 85B0     		sub	sp, sp, #20
 21512              	.LCFI69:
 21513              		.cfi_def_cfa_offset 24
 21514 0004 00AF     		add	r7, sp, #0
 21515              		.cfi_offset 7, -4
 21516              	.LCFI70:
 21517              		.cfi_def_cfa_register 7
 21518 0006 7860     		str	r0, [r7, #4]
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 21519              		.loc 1 875 0
 21520 0008 4FF00003 		mov	r3, #0
 21521 000c FB73     		strb	r3, [r7, #15]
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 21522              		.loc 1 879 0
 21523 000e 7B68     		ldr	r3, [r7, #4]
 21524 0010 9B68     		ldr	r3, [r3, #8]
 21525 0012 03F40013 		and	r3, r3, #2097152
 21526 0016 002B     		cmp	r3, #0
 21527 0018 03D0     		beq	.L65
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 21528              		.loc 1 882 0
 21529 001a 4FF00103 		mov	r3, #1
 21530 001e FB73     		strb	r3, [r7, #15]
 21531 0020 02E0     		b	.L66
 21532              	.L65:
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 21533              		.loc 1 887 0
 21534 0022 4FF00003 		mov	r3, #0
 21535 0026 FB73     		strb	r3, [r7, #15]
 21536              	.L66:
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 21537              		.loc 1 890 0
 21538 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21539              		.loc 1 891 0
 21540 002a 1846     		mov	r0, r3
 21541 002c 07F11407 		add	r7, r7, #20
 21542 0030 BD46     		mov	sp, r7
 21543 0032 80BC     		pop	{r7}
 21544 0034 7047     		bx	lr
 21545              		.cfi_endproc
 21546              	.LFE52:
 21548 0036 00BF     		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 21549              		.align	2
 21550              		.global	ADC_InjectedChannelConfig
 21551              		.thumb
 21552              		.thumb_func
 21554              	ADC_InjectedChannelConfig:
 21555              	.LFB53:
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21556              		.loc 1 931 0
 21557              		.cfi_startproc
 21558              		@ args = 0, pretend = 0, frame = 24
 21559              		@ frame_needed = 1, uses_anonymous_args = 0
 21560              		@ link register save eliminated.
 21561 0000 80B4     		push	{r7}
 21562              	.LCFI71:
 21563              		.cfi_def_cfa_offset 4
 21564 0002 87B0     		sub	sp, sp, #28
 21565              	.LCFI72:
 21566              		.cfi_def_cfa_offset 32
 21567 0004 00AF     		add	r7, sp, #0
 21568              		.cfi_offset 7, -4
 21569              	.LCFI73:
 21570              		.cfi_def_cfa_register 7
 21571 0006 7860     		str	r0, [r7, #4]
 21572 0008 F970     		strb	r1, [r7, #3]
 21573 000a BA70     		strb	r2, [r7, #2]
 21574 000c 7B70     		strb	r3, [r7, #1]
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 21575              		.loc 1 932 0
 21576 000e 4FF00003 		mov	r3, #0
 21577 0012 7B61     		str	r3, [r7, #20]
 21578 0014 4FF00003 		mov	r3, #0
 21579 0018 3B61     		str	r3, [r7, #16]
 21580 001a 4FF00003 		mov	r3, #0
 21581 001e FB60     		str	r3, [r7, #12]
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 21582              		.loc 1 939 0
 21583 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21584 0022 092B     		cmp	r3, #9
 21585 0024 29D9     		bls	.L68
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 21586              		.loc 1 942 0
 21587 0026 7B68     		ldr	r3, [r7, #4]
 21588 0028 DB68     		ldr	r3, [r3, #12]
 21589 002a 7B61     		str	r3, [r7, #20]
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 21590              		.loc 1 944 0
 21591 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21592 002e 1346     		mov	r3, r2
 21593 0030 4FEA4303 		lsl	r3, r3, #1
 21594 0034 9B18     		adds	r3, r3, r2
 21595 0036 A3F11E03 		sub	r3, r3, #30
 21596 003a 4FF00702 		mov	r2, #7
 21597 003e 02FA03F3 		lsl	r3, r2, r3
 21598 0042 3B61     		str	r3, [r7, #16]
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 21599              		.loc 1 946 0
 21600 0044 3B69     		ldr	r3, [r7, #16]
 21601 0046 6FEA0303 		mvn	r3, r3
 21602 004a 7A69     		ldr	r2, [r7, #20]
 21603 004c 02EA0303 		and	r3, r2, r3
 21604 0050 7B61     		str	r3, [r7, #20]
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 21605              		.loc 1 948 0
 21606 0052 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 21607 0054 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21608 0056 1346     		mov	r3, r2
 21609 0058 4FEA4303 		lsl	r3, r3, #1
 21610 005c 9B18     		adds	r3, r3, r2
 21611 005e A3F11E03 		sub	r3, r3, #30
 21612 0062 01FA03F3 		lsl	r3, r1, r3
 21613 0066 3B61     		str	r3, [r7, #16]
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 21614              		.loc 1 950 0
 21615 0068 7A69     		ldr	r2, [r7, #20]
 21616 006a 3B69     		ldr	r3, [r7, #16]
 21617 006c 42EA0303 		orr	r3, r2, r3
 21618 0070 7B61     		str	r3, [r7, #20]
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 21619              		.loc 1 952 0
 21620 0072 7B68     		ldr	r3, [r7, #4]
 21621 0074 7A69     		ldr	r2, [r7, #20]
 21622 0076 DA60     		str	r2, [r3, #12]
 21623 0078 24E0     		b	.L69
 21624              	.L68:
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 21625              		.loc 1 957 0
 21626 007a 7B68     		ldr	r3, [r7, #4]
 21627 007c 1B69     		ldr	r3, [r3, #16]
 21628 007e 7B61     		str	r3, [r7, #20]
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 21629              		.loc 1 959 0
 21630 0080 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21631 0082 1346     		mov	r3, r2
 21632 0084 4FEA4303 		lsl	r3, r3, #1
 21633 0088 9B18     		adds	r3, r3, r2
 21634 008a 4FF00702 		mov	r2, #7
 21635 008e 02FA03F3 		lsl	r3, r2, r3
 21636 0092 3B61     		str	r3, [r7, #16]
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 21637              		.loc 1 961 0
 21638 0094 3B69     		ldr	r3, [r7, #16]
 21639 0096 6FEA0303 		mvn	r3, r3
 21640 009a 7A69     		ldr	r2, [r7, #20]
 21641 009c 02EA0303 		and	r3, r2, r3
 21642 00a0 7B61     		str	r3, [r7, #20]
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 21643              		.loc 1 963 0
 21644 00a2 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 21645 00a4 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21646 00a6 1346     		mov	r3, r2
 21647 00a8 4FEA4303 		lsl	r3, r3, #1
 21648 00ac 9B18     		adds	r3, r3, r2
 21649 00ae 01FA03F3 		lsl	r3, r1, r3
 21650 00b2 3B61     		str	r3, [r7, #16]
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 21651              		.loc 1 965 0
 21652 00b4 7A69     		ldr	r2, [r7, #20]
 21653 00b6 3B69     		ldr	r3, [r7, #16]
 21654 00b8 42EA0303 		orr	r3, r2, r3
 21655 00bc 7B61     		str	r3, [r7, #20]
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 21656              		.loc 1 967 0
 21657 00be 7B68     		ldr	r3, [r7, #4]
 21658 00c0 7A69     		ldr	r2, [r7, #20]
 21659 00c2 1A61     		str	r2, [r3, #16]
 21660              	.L69:
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 21661              		.loc 1 971 0
 21662 00c4 7B68     		ldr	r3, [r7, #4]
 21663 00c6 9B6B     		ldr	r3, [r3, #56]
 21664 00c8 7B61     		str	r3, [r7, #20]
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 21665              		.loc 1 973 0
 21666 00ca 7B69     		ldr	r3, [r7, #20]
 21667 00cc 03F44013 		and	r3, r3, #3145728
 21668 00d0 4FEA1353 		lsr	r3, r3, #20
 21669 00d4 FB60     		str	r3, [r7, #12]
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 21670              		.loc 1 975 0
 21671 00d6 FB68     		ldr	r3, [r7, #12]
 21672 00d8 DBB2     		uxtb	r3, r3
 21673 00da 6FEA0303 		mvn	r3, r3
 21674 00de DAB2     		uxtb	r2, r3
 21675 00e0 BB78     		ldrb	r3, [r7, #2]
 21676 00e2 D318     		adds	r3, r2, r3
 21677 00e4 DBB2     		uxtb	r3, r3
 21678 00e6 03F10303 		add	r3, r3, #3
 21679 00ea DBB2     		uxtb	r3, r3
 21680 00ec 1A46     		mov	r2, r3
 21681 00ee 1346     		mov	r3, r2
 21682 00f0 4FEA8303 		lsl	r3, r3, #2
 21683 00f4 9B18     		adds	r3, r3, r2
 21684 00f6 4FF01F02 		mov	r2, #31
 21685 00fa 02FA03F3 		lsl	r3, r2, r3
 21686 00fe 3B61     		str	r3, [r7, #16]
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 21687              		.loc 1 977 0
 21688 0100 3B69     		ldr	r3, [r7, #16]
 21689 0102 6FEA0303 		mvn	r3, r3
 21690 0106 7A69     		ldr	r2, [r7, #20]
 21691 0108 02EA0303 		and	r3, r2, r3
 21692 010c 7B61     		str	r3, [r7, #20]
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 21693              		.loc 1 979 0
 21694 010e F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21695 0110 FB68     		ldr	r3, [r7, #12]
 21696 0112 DBB2     		uxtb	r3, r3
 21697 0114 6FEA0303 		mvn	r3, r3
 21698 0118 DAB2     		uxtb	r2, r3
 21699 011a BB78     		ldrb	r3, [r7, #2]
 21700 011c D318     		adds	r3, r2, r3
 21701 011e DBB2     		uxtb	r3, r3
 21702 0120 03F10303 		add	r3, r3, #3
 21703 0124 DBB2     		uxtb	r3, r3
 21704 0126 1A46     		mov	r2, r3
 21705 0128 1346     		mov	r3, r2
 21706 012a 4FEA8303 		lsl	r3, r3, #2
 21707 012e 9B18     		adds	r3, r3, r2
 21708 0130 01FA03F3 		lsl	r3, r1, r3
 21709 0134 3B61     		str	r3, [r7, #16]
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 21710              		.loc 1 981 0
 21711 0136 7A69     		ldr	r2, [r7, #20]
 21712 0138 3B69     		ldr	r3, [r7, #16]
 21713 013a 42EA0303 		orr	r3, r2, r3
 21714 013e 7B61     		str	r3, [r7, #20]
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 21715              		.loc 1 983 0
 21716 0140 7B68     		ldr	r3, [r7, #4]
 21717 0142 7A69     		ldr	r2, [r7, #20]
 21718 0144 9A63     		str	r2, [r3, #56]
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21719              		.loc 1 984 0
 21720 0146 07F11C07 		add	r7, r7, #28
 21721 014a BD46     		mov	sp, r7
 21722 014c 80BC     		pop	{r7}
 21723 014e 7047     		bx	lr
 21724              		.cfi_endproc
 21725              	.LFE53:
 21727              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 21728              		.align	2
 21729              		.global	ADC_InjectedSequencerLengthConfig
 21730              		.thumb
 21731              		.thumb_func
 21733              	ADC_InjectedSequencerLengthConfig:
 21734              	.LFB54:
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21735              		.loc 1 994 0
 21736              		.cfi_startproc
 21737              		@ args = 0, pretend = 0, frame = 16
 21738              		@ frame_needed = 1, uses_anonymous_args = 0
 21739              		@ link register save eliminated.
 21740 0000 80B4     		push	{r7}
 21741              	.LCFI74:
 21742              		.cfi_def_cfa_offset 4
 21743 0002 85B0     		sub	sp, sp, #20
 21744              	.LCFI75:
 21745              		.cfi_def_cfa_offset 24
 21746 0004 00AF     		add	r7, sp, #0
 21747              		.cfi_offset 7, -4
 21748              	.LCFI76:
 21749              		.cfi_def_cfa_register 7
 21750 0006 7860     		str	r0, [r7, #4]
 21751 0008 0B46     		mov	r3, r1
 21752 000a FB70     		strb	r3, [r7, #3]
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 21753              		.loc 1 995 0
 21754 000c 4FF00003 		mov	r3, #0
 21755 0010 FB60     		str	r3, [r7, #12]
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 21756              		.loc 1 996 0
 21757 0012 4FF00003 		mov	r3, #0
 21758 0016 BB60     		str	r3, [r7, #8]
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 21759              		.loc 1 1002 0
 21760 0018 7B68     		ldr	r3, [r7, #4]
 21761 001a 9B6B     		ldr	r3, [r3, #56]
 21762 001c FB60     		str	r3, [r7, #12]
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 21763              		.loc 1 1004 0
 21764 001e FB68     		ldr	r3, [r7, #12]
 21765 0020 23F44013 		bic	r3, r3, #3145728
 21766 0024 FB60     		str	r3, [r7, #12]
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 21767              		.loc 1 1006 0
 21768 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21769 0028 03F1FF33 		add	r3, r3, #-1
 21770 002c BB60     		str	r3, [r7, #8]
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 21771              		.loc 1 1007 0
 21772 002e BB68     		ldr	r3, [r7, #8]
 21773 0030 4FEA0353 		lsl	r3, r3, #20
 21774 0034 FA68     		ldr	r2, [r7, #12]
 21775 0036 42EA0303 		orr	r3, r2, r3
 21776 003a FB60     		str	r3, [r7, #12]
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 21777              		.loc 1 1009 0
 21778 003c 7B68     		ldr	r3, [r7, #4]
 21779 003e FA68     		ldr	r2, [r7, #12]
 21780 0040 9A63     		str	r2, [r3, #56]
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21781              		.loc 1 1010 0
 21782 0042 07F11407 		add	r7, r7, #20
 21783 0046 BD46     		mov	sp, r7
 21784 0048 80BC     		pop	{r7}
 21785 004a 7047     		bx	lr
 21786              		.cfi_endproc
 21787              	.LFE54:
 21789              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 21790              		.align	2
 21791              		.global	ADC_SetInjectedOffset
 21792              		.thumb
 21793              		.thumb_func
 21795              	ADC_SetInjectedOffset:
 21796              	.LFB55:
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21797              		.loc 1 1026 0
 21798              		.cfi_startproc
 21799              		@ args = 0, pretend = 0, frame = 16
 21800              		@ frame_needed = 1, uses_anonymous_args = 0
 21801              		@ link register save eliminated.
 21802 0000 80B4     		push	{r7}
 21803              	.LCFI77:
 21804              		.cfi_def_cfa_offset 4
 21805 0002 85B0     		sub	sp, sp, #20
 21806              	.LCFI78:
 21807              		.cfi_def_cfa_offset 24
 21808 0004 00AF     		add	r7, sp, #0
 21809              		.cfi_offset 7, -4
 21810              	.LCFI79:
 21811              		.cfi_def_cfa_register 7
 21812 0006 7860     		str	r0, [r7, #4]
 21813 0008 1346     		mov	r3, r2
 21814 000a 0A46     		mov	r2, r1
 21815 000c FA70     		strb	r2, [r7, #3]
 21816 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 21817              		.loc 1 1027 0
 21818 0010 4FF00003 		mov	r3, #0
 21819 0014 FB60     		str	r3, [r7, #12]
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 21820              		.loc 1 1034 0
 21821 0016 7B68     		ldr	r3, [r7, #4]
 21822 0018 FB60     		str	r3, [r7, #12]
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 21823              		.loc 1 1035 0
 21824 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21825 001c FB68     		ldr	r3, [r7, #12]
 21826 001e D318     		adds	r3, r2, r3
 21827 0020 FB60     		str	r3, [r7, #12]
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 21828              		.loc 1 1038 0
 21829 0022 FB68     		ldr	r3, [r7, #12]
 21830 0024 3A88     		ldrh	r2, [r7, #0]
 21831 0026 1A60     		str	r2, [r3, #0]
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21832              		.loc 1 1039 0
 21833 0028 07F11407 		add	r7, r7, #20
 21834 002c BD46     		mov	sp, r7
 21835 002e 80BC     		pop	{r7}
 21836 0030 7047     		bx	lr
 21837              		.cfi_endproc
 21838              	.LFE55:
 21840 0032 00BF     		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 21841              		.align	2
 21842              		.global	ADC_GetInjectedConversionValue
 21843              		.thumb
 21844              		.thumb_func
 21846              	ADC_GetInjectedConversionValue:
 21847              	.LFB56:
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21848              		.loc 1 1053 0
 21849              		.cfi_startproc
 21850              		@ args = 0, pretend = 0, frame = 16
 21851              		@ frame_needed = 1, uses_anonymous_args = 0
 21852              		@ link register save eliminated.
 21853 0000 80B4     		push	{r7}
 21854              	.LCFI80:
 21855              		.cfi_def_cfa_offset 4
 21856 0002 85B0     		sub	sp, sp, #20
 21857              	.LCFI81:
 21858              		.cfi_def_cfa_offset 24
 21859 0004 00AF     		add	r7, sp, #0
 21860              		.cfi_offset 7, -4
 21861              	.LCFI82:
 21862              		.cfi_def_cfa_register 7
 21863 0006 7860     		str	r0, [r7, #4]
 21864 0008 0B46     		mov	r3, r1
 21865 000a FB70     		strb	r3, [r7, #3]
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 21866              		.loc 1 1054 0
 21867 000c 4FF00003 		mov	r3, #0
 21868 0010 FB60     		str	r3, [r7, #12]
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 21869              		.loc 1 1060 0
 21870 0012 7B68     		ldr	r3, [r7, #4]
 21871 0014 FB60     		str	r3, [r7, #12]
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 21872              		.loc 1 1061 0
 21873 0016 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21874 0018 FB68     		ldr	r3, [r7, #12]
 21875 001a D318     		adds	r3, r2, r3
 21876 001c 03F12803 		add	r3, r3, #40
 21877 0020 FB60     		str	r3, [r7, #12]
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 21878              		.loc 1 1064 0
 21879 0022 FB68     		ldr	r3, [r7, #12]
 21880 0024 1B68     		ldr	r3, [r3, #0]
 21881 0026 9BB2     		uxth	r3, r3
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21882              		.loc 1 1065 0
 21883 0028 1846     		mov	r0, r3
 21884 002a 07F11407 		add	r7, r7, #20
 21885 002e BD46     		mov	sp, r7
 21886 0030 80BC     		pop	{r7}
 21887 0032 7047     		bx	lr
 21888              		.cfi_endproc
 21889              	.LFE56:
 21891              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 21892              		.align	2
 21893              		.global	ADC_AnalogWatchdogCmd
 21894              		.thumb
 21895              		.thumb_func
 21897              	ADC_AnalogWatchdogCmd:
 21898              	.LFB57:
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21899              		.loc 1 1083 0
 21900              		.cfi_startproc
 21901              		@ args = 0, pretend = 0, frame = 16
 21902              		@ frame_needed = 1, uses_anonymous_args = 0
 21903              		@ link register save eliminated.
 21904 0000 80B4     		push	{r7}
 21905              	.LCFI83:
 21906              		.cfi_def_cfa_offset 4
 21907 0002 85B0     		sub	sp, sp, #20
 21908              	.LCFI84:
 21909              		.cfi_def_cfa_offset 24
 21910 0004 00AF     		add	r7, sp, #0
 21911              		.cfi_offset 7, -4
 21912              	.LCFI85:
 21913              		.cfi_def_cfa_register 7
 21914 0006 7860     		str	r0, [r7, #4]
 21915 0008 3960     		str	r1, [r7, #0]
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 21916              		.loc 1 1084 0
 21917 000a 4FF00003 		mov	r3, #0
 21918 000e FB60     		str	r3, [r7, #12]
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 21919              		.loc 1 1089 0
 21920 0010 7B68     		ldr	r3, [r7, #4]
 21921 0012 5B68     		ldr	r3, [r3, #4]
 21922 0014 FB60     		str	r3, [r7, #12]
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 21923              		.loc 1 1091 0
 21924 0016 FB68     		ldr	r3, [r7, #12]
 21925 0018 23F44003 		bic	r3, r3, #12582912
 21926 001c 23F40073 		bic	r3, r3, #512
 21927 0020 FB60     		str	r3, [r7, #12]
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 21928              		.loc 1 1093 0
 21929 0022 FA68     		ldr	r2, [r7, #12]
 21930 0024 3B68     		ldr	r3, [r7, #0]
 21931 0026 42EA0303 		orr	r3, r2, r3
 21932 002a FB60     		str	r3, [r7, #12]
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 21933              		.loc 1 1095 0
 21934 002c 7B68     		ldr	r3, [r7, #4]
 21935 002e FA68     		ldr	r2, [r7, #12]
 21936 0030 5A60     		str	r2, [r3, #4]
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21937              		.loc 1 1096 0
 21938 0032 07F11407 		add	r7, r7, #20
 21939 0036 BD46     		mov	sp, r7
 21940 0038 80BC     		pop	{r7}
 21941 003a 7047     		bx	lr
 21942              		.cfi_endproc
 21943              	.LFE57:
 21945              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 21946              		.align	2
 21947              		.global	ADC_AnalogWatchdogThresholdsConfig
 21948              		.thumb
 21949              		.thumb_func
 21951              	ADC_AnalogWatchdogThresholdsConfig:
 21952              	.LFB58:
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21953              		.loc 1 1109 0
 21954              		.cfi_startproc
 21955              		@ args = 0, pretend = 0, frame = 8
 21956              		@ frame_needed = 1, uses_anonymous_args = 0
 21957              		@ link register save eliminated.
 21958 0000 80B4     		push	{r7}
 21959              	.LCFI86:
 21960              		.cfi_def_cfa_offset 4
 21961 0002 83B0     		sub	sp, sp, #12
 21962              	.LCFI87:
 21963              		.cfi_def_cfa_offset 16
 21964 0004 00AF     		add	r7, sp, #0
 21965              		.cfi_offset 7, -4
 21966              	.LCFI88:
 21967              		.cfi_def_cfa_register 7
 21968 0006 7860     		str	r0, [r7, #4]
 21969 0008 1346     		mov	r3, r2
 21970 000a 0A46     		mov	r2, r1	@ movhi
 21971 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 21972 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 21973              		.loc 1 1115 0
 21974 0010 7A88     		ldrh	r2, [r7, #2]
 21975 0012 7B68     		ldr	r3, [r7, #4]
 21976 0014 5A62     		str	r2, [r3, #36]
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 21977              		.loc 1 1117 0
 21978 0016 3A88     		ldrh	r2, [r7, #0]
 21979 0018 7B68     		ldr	r3, [r7, #4]
 21980 001a 9A62     		str	r2, [r3, #40]
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 21981              		.loc 1 1118 0
 21982 001c 07F10C07 		add	r7, r7, #12
 21983 0020 BD46     		mov	sp, r7
 21984 0022 80BC     		pop	{r7}
 21985 0024 7047     		bx	lr
 21986              		.cfi_endproc
 21987              	.LFE58:
 21989 0026 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 21990              		.align	2
 21991              		.global	ADC_AnalogWatchdogSingleChannelConfig
 21992              		.thumb
 21993              		.thumb_func
 21995              	ADC_AnalogWatchdogSingleChannelConfig:
 21996              	.LFB59:
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 21997              		.loc 1 1146 0
 21998              		.cfi_startproc
 21999              		@ args = 0, pretend = 0, frame = 16
 22000              		@ frame_needed = 1, uses_anonymous_args = 0
 22001              		@ link register save eliminated.
 22002 0000 80B4     		push	{r7}
 22003              	.LCFI89:
 22004              		.cfi_def_cfa_offset 4
 22005 0002 85B0     		sub	sp, sp, #20
 22006              	.LCFI90:
 22007              		.cfi_def_cfa_offset 24
 22008 0004 00AF     		add	r7, sp, #0
 22009              		.cfi_offset 7, -4
 22010              	.LCFI91:
 22011              		.cfi_def_cfa_register 7
 22012 0006 7860     		str	r0, [r7, #4]
 22013 0008 0B46     		mov	r3, r1
 22014 000a FB70     		strb	r3, [r7, #3]
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 22015              		.loc 1 1147 0
 22016 000c 4FF00003 		mov	r3, #0
 22017 0010 FB60     		str	r3, [r7, #12]
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 22018              		.loc 1 1152 0
 22019 0012 7B68     		ldr	r3, [r7, #4]
 22020 0014 5B68     		ldr	r3, [r3, #4]
 22021 0016 FB60     		str	r3, [r7, #12]
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 22022              		.loc 1 1154 0
 22023 0018 FB68     		ldr	r3, [r7, #12]
 22024 001a 23F01F03 		bic	r3, r3, #31
 22025 001e FB60     		str	r3, [r7, #12]
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 22026              		.loc 1 1156 0
 22027 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22028 0022 FA68     		ldr	r2, [r7, #12]
 22029 0024 42EA0303 		orr	r3, r2, r3
 22030 0028 FB60     		str	r3, [r7, #12]
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 22031              		.loc 1 1158 0
 22032 002a 7B68     		ldr	r3, [r7, #4]
 22033 002c FA68     		ldr	r2, [r7, #12]
 22034 002e 5A60     		str	r2, [r3, #4]
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22035              		.loc 1 1159 0
 22036 0030 07F11407 		add	r7, r7, #20
 22037 0034 BD46     		mov	sp, r7
 22038 0036 80BC     		pop	{r7}
 22039 0038 7047     		bx	lr
 22040              		.cfi_endproc
 22041              	.LFE59:
 22043 003a 00BF     		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 22044              		.align	2
 22045              		.global	ADC_TempSensorVrefintCmd
 22046              		.thumb
 22047              		.thumb_func
 22049              	ADC_TempSensorVrefintCmd:
 22050              	.LFB60:
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 22051              		.loc 1 1168 0
 22052              		.cfi_startproc
 22053              		@ args = 0, pretend = 0, frame = 8
 22054              		@ frame_needed = 1, uses_anonymous_args = 0
 22055              		@ link register save eliminated.
 22056 0000 80B4     		push	{r7}
 22057              	.LCFI92:
 22058              		.cfi_def_cfa_offset 4
 22059 0002 83B0     		sub	sp, sp, #12
 22060              	.LCFI93:
 22061              		.cfi_def_cfa_offset 16
 22062 0004 00AF     		add	r7, sp, #0
 22063              		.cfi_offset 7, -4
 22064              	.LCFI94:
 22065              		.cfi_def_cfa_register 7
 22066 0006 0346     		mov	r3, r0
 22067 0008 FB71     		strb	r3, [r7, #7]
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 22068              		.loc 1 1171 0
 22069 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22070 000c 002B     		cmp	r3, #0
 22071 000e 06D0     		beq	.L77
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 22072              		.loc 1 1174 0
 22073 0010 084B     		ldr	r3, .L79
 22074 0012 084A     		ldr	r2, .L79
 22075 0014 9268     		ldr	r2, [r2, #8]
 22076 0016 42F40002 		orr	r2, r2, #8388608
 22077 001a 9A60     		str	r2, [r3, #8]
 22078 001c 05E0     		b	.L76
 22079              	.L77:
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 22080              		.loc 1 1179 0
 22081 001e 054B     		ldr	r3, .L79
 22082 0020 044A     		ldr	r2, .L79
 22083 0022 9268     		ldr	r2, [r2, #8]
 22084 0024 22F40002 		bic	r2, r2, #8388608
 22085 0028 9A60     		str	r2, [r3, #8]
 22086              	.L76:
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22087              		.loc 1 1181 0
 22088 002a 07F10C07 		add	r7, r7, #12
 22089 002e BD46     		mov	sp, r7
 22090 0030 80BC     		pop	{r7}
 22091 0032 7047     		bx	lr
 22092              	.L80:
 22093              		.align	2
 22094              	.L79:
 22095 0034 00240140 		.word	1073816576
 22096              		.cfi_endproc
 22097              	.LFE60:
 22099              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 22100              		.align	2
 22101              		.global	ADC_GetFlagStatus
 22102              		.thumb
 22103              		.thumb_func
 22105              	ADC_GetFlagStatus:
 22106              	.LFB61:
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 22107              		.loc 1 1196 0
 22108              		.cfi_startproc
 22109              		@ args = 0, pretend = 0, frame = 16
 22110              		@ frame_needed = 1, uses_anonymous_args = 0
 22111              		@ link register save eliminated.
 22112 0000 80B4     		push	{r7}
 22113              	.LCFI95:
 22114              		.cfi_def_cfa_offset 4
 22115 0002 85B0     		sub	sp, sp, #20
 22116              	.LCFI96:
 22117              		.cfi_def_cfa_offset 24
 22118 0004 00AF     		add	r7, sp, #0
 22119              		.cfi_offset 7, -4
 22120              	.LCFI97:
 22121              		.cfi_def_cfa_register 7
 22122 0006 7860     		str	r0, [r7, #4]
 22123 0008 0B46     		mov	r3, r1
 22124 000a FB70     		strb	r3, [r7, #3]
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 22125              		.loc 1 1197 0
 22126 000c 4FF00003 		mov	r3, #0
 22127 0010 FB73     		strb	r3, [r7, #15]
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 22128              		.loc 1 1202 0
 22129 0012 7B68     		ldr	r3, [r7, #4]
 22130 0014 1A68     		ldr	r2, [r3, #0]
 22131 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22132 0018 02EA0303 		and	r3, r2, r3
 22133 001c 002B     		cmp	r3, #0
 22134 001e 03D0     		beq	.L82
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 22135              		.loc 1 1205 0
 22136 0020 4FF00103 		mov	r3, #1
 22137 0024 FB73     		strb	r3, [r7, #15]
 22138 0026 02E0     		b	.L83
 22139              	.L82:
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 22140              		.loc 1 1210 0
 22141 0028 4FF00003 		mov	r3, #0
 22142 002c FB73     		strb	r3, [r7, #15]
 22143              	.L83:
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 22144              		.loc 1 1213 0
 22145 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22146              		.loc 1 1214 0
 22147 0030 1846     		mov	r0, r3
 22148 0032 07F11407 		add	r7, r7, #20
 22149 0036 BD46     		mov	sp, r7
 22150 0038 80BC     		pop	{r7}
 22151 003a 7047     		bx	lr
 22152              		.cfi_endproc
 22153              	.LFE61:
 22155              		.section	.text.ADC_ClearFlag,"ax",%progbits
 22156              		.align	2
 22157              		.global	ADC_ClearFlag
 22158              		.thumb
 22159              		.thumb_func
 22161              	ADC_ClearFlag:
 22162              	.LFB62:
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 22163              		.loc 1 1229 0
 22164              		.cfi_startproc
 22165              		@ args = 0, pretend = 0, frame = 8
 22166              		@ frame_needed = 1, uses_anonymous_args = 0
 22167              		@ link register save eliminated.
 22168 0000 80B4     		push	{r7}
 22169              	.LCFI98:
 22170              		.cfi_def_cfa_offset 4
 22171 0002 83B0     		sub	sp, sp, #12
 22172              	.LCFI99:
 22173              		.cfi_def_cfa_offset 16
 22174 0004 00AF     		add	r7, sp, #0
 22175              		.cfi_offset 7, -4
 22176              	.LCFI100:
 22177              		.cfi_def_cfa_register 7
 22178 0006 7860     		str	r0, [r7, #4]
 22179 0008 0B46     		mov	r3, r1
 22180 000a FB70     		strb	r3, [r7, #3]
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 22181              		.loc 1 1234 0
 22182 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22183 000e 6FEA0302 		mvn	r2, r3
 22184 0012 7B68     		ldr	r3, [r7, #4]
 22185 0014 1A60     		str	r2, [r3, #0]
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22186              		.loc 1 1235 0
 22187 0016 07F10C07 		add	r7, r7, #12
 22188 001a BD46     		mov	sp, r7
 22189 001c 80BC     		pop	{r7}
 22190 001e 7047     		bx	lr
 22191              		.cfi_endproc
 22192              	.LFE62:
 22194              		.section	.text.ADC_GetITStatus,"ax",%progbits
 22195              		.align	2
 22196              		.global	ADC_GetITStatus
 22197              		.thumb
 22198              		.thumb_func
 22200              	ADC_GetITStatus:
 22201              	.LFB63:
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 22202              		.loc 1 1248 0
 22203              		.cfi_startproc
 22204              		@ args = 0, pretend = 0, frame = 24
 22205              		@ frame_needed = 1, uses_anonymous_args = 0
 22206              		@ link register save eliminated.
 22207 0000 80B4     		push	{r7}
 22208              	.LCFI101:
 22209              		.cfi_def_cfa_offset 4
 22210 0002 87B0     		sub	sp, sp, #28
 22211              	.LCFI102:
 22212              		.cfi_def_cfa_offset 32
 22213 0004 00AF     		add	r7, sp, #0
 22214              		.cfi_offset 7, -4
 22215              	.LCFI103:
 22216              		.cfi_def_cfa_register 7
 22217 0006 7860     		str	r0, [r7, #4]
 22218 0008 0B46     		mov	r3, r1
 22219 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 22220              		.loc 1 1249 0
 22221 000c 4FF00003 		mov	r3, #0
 22222 0010 FB75     		strb	r3, [r7, #23]
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 22223              		.loc 1 1250 0
 22224 0012 4FF00003 		mov	r3, #0
 22225 0016 3B61     		str	r3, [r7, #16]
 22226 0018 4FF00003 		mov	r3, #0
 22227 001c FB60     		str	r3, [r7, #12]
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 22228              		.loc 1 1255 0
 22229 001e 7B88     		ldrh	r3, [r7, #2]
 22230 0020 4FEA1323 		lsr	r3, r3, #8
 22231 0024 9BB2     		uxth	r3, r3
 22232 0026 3B61     		str	r3, [r7, #16]
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 22233              		.loc 1 1257 0
 22234 0028 7B68     		ldr	r3, [r7, #4]
 22235 002a 5A68     		ldr	r2, [r3, #4]
 22236 002c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22237 002e DBB2     		uxtb	r3, r3
 22238 0030 02EA0303 		and	r3, r2, r3
 22239 0034 FB60     		str	r3, [r7, #12]
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 22240              		.loc 1 1259 0
 22241 0036 7B68     		ldr	r3, [r7, #4]
 22242 0038 1A68     		ldr	r2, [r3, #0]
 22243 003a 3B69     		ldr	r3, [r7, #16]
 22244 003c 02EA0303 		and	r3, r2, r3
 22245 0040 002B     		cmp	r3, #0
 22246 0042 06D0     		beq	.L86
 22247              		.loc 1 1259 0 is_stmt 0 discriminator 1
 22248 0044 FB68     		ldr	r3, [r7, #12]
 22249 0046 002B     		cmp	r3, #0
 22250 0048 03D0     		beq	.L86
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 22251              		.loc 1 1262 0 is_stmt 1
 22252 004a 4FF00103 		mov	r3, #1
 22253 004e FB75     		strb	r3, [r7, #23]
 22254 0050 02E0     		b	.L87
 22255              	.L86:
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 22256              		.loc 1 1267 0
 22257 0052 4FF00003 		mov	r3, #0
 22258 0056 FB75     		strb	r3, [r7, #23]
 22259              	.L87:
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 22260              		.loc 1 1270 0
 22261 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22262              		.loc 1 1271 0
 22263 005a 1846     		mov	r0, r3
 22264 005c 07F11C07 		add	r7, r7, #28
 22265 0060 BD46     		mov	sp, r7
 22266 0062 80BC     		pop	{r7}
 22267 0064 7047     		bx	lr
 22268              		.cfi_endproc
 22269              	.LFE63:
 22271 0066 00BF     		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 22272              		.align	2
 22273              		.global	ADC_ClearITPendingBit
 22274              		.thumb
 22275              		.thumb_func
 22277              	ADC_ClearITPendingBit:
 22278              	.LFB64:
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 22279              		.loc 1 1284 0
 22280              		.cfi_startproc
 22281              		@ args = 0, pretend = 0, frame = 16
 22282              		@ frame_needed = 1, uses_anonymous_args = 0
 22283              		@ link register save eliminated.
 22284 0000 80B4     		push	{r7}
 22285              	.LCFI104:
 22286              		.cfi_def_cfa_offset 4
 22287 0002 85B0     		sub	sp, sp, #20
 22288              	.LCFI105:
 22289              		.cfi_def_cfa_offset 24
 22290 0004 00AF     		add	r7, sp, #0
 22291              		.cfi_offset 7, -4
 22292              	.LCFI106:
 22293              		.cfi_def_cfa_register 7
 22294 0006 7860     		str	r0, [r7, #4]
 22295 0008 0B46     		mov	r3, r1
 22296 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 22297              		.loc 1 1285 0
 22298 000c 4FF00003 		mov	r3, #0
 22299 0010 FB73     		strb	r3, [r7, #15]
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 22300              		.loc 1 1290 0
 22301 0012 7B88     		ldrh	r3, [r7, #2]
 22302 0014 4FEA1323 		lsr	r3, r3, #8
 22303 0018 9BB2     		uxth	r3, r3
 22304 001a FB73     		strb	r3, [r7, #15]
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 22305              		.loc 1 1292 0
 22306 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22307 001e 6FEA0302 		mvn	r2, r3
 22308 0022 7B68     		ldr	r3, [r7, #4]
 22309 0024 1A60     		str	r2, [r3, #0]
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 22310              		.loc 1 1293 0
 22311 0026 07F11407 		add	r7, r7, #20
 22312 002a BD46     		mov	sp, r7
 22313 002c 80BC     		pop	{r7}
 22314 002e 7047     		bx	lr
 22315              		.cfi_endproc
 22316              	.LFE64:
 22318              		.text
 22319              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20033  .text.ADC_DeInit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20038  .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20107  .text.ADC_DeInit:00000074 $d
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20114  .text.ADC_Init:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20119  .text.ADC_Init:00000000 ADC_Init
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20229  .text.ADC_Init:000000b8 $d
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20234  .text.ADC_StructInit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20239  .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20290  .text.ADC_Cmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20295  .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20343  .text.ADC_DMACmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20348  .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20396  .text.ADC_ITConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20401  .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20460  .text.ADC_ResetCalibration:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20465  .text.ADC_ResetCalibration:00000000 ADC_ResetCalibration
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20498  .text.ADC_GetResetCalibrationStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20503  .text.ADC_GetResetCalibrationStatus:00000000 ADC_GetResetCalibrationStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20551  .text.ADC_StartCalibration:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20556  .text.ADC_StartCalibration:00000000 ADC_StartCalibration
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20589  .text.ADC_GetCalibrationStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20594  .text.ADC_GetCalibrationStatus:00000000 ADC_GetCalibrationStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20642  .text.ADC_SoftwareStartConvCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20647  .text.ADC_SoftwareStartConvCmd:00000000 ADC_SoftwareStartConvCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20695  .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20700  .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20748  .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20753  .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20810  .text.ADC_DiscModeCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20815  .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20863  .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:20868  .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21106  .text.ADC_ExternalTrigConvCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21111  .text.ADC_ExternalTrigConvCmd:00000000 ADC_ExternalTrigConvCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21159  .text.ADC_GetConversionValue:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21164  .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21196  .text.ADC_GetDualModeConversionValue:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21201  .text.ADC_GetDualModeConversionValue:00000000 ADC_GetDualModeConversionValue
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21226  .text.ADC_GetDualModeConversionValue:00000010 $d
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21231  .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21236  .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21284  .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21289  .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21337  .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21342  .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21390  .text.ADC_ExternalTrigInjectedConvCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21395  .text.ADC_ExternalTrigInjectedConvCmd:00000000 ADC_ExternalTrigInjectedConvCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21443  .text.ADC_SoftwareStartInjectedConvCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21448  .text.ADC_SoftwareStartInjectedConvCmd:00000000 ADC_SoftwareStartInjectedConvCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21496  .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21501  .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21549  .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21554  .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21728  .text.ADC_InjectedSequencerLengthConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21733  .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21790  .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21795  .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21841  .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21846  .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21892  .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21897  .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21946  .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21951  .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21990  .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:21995  .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22044  .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22049  .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22095  .text.ADC_TempSensorVrefintCmd:00000034 $d
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22100  .text.ADC_GetFlagStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22105  .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22156  .text.ADC_ClearFlag:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22161  .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22195  .text.ADC_GetITStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22200  .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22272  .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\ccMqaFew.s:22277  .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
