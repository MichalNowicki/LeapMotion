   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_rtc.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c"
 19541              		.align	2
 19542              		.global	RTC_ITConfig
 19543              		.thumb
 19544              		.thumb_func
 19546              	RTC_ITConfig:
 19547              	.LFB29:
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */ 
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19548              		.loc 1 91 0
 19549              		.cfi_startproc
 19550              		@ args = 0, pretend = 0, frame = 8
 19551              		@ frame_needed = 1, uses_anonymous_args = 0
 19552              		@ link register save eliminated.
 19553 0000 80B4     		push	{r7}
 19554              	.LCFI0:
 19555              		.cfi_def_cfa_offset 4
 19556 0002 83B0     		sub	sp, sp, #12
 19557              	.LCFI1:
 19558              		.cfi_def_cfa_offset 16
 19559 0004 00AF     		add	r7, sp, #0
 19560              		.cfi_offset 7, -4
 19561              	.LCFI2:
 19562              		.cfi_def_cfa_register 7
 19563 0006 0246     		mov	r2, r0
 19564 0008 0B46     		mov	r3, r1
 19565 000a FA80     		strh	r2, [r7, #6]	@ movhi
 19566 000c 7B71     		strb	r3, [r7, #5]
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
 19567              		.loc 1 96 0
 19568 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 19569 0010 002B     		cmp	r3, #0
 19570 0012 09D0     		beq	.L2
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
 19571              		.loc 1 98 0
 19572 0014 0D4B     		ldr	r3, .L4
 19573 0016 0D4A     		ldr	r2, .L4
 19574 0018 1288     		ldrh	r2, [r2, #0]	@ movhi
 19575 001a 91B2     		uxth	r1, r2
 19576 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 19577 001e 41EA0202 		orr	r2, r1, r2
 19578 0022 92B2     		uxth	r2, r2
 19579 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 19580 0026 0BE0     		b	.L1
 19581              	.L2:
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
 19582              		.loc 1 102 0
 19583 0028 084B     		ldr	r3, .L4
 19584 002a 084A     		ldr	r2, .L4
 19585 002c 1288     		ldrh	r2, [r2, #0]	@ movhi
 19586 002e 91B2     		uxth	r1, r2
 19587 0030 FA88     		ldrh	r2, [r7, #6]	@ movhi
 19588 0032 6FEA0202 		mvn	r2, r2
 19589 0036 92B2     		uxth	r2, r2
 19590 0038 01EA0202 		and	r2, r1, r2
 19591 003c 92B2     		uxth	r2, r2
 19592 003e 1A80     		strh	r2, [r3, #0]	@ movhi
 19593              	.L1:
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19594              		.loc 1 104 0
 19595 0040 07F10C07 		add	r7, r7, #12
 19596 0044 BD46     		mov	sp, r7
 19597 0046 80BC     		pop	{r7}
 19598 0048 7047     		bx	lr
 19599              	.L5:
 19600 004a 00BF     		.align	2
 19601              	.L4:
 19602 004c 00280040 		.word	1073752064
 19603              		.cfi_endproc
 19604              	.LFE29:
 19606              		.section	.text.RTC_EnterConfigMode,"ax",%progbits
 19607              		.align	2
 19608              		.global	RTC_EnterConfigMode
 19609              		.thumb
 19610              		.thumb_func
 19612              	RTC_EnterConfigMode:
 19613              	.LFB30:
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19614              		.loc 1 112 0
 19615              		.cfi_startproc
 19616              		@ args = 0, pretend = 0, frame = 0
 19617              		@ frame_needed = 1, uses_anonymous_args = 0
 19618              		@ link register save eliminated.
 19619 0000 80B4     		push	{r7}
 19620              	.LCFI3:
 19621              		.cfi_def_cfa_offset 4
 19622 0002 00AF     		add	r7, sp, #0
 19623              		.cfi_offset 7, -4
 19624              	.LCFI4:
 19625              		.cfi_def_cfa_register 7
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
 19626              		.loc 1 114 0
 19627 0004 054B     		ldr	r3, .L7
 19628 0006 054A     		ldr	r2, .L7
 19629 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 19630 000a 92B2     		uxth	r2, r2
 19631 000c 42F01002 		orr	r2, r2, #16
 19632 0010 92B2     		uxth	r2, r2
 19633 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19634              		.loc 1 115 0
 19635 0014 BD46     		mov	sp, r7
 19636 0016 80BC     		pop	{r7}
 19637 0018 7047     		bx	lr
 19638              	.L8:
 19639 001a 00BF     		.align	2
 19640              	.L7:
 19641 001c 00280040 		.word	1073752064
 19642              		.cfi_endproc
 19643              	.LFE30:
 19645              		.section	.text.RTC_ExitConfigMode,"ax",%progbits
 19646              		.align	2
 19647              		.global	RTC_ExitConfigMode
 19648              		.thumb
 19649              		.thumb_func
 19651              	RTC_ExitConfigMode:
 19652              	.LFB31:
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19653              		.loc 1 123 0
 19654              		.cfi_startproc
 19655              		@ args = 0, pretend = 0, frame = 0
 19656              		@ frame_needed = 1, uses_anonymous_args = 0
 19657              		@ link register save eliminated.
 19658 0000 80B4     		push	{r7}
 19659              	.LCFI5:
 19660              		.cfi_def_cfa_offset 4
 19661 0002 00AF     		add	r7, sp, #0
 19662              		.cfi_offset 7, -4
 19663              	.LCFI6:
 19664              		.cfi_def_cfa_register 7
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
 19665              		.loc 1 125 0
 19666 0004 054B     		ldr	r3, .L10
 19667 0006 054A     		ldr	r2, .L10
 19668 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 19669 000a 92B2     		uxth	r2, r2
 19670 000c 22F01002 		bic	r2, r2, #16
 19671 0010 92B2     		uxth	r2, r2
 19672 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19673              		.loc 1 126 0
 19674 0014 BD46     		mov	sp, r7
 19675 0016 80BC     		pop	{r7}
 19676 0018 7047     		bx	lr
 19677              	.L11:
 19678 001a 00BF     		.align	2
 19679              	.L10:
 19680 001c 00280040 		.word	1073752064
 19681              		.cfi_endproc
 19682              	.LFE31:
 19684              		.section	.text.RTC_GetCounter,"ax",%progbits
 19685              		.align	2
 19686              		.global	RTC_GetCounter
 19687              		.thumb
 19688              		.thumb_func
 19690              	RTC_GetCounter:
 19691              	.LFB32:
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19692              		.loc 1 134 0
 19693              		.cfi_startproc
 19694              		@ args = 0, pretend = 0, frame = 8
 19695              		@ frame_needed = 1, uses_anonymous_args = 0
 19696              		@ link register save eliminated.
 19697 0000 80B4     		push	{r7}
 19698              	.LCFI7:
 19699              		.cfi_def_cfa_offset 4
 19700 0002 83B0     		sub	sp, sp, #12
 19701              	.LCFI8:
 19702              		.cfi_def_cfa_offset 16
 19703 0004 00AF     		add	r7, sp, #0
 19704              		.cfi_offset 7, -4
 19705              	.LCFI9:
 19706              		.cfi_def_cfa_register 7
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint16_t tmp = 0;
 19707              		.loc 1 135 0
 19708 0006 4FF00003 		mov	r3, #0
 19709 000a FB80     		strh	r3, [r7, #6]	@ movhi
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp = RTC->CNTL;
 19710              		.loc 1 136 0
 19711 000c 084B     		ldr	r3, .L13
 19712 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 19713 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return (((uint32_t)RTC->CNTH << 16 ) | tmp) ;
 19714              		.loc 1 137 0
 19715 0012 074B     		ldr	r3, .L13
 19716 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 19717 0016 9BB2     		uxth	r3, r3
 19718 0018 4FEA0342 		lsl	r2, r3, #16
 19719 001c FB88     		ldrh	r3, [r7, #6]
 19720 001e 42EA0303 		orr	r3, r2, r3
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19721              		.loc 1 138 0
 19722 0022 1846     		mov	r0, r3
 19723 0024 07F10C07 		add	r7, r7, #12
 19724 0028 BD46     		mov	sp, r7
 19725 002a 80BC     		pop	{r7}
 19726 002c 7047     		bx	lr
 19727              	.L14:
 19728 002e 00BF     		.align	2
 19729              	.L13:
 19730 0030 00280040 		.word	1073752064
 19731              		.cfi_endproc
 19732              	.LFE32:
 19734              		.section	.text.RTC_SetCounter,"ax",%progbits
 19735              		.align	2
 19736              		.global	RTC_SetCounter
 19737              		.thumb
 19738              		.thumb_func
 19740              	RTC_SetCounter:
 19741              	.LFB33:
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** { 
 19742              		.loc 1 146 0
 19743              		.cfi_startproc
 19744              		@ args = 0, pretend = 0, frame = 8
 19745              		@ frame_needed = 1, uses_anonymous_args = 0
 19746 0000 80B5     		push	{r7, lr}
 19747              	.LCFI10:
 19748              		.cfi_def_cfa_offset 8
 19749 0002 82B0     		sub	sp, sp, #8
 19750              	.LCFI11:
 19751              		.cfi_def_cfa_offset 16
 19752 0004 00AF     		add	r7, sp, #0
 19753              		.cfi_offset 14, -4
 19754              		.cfi_offset 7, -8
 19755              	.LCFI12:
 19756              		.cfi_def_cfa_register 7
 19757 0006 7860     		str	r0, [r7, #4]
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 19758              		.loc 1 147 0
 19759 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 19760              		.loc 1 149 0
 19761 000c 074B     		ldr	r3, .L16
 19762 000e 7A68     		ldr	r2, [r7, #4]
 19763 0010 4FEA1242 		lsr	r2, r2, #16
 19764 0014 92B2     		uxth	r2, r2
 19765 0016 1A83     		strh	r2, [r3, #24]	@ movhi
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 19766              		.loc 1 151 0
 19767 0018 044B     		ldr	r3, .L16
 19768 001a 7A68     		ldr	r2, [r7, #4]
 19769 001c 92B2     		uxth	r2, r2
 19770 001e 9A83     		strh	r2, [r3, #28]	@ movhi
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 19771              		.loc 1 152 0
 19772 0020 FFF7FEFF 		bl	RTC_ExitConfigMode
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19773              		.loc 1 153 0
 19774 0024 07F10807 		add	r7, r7, #8
 19775 0028 BD46     		mov	sp, r7
 19776 002a 80BD     		pop	{r7, pc}
 19777              	.L17:
 19778              		.align	2
 19779              	.L16:
 19780 002c 00280040 		.word	1073752064
 19781              		.cfi_endproc
 19782              	.LFE33:
 19784              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 19785              		.align	2
 19786              		.global	RTC_SetPrescaler
 19787              		.thumb
 19788              		.thumb_func
 19790              	RTC_SetPrescaler:
 19791              	.LFB34:
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19792              		.loc 1 161 0
 19793              		.cfi_startproc
 19794              		@ args = 0, pretend = 0, frame = 8
 19795              		@ frame_needed = 1, uses_anonymous_args = 0
 19796 0000 80B5     		push	{r7, lr}
 19797              	.LCFI13:
 19798              		.cfi_def_cfa_offset 8
 19799 0002 82B0     		sub	sp, sp, #8
 19800              	.LCFI14:
 19801              		.cfi_def_cfa_offset 16
 19802 0004 00AF     		add	r7, sp, #0
 19803              		.cfi_offset 14, -4
 19804              		.cfi_offset 7, -8
 19805              	.LCFI15:
 19806              		.cfi_def_cfa_register 7
 19807 0006 7860     		str	r0, [r7, #4]
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 19808              		.loc 1 165 0
 19809 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 19810              		.loc 1 167 0
 19811 000c 084B     		ldr	r3, .L19
 19812 000e 7A68     		ldr	r2, [r7, #4]
 19813 0010 02F47022 		and	r2, r2, #983040
 19814 0014 4FEA1242 		lsr	r2, r2, #16
 19815 0018 92B2     		uxth	r2, r2
 19816 001a 1A81     		strh	r2, [r3, #8]	@ movhi
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 19817              		.loc 1 169 0
 19818 001c 044B     		ldr	r3, .L19
 19819 001e 7A68     		ldr	r2, [r7, #4]
 19820 0020 92B2     		uxth	r2, r2
 19821 0022 9A81     		strh	r2, [r3, #12]	@ movhi
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 19822              		.loc 1 170 0
 19823 0024 FFF7FEFF 		bl	RTC_ExitConfigMode
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19824              		.loc 1 171 0
 19825 0028 07F10807 		add	r7, r7, #8
 19826 002c BD46     		mov	sp, r7
 19827 002e 80BD     		pop	{r7, pc}
 19828              	.L20:
 19829              		.align	2
 19830              	.L19:
 19831 0030 00280040 		.word	1073752064
 19832              		.cfi_endproc
 19833              	.LFE34:
 19835              		.section	.text.RTC_SetAlarm,"ax",%progbits
 19836              		.align	2
 19837              		.global	RTC_SetAlarm
 19838              		.thumb
 19839              		.thumb_func
 19841              	RTC_SetAlarm:
 19842              	.LFB35:
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {  
 19843              		.loc 1 179 0
 19844              		.cfi_startproc
 19845              		@ args = 0, pretend = 0, frame = 8
 19846              		@ frame_needed = 1, uses_anonymous_args = 0
 19847 0000 80B5     		push	{r7, lr}
 19848              	.LCFI16:
 19849              		.cfi_def_cfa_offset 8
 19850 0002 82B0     		sub	sp, sp, #8
 19851              	.LCFI17:
 19852              		.cfi_def_cfa_offset 16
 19853 0004 00AF     		add	r7, sp, #0
 19854              		.cfi_offset 14, -4
 19855              		.cfi_offset 7, -8
 19856              	.LCFI18:
 19857              		.cfi_def_cfa_register 7
 19858 0006 7860     		str	r0, [r7, #4]
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 19859              		.loc 1 180 0
 19860 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 19861              		.loc 1 182 0
 19862 000c 074B     		ldr	r3, .L22
 19863 000e 7A68     		ldr	r2, [r7, #4]
 19864 0010 4FEA1242 		lsr	r2, r2, #16
 19865 0014 92B2     		uxth	r2, r2
 19866 0016 1A84     		strh	r2, [r3, #32]	@ movhi
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 19867              		.loc 1 184 0
 19868 0018 044B     		ldr	r3, .L22
 19869 001a 7A68     		ldr	r2, [r7, #4]
 19870 001c 92B2     		uxth	r2, r2
 19871 001e 9A84     		strh	r2, [r3, #36]	@ movhi
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 19872              		.loc 1 185 0
 19873 0020 FFF7FEFF 		bl	RTC_ExitConfigMode
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19874              		.loc 1 186 0
 19875 0024 07F10807 		add	r7, r7, #8
 19876 0028 BD46     		mov	sp, r7
 19877 002a 80BD     		pop	{r7, pc}
 19878              	.L23:
 19879              		.align	2
 19880              	.L22:
 19881 002c 00280040 		.word	1073752064
 19882              		.cfi_endproc
 19883              	.LFE35:
 19885              		.section	.text.RTC_GetDivider,"ax",%progbits
 19886              		.align	2
 19887              		.global	RTC_GetDivider
 19888              		.thumb
 19889              		.thumb_func
 19891              	RTC_GetDivider:
 19892              	.LFB36:
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19893              		.loc 1 194 0
 19894              		.cfi_startproc
 19895              		@ args = 0, pretend = 0, frame = 8
 19896              		@ frame_needed = 1, uses_anonymous_args = 0
 19897              		@ link register save eliminated.
 19898 0000 80B4     		push	{r7}
 19899              	.LCFI19:
 19900              		.cfi_def_cfa_offset 4
 19901 0002 83B0     		sub	sp, sp, #12
 19902              	.LCFI20:
 19903              		.cfi_def_cfa_offset 16
 19904 0004 00AF     		add	r7, sp, #0
 19905              		.cfi_offset 7, -4
 19906              	.LCFI21:
 19907              		.cfi_def_cfa_register 7
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 19908              		.loc 1 195 0
 19909 0006 4FF00003 		mov	r3, #0
 19910 000a 7B60     		str	r3, [r7, #4]
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 19911              		.loc 1 196 0
 19912 000c 0A4B     		ldr	r3, .L25
 19913 000e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 19914 0010 9BB2     		uxth	r3, r3
 19915 0012 03F00F03 		and	r3, r3, #15
 19916 0016 4FEA0343 		lsl	r3, r3, #16
 19917 001a 7B60     		str	r3, [r7, #4]
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 19918              		.loc 1 197 0
 19919 001c 064B     		ldr	r3, .L25
 19920 001e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 19921 0020 9BB2     		uxth	r3, r3
 19922 0022 7A68     		ldr	r2, [r7, #4]
 19923 0024 42EA0303 		orr	r3, r2, r3
 19924 0028 7B60     		str	r3, [r7, #4]
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return tmp;
 19925              		.loc 1 198 0
 19926 002a 7B68     		ldr	r3, [r7, #4]
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19927              		.loc 1 199 0
 19928 002c 1846     		mov	r0, r3
 19929 002e 07F10C07 		add	r7, r7, #12
 19930 0032 BD46     		mov	sp, r7
 19931 0034 80BC     		pop	{r7}
 19932 0036 7047     		bx	lr
 19933              	.L26:
 19934              		.align	2
 19935              	.L25:
 19936 0038 00280040 		.word	1073752064
 19937              		.cfi_endproc
 19938              	.LFE36:
 19940              		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 19941              		.align	2
 19942              		.global	RTC_WaitForLastTask
 19943              		.thumb
 19944              		.thumb_func
 19946              	RTC_WaitForLastTask:
 19947              	.LFB37:
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19948              		.loc 1 208 0
 19949              		.cfi_startproc
 19950              		@ args = 0, pretend = 0, frame = 0
 19951              		@ frame_needed = 1, uses_anonymous_args = 0
 19952              		@ link register save eliminated.
 19953 0000 80B4     		push	{r7}
 19954              	.LCFI22:
 19955              		.cfi_def_cfa_offset 4
 19956 0002 00AF     		add	r7, sp, #0
 19957              		.cfi_offset 7, -4
 19958              	.LCFI23:
 19959              		.cfi_def_cfa_register 7
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 19960              		.loc 1 210 0
 19961 0004 00BF     		nop
 19962              	.L28:
 19963              		.loc 1 210 0 is_stmt 0 discriminator 1
 19964 0006 054B     		ldr	r3, .L29
 19965 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 19966 000a 9BB2     		uxth	r3, r3
 19967 000c 03F02003 		and	r3, r3, #32
 19968 0010 002B     		cmp	r3, #0
 19969 0012 F8D0     		beq	.L28
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 19970              		.loc 1 213 0 is_stmt 1
 19971 0014 BD46     		mov	sp, r7
 19972 0016 80BC     		pop	{r7}
 19973 0018 7047     		bx	lr
 19974              	.L30:
 19975 001a 00BF     		.align	2
 19976              	.L29:
 19977 001c 00280040 		.word	1073752064
 19978              		.cfi_endproc
 19979              	.LFE37:
 19981              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 19982              		.align	2
 19983              		.global	RTC_WaitForSynchro
 19984              		.thumb
 19985              		.thumb_func
 19987              	RTC_WaitForSynchro:
 19988              	.LFB38:
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 19989              		.loc 1 224 0
 19990              		.cfi_startproc
 19991              		@ args = 0, pretend = 0, frame = 0
 19992              		@ frame_needed = 1, uses_anonymous_args = 0
 19993              		@ link register save eliminated.
 19994 0000 80B4     		push	{r7}
 19995              	.LCFI24:
 19996              		.cfi_def_cfa_offset 4
 19997 0002 00AF     		add	r7, sp, #0
 19998              		.cfi_offset 7, -4
 19999              	.LCFI25:
 20000              		.cfi_def_cfa_register 7
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
 20001              		.loc 1 226 0
 20002 0004 094B     		ldr	r3, .L33
 20003 0006 094A     		ldr	r2, .L33
 20004 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 20005 000a 92B2     		uxth	r2, r2
 20006 000c 22F00802 		bic	r2, r2, #8
 20007 0010 92B2     		uxth	r2, r2
 20008 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 20009              		.loc 1 228 0
 20010 0014 00BF     		nop
 20011              	.L32:
 20012              		.loc 1 228 0 is_stmt 0 discriminator 1
 20013 0016 054B     		ldr	r3, .L33
 20014 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20015 001a 9BB2     		uxth	r3, r3
 20016 001c 03F00803 		and	r3, r3, #8
 20017 0020 002B     		cmp	r3, #0
 20018 0022 F8D0     		beq	.L32
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 20019              		.loc 1 231 0 is_stmt 1
 20020 0024 BD46     		mov	sp, r7
 20021 0026 80BC     		pop	{r7}
 20022 0028 7047     		bx	lr
 20023              	.L34:
 20024 002a 00BF     		.align	2
 20025              	.L33:
 20026 002c 00280040 		.word	1073752064
 20027              		.cfi_endproc
 20028              	.LFE38:
 20030              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 20031              		.align	2
 20032              		.global	RTC_GetFlagStatus
 20033              		.thumb
 20034              		.thumb_func
 20036              	RTC_GetFlagStatus:
 20037              	.LFB39:
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 20038              		.loc 1 245 0
 20039              		.cfi_startproc
 20040              		@ args = 0, pretend = 0, frame = 16
 20041              		@ frame_needed = 1, uses_anonymous_args = 0
 20042              		@ link register save eliminated.
 20043 0000 80B4     		push	{r7}
 20044              	.LCFI26:
 20045              		.cfi_def_cfa_offset 4
 20046 0002 85B0     		sub	sp, sp, #20
 20047              	.LCFI27:
 20048              		.cfi_def_cfa_offset 24
 20049 0004 00AF     		add	r7, sp, #0
 20050              		.cfi_offset 7, -4
 20051              	.LCFI28:
 20052              		.cfi_def_cfa_register 7
 20053 0006 0346     		mov	r3, r0
 20054 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 20055              		.loc 1 246 0
 20056 000a 4FF00003 		mov	r3, #0
 20057 000e FB73     		strb	r3, [r7, #15]
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 20058              		.loc 1 251 0
 20059 0010 0B4B     		ldr	r3, .L38
 20060 0012 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20061 0014 9AB2     		uxth	r2, r3
 20062 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 20063 0018 02EA0303 		and	r3, r2, r3
 20064 001c 9BB2     		uxth	r3, r3
 20065 001e 002B     		cmp	r3, #0
 20066 0020 03D0     		beq	.L36
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 20067              		.loc 1 253 0
 20068 0022 4FF00103 		mov	r3, #1
 20069 0026 FB73     		strb	r3, [r7, #15]
 20070 0028 02E0     		b	.L37
 20071              	.L36:
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 20072              		.loc 1 257 0
 20073 002a 4FF00003 		mov	r3, #0
 20074 002e FB73     		strb	r3, [r7, #15]
 20075              	.L37:
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 20076              		.loc 1 259 0
 20077 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 20078              		.loc 1 260 0
 20079 0032 1846     		mov	r0, r3
 20080 0034 07F11407 		add	r7, r7, #20
 20081 0038 BD46     		mov	sp, r7
 20082 003a 80BC     		pop	{r7}
 20083 003c 7047     		bx	lr
 20084              	.L39:
 20085 003e 00BF     		.align	2
 20086              	.L38:
 20087 0040 00280040 		.word	1073752064
 20088              		.cfi_endproc
 20089              	.LFE39:
 20091              		.section	.text.RTC_ClearFlag,"ax",%progbits
 20092              		.align	2
 20093              		.global	RTC_ClearFlag
 20094              		.thumb
 20095              		.thumb_func
 20097              	RTC_ClearFlag:
 20098              	.LFB40:
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 20099              		.loc 1 274 0
 20100              		.cfi_startproc
 20101              		@ args = 0, pretend = 0, frame = 8
 20102              		@ frame_needed = 1, uses_anonymous_args = 0
 20103              		@ link register save eliminated.
 20104 0000 80B4     		push	{r7}
 20105              	.LCFI29:
 20106              		.cfi_def_cfa_offset 4
 20107 0002 83B0     		sub	sp, sp, #12
 20108              	.LCFI30:
 20109              		.cfi_def_cfa_offset 16
 20110 0004 00AF     		add	r7, sp, #0
 20111              		.cfi_offset 7, -4
 20112              	.LCFI31:
 20113              		.cfi_def_cfa_register 7
 20114 0006 0346     		mov	r3, r0
 20115 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 20116              		.loc 1 279 0
 20117 000a 084B     		ldr	r3, .L41
 20118 000c 074A     		ldr	r2, .L41
 20119 000e 9288     		ldrh	r2, [r2, #4]	@ movhi
 20120 0010 91B2     		uxth	r1, r2
 20121 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 20122 0014 6FEA0202 		mvn	r2, r2
 20123 0018 92B2     		uxth	r2, r2
 20124 001a 01EA0202 		and	r2, r1, r2
 20125 001e 92B2     		uxth	r2, r2
 20126 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 20127              		.loc 1 280 0
 20128 0022 07F10C07 		add	r7, r7, #12
 20129 0026 BD46     		mov	sp, r7
 20130 0028 80BC     		pop	{r7}
 20131 002a 7047     		bx	lr
 20132              	.L42:
 20133              		.align	2
 20134              	.L41:
 20135 002c 00280040 		.word	1073752064
 20136              		.cfi_endproc
 20137              	.LFE40:
 20139              		.section	.text.RTC_GetITStatus,"ax",%progbits
 20140              		.align	2
 20141              		.global	RTC_GetITStatus
 20142              		.thumb
 20143              		.thumb_func
 20145              	RTC_GetITStatus:
 20146              	.LFB41:
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 20147              		.loc 1 292 0
 20148              		.cfi_startproc
 20149              		@ args = 0, pretend = 0, frame = 16
 20150              		@ frame_needed = 1, uses_anonymous_args = 0
 20151              		@ link register save eliminated.
 20152 0000 80B4     		push	{r7}
 20153              	.LCFI32:
 20154              		.cfi_def_cfa_offset 4
 20155 0002 85B0     		sub	sp, sp, #20
 20156              	.LCFI33:
 20157              		.cfi_def_cfa_offset 24
 20158 0004 00AF     		add	r7, sp, #0
 20159              		.cfi_offset 7, -4
 20160              	.LCFI34:
 20161              		.cfi_def_cfa_register 7
 20162 0006 0346     		mov	r3, r0
 20163 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
 20164              		.loc 1 293 0
 20165 000a 4FF00003 		mov	r3, #0
 20166 000e FB73     		strb	r3, [r7, #15]
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 20167              		.loc 1 297 0
 20168 0010 114B     		ldr	r3, .L46
 20169 0012 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20170 0014 9BB2     		uxth	r3, r3
 20171 0016 DAB2     		uxtb	r2, r3
 20172 0018 FB88     		ldrh	r3, [r7, #6]	@ movhi
 20173 001a DBB2     		uxtb	r3, r3
 20174 001c 02EA0303 		and	r3, r2, r3
 20175 0020 FB73     		strb	r3, [r7, #15]
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 20176              		.loc 1 298 0
 20177 0022 0D4B     		ldr	r3, .L46
 20178 0024 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20179 0026 9AB2     		uxth	r2, r3
 20180 0028 FB88     		ldrh	r3, [r7, #6]	@ movhi
 20181 002a 02EA0303 		and	r3, r2, r3
 20182 002e 9BB2     		uxth	r3, r3
 20183 0030 002B     		cmp	r3, #0
 20184 0032 06D0     		beq	.L44
 20185              		.loc 1 298 0 is_stmt 0 discriminator 1
 20186 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20187 0036 002B     		cmp	r3, #0
 20188 0038 03D0     		beq	.L44
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 20189              		.loc 1 300 0 is_stmt 1
 20190 003a 4FF00103 		mov	r3, #1
 20191 003e FB73     		strb	r3, [r7, #15]
 20192 0040 02E0     		b	.L45
 20193              	.L44:
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 20194              		.loc 1 304 0
 20195 0042 4FF00003 		mov	r3, #0
 20196 0046 FB73     		strb	r3, [r7, #15]
 20197              	.L45:
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 20198              		.loc 1 306 0
 20199 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 20200              		.loc 1 307 0
 20201 004a 1846     		mov	r0, r3
 20202 004c 07F11407 		add	r7, r7, #20
 20203 0050 BD46     		mov	sp, r7
 20204 0052 80BC     		pop	{r7}
 20205 0054 7047     		bx	lr
 20206              	.L47:
 20207 0056 00BF     		.align	2
 20208              	.L46:
 20209 0058 00280040 		.word	1073752064
 20210              		.cfi_endproc
 20211              	.LFE41:
 20213              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 20214              		.align	2
 20215              		.global	RTC_ClearITPendingBit
 20216              		.thumb
 20217              		.thumb_func
 20219              	RTC_ClearITPendingBit:
 20220              	.LFB42:
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 20221              		.loc 1 319 0
 20222              		.cfi_startproc
 20223              		@ args = 0, pretend = 0, frame = 8
 20224              		@ frame_needed = 1, uses_anonymous_args = 0
 20225              		@ link register save eliminated.
 20226 0000 80B4     		push	{r7}
 20227              	.LCFI35:
 20228              		.cfi_def_cfa_offset 4
 20229 0002 83B0     		sub	sp, sp, #12
 20230              	.LCFI36:
 20231              		.cfi_def_cfa_offset 16
 20232 0004 00AF     		add	r7, sp, #0
 20233              		.cfi_offset 7, -4
 20234              	.LCFI37:
 20235              		.cfi_def_cfa_register 7
 20236 0006 0346     		mov	r3, r0
 20237 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 20238              		.loc 1 324 0
 20239 000a 084B     		ldr	r3, .L49
 20240 000c 074A     		ldr	r2, .L49
 20241 000e 9288     		ldrh	r2, [r2, #4]	@ movhi
 20242 0010 91B2     		uxth	r1, r2
 20243 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 20244 0014 6FEA0202 		mvn	r2, r2
 20245 0018 92B2     		uxth	r2, r2
 20246 001a 01EA0202 		and	r2, r1, r2
 20247 001e 92B2     		uxth	r2, r2
 20248 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 20249              		.loc 1 325 0
 20250 0022 07F10C07 		add	r7, r7, #12
 20251 0026 BD46     		mov	sp, r7
 20252 0028 80BC     		pop	{r7}
 20253 002a 7047     		bx	lr
 20254              	.L50:
 20255              		.align	2
 20256              	.L49:
 20257 002c 00280040 		.word	1073752064
 20258              		.cfi_endproc
 20259              	.LFE42:
 20261              		.text
 20262              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rtc.c
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19541  .text.RTC_ITConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19546  .text.RTC_ITConfig:00000000 RTC_ITConfig
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19602  .text.RTC_ITConfig:0000004c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19607  .text.RTC_EnterConfigMode:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19612  .text.RTC_EnterConfigMode:00000000 RTC_EnterConfigMode
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19641  .text.RTC_EnterConfigMode:0000001c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19646  .text.RTC_ExitConfigMode:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19651  .text.RTC_ExitConfigMode:00000000 RTC_ExitConfigMode
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19680  .text.RTC_ExitConfigMode:0000001c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19685  .text.RTC_GetCounter:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19690  .text.RTC_GetCounter:00000000 RTC_GetCounter
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19730  .text.RTC_GetCounter:00000030 $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19735  .text.RTC_SetCounter:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19740  .text.RTC_SetCounter:00000000 RTC_SetCounter
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19780  .text.RTC_SetCounter:0000002c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19785  .text.RTC_SetPrescaler:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19790  .text.RTC_SetPrescaler:00000000 RTC_SetPrescaler
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19831  .text.RTC_SetPrescaler:00000030 $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19836  .text.RTC_SetAlarm:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19841  .text.RTC_SetAlarm:00000000 RTC_SetAlarm
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19881  .text.RTC_SetAlarm:0000002c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19886  .text.RTC_GetDivider:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19891  .text.RTC_GetDivider:00000000 RTC_GetDivider
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19936  .text.RTC_GetDivider:00000038 $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19941  .text.RTC_WaitForLastTask:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19946  .text.RTC_WaitForLastTask:00000000 RTC_WaitForLastTask
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19977  .text.RTC_WaitForLastTask:0000001c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19982  .text.RTC_WaitForSynchro:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:19987  .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20026  .text.RTC_WaitForSynchro:0000002c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20031  .text.RTC_GetFlagStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20036  .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20087  .text.RTC_GetFlagStatus:00000040 $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20092  .text.RTC_ClearFlag:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20097  .text.RTC_ClearFlag:00000000 RTC_ClearFlag
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20135  .text.RTC_ClearFlag:0000002c $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20140  .text.RTC_GetITStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20145  .text.RTC_GetITStatus:00000000 RTC_GetITStatus
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20209  .text.RTC_GetITStatus:00000058 $d
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20214  .text.RTC_ClearITPendingBit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20219  .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
C:\Users\sMi\AppData\Local\Temp\cckpfc4g.s:20257  .text.RTC_ClearITPendingBit:0000002c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
