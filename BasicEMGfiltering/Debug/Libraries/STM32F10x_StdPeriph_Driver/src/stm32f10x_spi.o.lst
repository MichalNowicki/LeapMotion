   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_spi.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c"
 19536              		.align	2
 19537              		.global	SPI_I2S_DeInit
 19538              		.thumb
 19539              		.thumb_func
 19541              	SPI_I2S_DeInit:
 19542              	.LFB29:
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @file    stm32f10x_spi.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief   This file provides all the SPI firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_spi.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_rcc.h"
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI 
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief SPI driver modules
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_TypesDefinitions
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Defines
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SPE mask */
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Set          ((uint16_t)0x0040)
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Reset        ((uint16_t)0xFFBF)
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S I2SE mask */
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Set     ((uint16_t)0x0400)
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Reset   ((uint16_t)0xFBFF)
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCNext mask */
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCNext_Set      ((uint16_t)0x1000)
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCEN mask */
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Set        ((uint16_t)0x2000)
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Reset      ((uint16_t)0xDFFF)
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SSOE mask */
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Set         ((uint16_t)0x0004)
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Reset       ((uint16_t)0xFFFB)
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI registers Masks */
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CLEAR_Mask       ((uint16_t)0x3040)
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI or I2S mode selection masks */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define SPI_Mode_Select      ((uint16_t)0xF7FF)
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_Mode_Select      ((uint16_t)0x0800) 
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S clock source selection masks */
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S2_CLOCK_SRC       ((uint32_t)(0x00020000))
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S3_CLOCK_SRC       ((uint32_t)(0x00040000))
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_MUL_MASK         ((uint32_t)(0x0000F000))
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_DIV_MASK         ((uint32_t)(0x000000F0))
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Macros
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Variables
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_FunctionPrototypes
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Functions
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         reset values (Affects also the I2Ss).
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19543              		.loc 1 120 0
 19544              		.cfi_startproc
 19545              		@ args = 0, pretend = 0, frame = 8
 19546              		@ frame_needed = 1, uses_anonymous_args = 0
 19547 0000 80B5     		push	{r7, lr}
 19548              	.LCFI0:
 19549              		.cfi_def_cfa_offset 8
 19550 0002 82B0     		sub	sp, sp, #8
 19551              	.LCFI1:
 19552              		.cfi_def_cfa_offset 16
 19553 0004 00AF     		add	r7, sp, #0
 19554              		.cfi_offset 14, -4
 19555              		.cfi_offset 7, -8
 19556              	.LCFI2:
 19557              		.cfi_def_cfa_register 7
 19558 0006 7860     		str	r0, [r7, #4]
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPIx == SPI1)
 19559              		.loc 1 124 0
 19560 0008 7A68     		ldr	r2, [r7, #4]
 19561 000a 1A4B     		ldr	r3, .L5
 19562 000c 9A42     		cmp	r2, r3
 19563 000e 0CD1     		bne	.L2
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI1 reset state */
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 19564              		.loc 1 127 0
 19565 0010 4FF48050 		mov	r0, #4096
 19566 0014 4FF00101 		mov	r1, #1
 19567 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI1 from reset state */
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 19568              		.loc 1 129 0
 19569 001c 4FF48050 		mov	r0, #4096
 19570 0020 4FF00001 		mov	r1, #0
 19571 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 19572 0028 20E0     		b	.L1
 19573              	.L2:
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
 19574              		.loc 1 131 0
 19575 002a 7A68     		ldr	r2, [r7, #4]
 19576 002c 124B     		ldr	r3, .L5+4
 19577 002e 9A42     		cmp	r2, r3
 19578 0030 0CD1     		bne	.L4
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI2 reset state */
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 19579              		.loc 1 134 0
 19580 0032 4FF48040 		mov	r0, #16384
 19581 0036 4FF00101 		mov	r1, #1
 19582 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI2 from reset state */
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 19583              		.loc 1 136 0
 19584 003e 4FF48040 		mov	r0, #16384
 19585 0042 4FF00001 		mov	r1, #0
 19586 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 19587 004a 0FE0     		b	.L1
 19588              	.L4:
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
 19589              		.loc 1 140 0
 19590 004c 7A68     		ldr	r2, [r7, #4]
 19591 004e 0B4B     		ldr	r3, .L5+8
 19592 0050 9A42     		cmp	r2, r3
 19593 0052 0BD1     		bne	.L1
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Enable SPI3 reset state */
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 19594              		.loc 1 143 0
 19595 0054 4FF40040 		mov	r0, #32768
 19596 0058 4FF00101 		mov	r1, #1
 19597 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Release SPI3 from reset state */
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 19598              		.loc 1 145 0
 19599 0060 4FF40040 		mov	r0, #32768
 19600 0064 4FF00001 		mov	r1, #0
 19601 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 19602              	.L1:
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19603              		.loc 1 148 0
 19604 006c 07F10807 		add	r7, r7, #8
 19605 0070 BD46     		mov	sp, r7
 19606 0072 80BD     		pop	{r7, pc}
 19607              	.L6:
 19608              		.align	2
 19609              	.L5:
 19610 0074 00300140 		.word	1073819648
 19611 0078 00380040 		.word	1073756160
 19612 007c 003C0040 		.word	1073757184
 19613              		.cfi_endproc
 19614              	.LFE29:
 19616              		.section	.text.SPI_Init,"ax",%progbits
 19617              		.align	2
 19618              		.global	SPI_Init
 19619              		.thumb
 19620              		.thumb_func
 19622              	SPI_Init:
 19623              	.LFB30:
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the SPI_InitStruct.
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19624              		.loc 1 159 0
 19625              		.cfi_startproc
 19626              		@ args = 0, pretend = 0, frame = 16
 19627              		@ frame_needed = 1, uses_anonymous_args = 0
 19628              		@ link register save eliminated.
 19629 0000 80B4     		push	{r7}
 19630              	.LCFI3:
 19631              		.cfi_def_cfa_offset 4
 19632 0002 85B0     		sub	sp, sp, #20
 19633              	.LCFI4:
 19634              		.cfi_def_cfa_offset 24
 19635 0004 00AF     		add	r7, sp, #0
 19636              		.cfi_offset 7, -4
 19637              	.LCFI5:
 19638              		.cfi_def_cfa_register 7
 19639 0006 7860     		str	r0, [r7, #4]
 19640 0008 3960     		str	r1, [r7, #0]
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0;
 19641              		.loc 1 160 0
 19642 000a 4FF00003 		mov	r3, #0
 19643 000e FB81     		strh	r3, [r7, #14]	@ movhi
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* check the parameters */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));   
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the SPI parameters */
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPIx CR1 value */
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 19644              		.loc 1 178 0
 19645 0010 7B68     		ldr	r3, [r7, #4]
 19646 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19647 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 19648              		.loc 1 180 0
 19649 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 19650 0018 03F44153 		and	r3, r3, #12352
 19651 001c FB81     		strh	r3, [r7, #14]	@ movhi
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****      master/salve mode, CPOL and CPHA */
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19652              		.loc 1 189 0
 19653 001e 3B68     		ldr	r3, [r7, #0]
 19654 0020 1A88     		ldrh	r2, [r3, #0]
 19655 0022 3B68     		ldr	r3, [r7, #0]
 19656 0024 5B88     		ldrh	r3, [r3, #2]
 19657 0026 42EA0303 		orr	r3, r2, r3
 19658 002a 9AB2     		uxth	r2, r3
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 19659              		.loc 1 190 0
 19660 002c 3B68     		ldr	r3, [r7, #0]
 19661 002e 9B88     		ldrh	r3, [r3, #4]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19662              		.loc 1 189 0
 19663 0030 42EA0303 		orr	r3, r2, r3
 19664 0034 9AB2     		uxth	r2, r3
 19665              		.loc 1 190 0
 19666 0036 3B68     		ldr	r3, [r7, #0]
 19667 0038 DB88     		ldrh	r3, [r3, #6]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19668              		.loc 1 189 0
 19669 003a 42EA0303 		orr	r3, r2, r3
 19670 003e 9AB2     		uxth	r2, r3
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 19671              		.loc 1 191 0
 19672 0040 3B68     		ldr	r3, [r7, #0]
 19673 0042 1B89     		ldrh	r3, [r3, #8]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19674              		.loc 1 189 0
 19675 0044 42EA0303 		orr	r3, r2, r3
 19676 0048 9AB2     		uxth	r2, r3
 19677              		.loc 1 191 0
 19678 004a 3B68     		ldr	r3, [r7, #0]
 19679 004c 5B89     		ldrh	r3, [r3, #10]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19680              		.loc 1 189 0
 19681 004e 42EA0303 		orr	r3, r2, r3
 19682 0052 9AB2     		uxth	r2, r3
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 19683              		.loc 1 192 0
 19684 0054 3B68     		ldr	r3, [r7, #0]
 19685 0056 9B89     		ldrh	r3, [r3, #12]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19686              		.loc 1 189 0
 19687 0058 42EA0303 		orr	r3, r2, r3
 19688 005c 9AB2     		uxth	r2, r3
 19689              		.loc 1 192 0
 19690 005e 3B68     		ldr	r3, [r7, #0]
 19691 0060 DB89     		ldrh	r3, [r3, #14]
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 19692              		.loc 1 189 0
 19693 0062 42EA0303 		orr	r3, r2, r3
 19694 0066 9AB2     		uxth	r2, r3
 19695 0068 FB89     		ldrh	r3, [r7, #14]	@ movhi
 19696 006a 42EA0303 		orr	r3, r2, r3
 19697 006e FB81     		strh	r3, [r7, #14]	@ movhi
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CR1 */
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 = tmpreg;
 19698              		.loc 1 194 0
 19699 0070 7B68     		ldr	r3, [r7, #4]
 19700 0072 FA89     		ldrh	r2, [r7, #14]	@ movhi
 19701 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= SPI_Mode_Select;		
 19702              		.loc 1 197 0
 19703 0076 7B68     		ldr	r3, [r7, #4]
 19704 0078 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 19705 007a 9BB2     		uxth	r3, r3
 19706 007c 23F40063 		bic	r3, r3, #2048
 19707 0080 9AB2     		uxth	r2, r3
 19708 0082 7B68     		ldr	r3, [r7, #4]
 19709 0084 9A83     		strh	r2, [r3, #28]	@ movhi
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CRCPOLY */
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 19710              		.loc 1 201 0
 19711 0086 3B68     		ldr	r3, [r7, #0]
 19712 0088 1A8A     		ldrh	r2, [r3, #16]
 19713 008a 7B68     		ldr	r3, [r7, #4]
 19714 008c 1A82     		strh	r2, [r3, #16]	@ movhi
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19715              		.loc 1 202 0
 19716 008e 07F11407 		add	r7, r7, #20
 19717 0092 BD46     		mov	sp, r7
 19718 0094 80BC     		pop	{r7}
 19719 0096 7047     		bx	lr
 19720              		.cfi_endproc
 19721              	.LFE30:
 19723              		.section	.text.I2S_Init,"ax",%progbits
 19724              		.align	2
 19725              		.global	I2S_Init
 19726              		.thumb
 19727              		.thumb_func
 19729              	I2S_Init:
 19730              	.LFB31:
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the I2S_InitStruct.
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         (configured in I2S mode).
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         configured in I2S mode.
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  The function calculates the optimal prescaler needed to obtain the most 
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  accurate audio frequency (depending on the I2S clock source, the PLL values 
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  and the product configuration). But in case the prescaler value is greater 
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  than 511, the default value (0x02) will be configured instead.  *   
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19731              		.loc 1 220 0
 19732              		.cfi_startproc
 19733              		@ args = 0, pretend = 0, frame = 48
 19734              		@ frame_needed = 1, uses_anonymous_args = 0
 19735 0000 80B5     		push	{r7, lr}
 19736              	.LCFI6:
 19737              		.cfi_def_cfa_offset 8
 19738 0002 8CB0     		sub	sp, sp, #48
 19739              	.LCFI7:
 19740              		.cfi_def_cfa_offset 56
 19741 0004 00AF     		add	r7, sp, #0
 19742              		.cfi_offset 14, -4
 19743              		.cfi_offset 7, -8
 19744              	.LCFI8:
 19745              		.cfi_def_cfa_register 7
 19746 0006 7860     		str	r0, [r7, #4]
 19747 0008 3960     		str	r1, [r7, #0]
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 19748              		.loc 1 221 0
 19749 000a 4FF00003 		mov	r3, #0
 19750 000e FB83     		strh	r3, [r7, #30]	@ movhi
 19751 0010 4FF00203 		mov	r3, #2
 19752 0014 FB85     		strh	r3, [r7, #46]	@ movhi
 19753 0016 4FF00003 		mov	r3, #0
 19754 001a BB85     		strh	r3, [r7, #44]	@ movhi
 19755 001c 4FF00103 		mov	r3, #1
 19756 0020 7B85     		strh	r3, [r7, #42]	@ movhi
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t tmp = 0;
 19757              		.loc 1 222 0
 19758 0022 4FF00003 		mov	r3, #0
 19759 0026 7B62     		str	r3, [r7, #36]
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t sourceclock = 0;
 19760              		.loc 1 224 0
 19761 0028 4FF00003 		mov	r3, #0
 19762 002c 3B62     		str	r3, [r7, #32]
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the I2S parameters */
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 19763              		.loc 1 237 0
 19764 002e 7B68     		ldr	r3, [r7, #4]
 19765 0030 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 19766 0032 9BB2     		uxth	r3, r3
 19767 0034 23F47A63 		bic	r3, r3, #4000
 19768 0038 23F01F03 		bic	r3, r3, #31
 19769 003c 9AB2     		uxth	r2, r3
 19770 003e 7B68     		ldr	r3, [r7, #4]
 19771 0040 9A83     		strh	r2, [r3, #28]	@ movhi
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = 0x0002;
 19772              		.loc 1 238 0
 19773 0042 7B68     		ldr	r3, [r7, #4]
 19774 0044 4FF00202 		mov	r2, #2
 19775 0048 1A84     		strh	r2, [r3, #32]	@ movhi
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the I2SCFGR register value */
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 19776              		.loc 1 241 0
 19777 004a 7B68     		ldr	r3, [r7, #4]
 19778 004c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 19779 004e FB83     		strh	r3, [r7, #30]	@ movhi
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 19780              		.loc 1 244 0
 19781 0050 3B68     		ldr	r3, [r7, #0]
 19782 0052 9B68     		ldr	r3, [r3, #8]
 19783 0054 022B     		cmp	r3, #2
 19784 0056 06D1     		bne	.L9
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 19785              		.loc 1 246 0
 19786 0058 4FF00003 		mov	r3, #0
 19787 005c BB85     		strh	r3, [r7, #44]	@ movhi
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)2;   
 19788              		.loc 1 247 0
 19789 005e 4FF00203 		mov	r3, #2
 19790 0062 FB85     		strh	r3, [r7, #46]	@ movhi
 19791 0064 94E0     		b	.L10
 19792              	.L9:
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 19793              		.loc 1 253 0
 19794 0066 3B68     		ldr	r3, [r7, #0]
 19795 0068 9B88     		ldrh	r3, [r3, #4]
 19796 006a 002B     		cmp	r3, #0
 19797 006c 03D1     		bne	.L11
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 16 bits */
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 1;
 19798              		.loc 1 256 0
 19799 006e 4FF00103 		mov	r3, #1
 19800 0072 7B85     		strh	r3, [r7, #42]	@ movhi
 19801 0074 02E0     		b	.L12
 19802              	.L11:
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 32 bits */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 2;
 19803              		.loc 1 261 0
 19804 0076 4FF00203 		mov	r3, #2
 19805 007a 7B85     		strh	r3, [r7, #42]	@ movhi
 19806              	.L12:
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the I2S clock source mask depending on the peripheral number */
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(((uint32_t)SPIx) == SPI2_BASE)
 19807              		.loc 1 265 0
 19808 007c 7A68     		ldr	r2, [r7, #4]
 19809 007e 604B     		ldr	r3, .L23
 19810 0080 9A42     		cmp	r2, r3
 19811 0082 03D1     		bne	.L13
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S2 */
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S2_CLOCK_SRC;
 19812              		.loc 1 268 0
 19813 0084 4FF40033 		mov	r3, #131072
 19814 0088 7B62     		str	r3, [r7, #36]
 19815 008a 02E0     		b	.L14
 19816              	.L13:
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else 
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S3 */      
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S3_CLOCK_SRC;
 19817              		.loc 1 273 0
 19818 008c 4FF48023 		mov	r3, #262144
 19819 0090 7B62     		str	r3, [r7, #36]
 19820              	.L14:
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the I2S clock source configuration depending on the Device:
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****        Only Connectivity line devices have the PLL3 VCO clock */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #ifdef STM32F10X_CL
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if((RCC->CFGR2 & tmp) != 0)
 19821              		.loc 1 279 0
 19822 0092 5C4B     		ldr	r3, .L23+4
 19823 0094 DA6A     		ldr	r2, [r3, #44]
 19824 0096 7B6A     		ldr	r3, [r7, #36]
 19825 0098 02EA0303 		and	r3, r2, r3
 19826 009c 002B     		cmp	r3, #0
 19827 009e 2BD0     		beq	.L15
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the configuration bits of RCC PLL3 multiplier */
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint32_t)((RCC->CFGR2 & I2S_MUL_MASK) >> 12);
 19828              		.loc 1 282 0
 19829 00a0 584B     		ldr	r3, .L23+4
 19830 00a2 DB6A     		ldr	r3, [r3, #44]
 19831 00a4 03F47043 		and	r3, r3, #61440
 19832 00a8 4FEA1333 		lsr	r3, r3, #12
 19833 00ac 7B62     		str	r3, [r7, #36]
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the value of the PLL3 multiplier */      
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       if((tmp > 5) && (tmp < 15))
 19834              		.loc 1 285 0
 19835 00ae 7B6A     		ldr	r3, [r7, #36]
 19836 00b0 052B     		cmp	r3, #5
 19837 00b2 07D9     		bls	.L16
 19838              		.loc 1 285 0 is_stmt 0 discriminator 1
 19839 00b4 7B6A     		ldr	r3, [r7, #36]
 19840 00b6 0E2B     		cmp	r3, #14
 19841 00b8 04D8     		bhi	.L16
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         /* Multiplier is between 8 and 14 (value 15 is forbidden) */
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         tmp += 2;
 19842              		.loc 1 288 0 is_stmt 1
 19843 00ba 7B6A     		ldr	r3, [r7, #36]
 19844 00bc 03F10203 		add	r3, r3, #2
 19845 00c0 7B62     		str	r3, [r7, #36]
 19846 00c2 05E0     		b	.L17
 19847              	.L16:
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       else
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         if (tmp == 15)
 19848              		.loc 1 292 0
 19849 00c4 7B6A     		ldr	r3, [r7, #36]
 19850 00c6 0F2B     		cmp	r3, #15
 19851 00c8 02D1     		bne	.L17
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         {
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           /* Multiplier is 20 */
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           tmp = 20;
 19852              		.loc 1 295 0
 19853 00ca 4FF01403 		mov	r3, #20
 19854 00ce 7B62     		str	r3, [r7, #36]
 19855              	.L17:
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         }
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }      
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the PREDIV2 value */
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t)(((RCC->CFGR2 & I2S_DIV_MASK) >> 4) + 1);
 19856              		.loc 1 299 0
 19857 00d0 4C4B     		ldr	r3, .L23+4
 19858 00d2 DB6A     		ldr	r3, [r3, #44]
 19859 00d4 03F0F003 		and	r3, r3, #240
 19860 00d8 4FEA1313 		lsr	r3, r3, #4
 19861 00dc 03F10103 		add	r3, r3, #1
 19862 00e0 3B62     		str	r3, [r7, #32]
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Calculate the Source Clock frequency based on PLL3 and PREDIV2 values */
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t) ((HSE_Value / sourceclock) * tmp * 2); 
 19863              		.loc 1 302 0
 19864 00e2 494A     		ldr	r2, .L23+8
 19865 00e4 3B6A     		ldr	r3, [r7, #32]
 19866 00e6 B2FBF3F3 		udiv	r3, r2, r3
 19867 00ea 7A6A     		ldr	r2, [r7, #36]
 19868 00ec 02FB03F3 		mul	r3, r2, r3
 19869 00f0 4FEA4303 		lsl	r3, r3, #1
 19870 00f4 3B62     		str	r3, [r7, #32]
 19871 00f6 06E0     		b	.L18
 19872              	.L15:
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* I2S Clock source is System clock: Get System Clock frequency */
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_GetClocksFreq(&RCC_Clocks);      
 19873              		.loc 1 307 0
 19874 00f8 07F10803 		add	r3, r7, #8
 19875 00fc 1846     		mov	r0, r3
 19876 00fe FFF7FEFF 		bl	RCC_GetClocksFreq
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the source clock value: based on System Clock value */
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = RCC_Clocks.SYSCLK_Frequency;
 19877              		.loc 1 310 0
 19878 0102 BB68     		ldr	r3, [r7, #8]
 19879 0104 3B62     		str	r3, [r7, #32]
 19880              	.L18:
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }        
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #else /* STM32F10X_HD */
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the source clock value: based on System Clock value */
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #endif /* STM32F10X_CL */    
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 19881              		.loc 1 321 0
 19882 0106 3B68     		ldr	r3, [r7, #0]
 19883 0108 DB88     		ldrh	r3, [r3, #6]
 19884 010a B3F5007F 		cmp	r3, #512
 19885 010e 13D1     		bne	.L19
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is enabled */
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 19886              		.loc 1 324 0
 19887 0110 3B6A     		ldr	r3, [r7, #32]
 19888 0112 4FEA1322 		lsr	r2, r3, #8
 19889 0116 1346     		mov	r3, r2
 19890 0118 4FEA8303 		lsl	r3, r3, #2
 19891 011c 9B18     		adds	r3, r3, r2
 19892 011e 4FEA4303 		lsl	r3, r3, #1
 19893 0122 1A46     		mov	r2, r3
 19894 0124 3B68     		ldr	r3, [r7, #0]
 19895 0126 9B68     		ldr	r3, [r3, #8]
 19896 0128 B2FBF3F3 		udiv	r3, r2, r3
 19897 012c 9BB2     		uxth	r3, r3
 19898 012e 03F10503 		add	r3, r3, #5
 19899 0132 9BB2     		uxth	r3, r3
 19900 0134 7B62     		str	r3, [r7, #36]
 19901 0136 15E0     		b	.L20
 19902              	.L19:
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is disabled */
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 19903              		.loc 1 329 0
 19904 0138 7B8D     		ldrh	r3, [r7, #42]
 19905 013a 4FEA4313 		lsl	r3, r3, #5
 19906 013e 3A6A     		ldr	r2, [r7, #32]
 19907 0140 B2FBF3F2 		udiv	r2, r2, r3
 19908 0144 1346     		mov	r3, r2
 19909 0146 4FEA8303 		lsl	r3, r3, #2
 19910 014a 9B18     		adds	r3, r3, r2
 19911 014c 4FEA4303 		lsl	r3, r3, #1
 19912 0150 1A46     		mov	r2, r3
 19913 0152 3B68     		ldr	r3, [r7, #0]
 19914 0154 9B68     		ldr	r3, [r3, #8]
 19915 0156 B2FBF3F3 		udiv	r3, r2, r3
 19916 015a 9BB2     		uxth	r3, r3
 19917 015c 03F10503 		add	r3, r3, #5
 19918 0160 9BB2     		uxth	r3, r3
 19919 0162 7B62     		str	r3, [r7, #36]
 19920              	.L20:
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Remove the floating point */
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     tmp = tmp / 10;  
 19921              		.loc 1 333 0
 19922 0164 7A6A     		ldr	r2, [r7, #36]
 19923 0166 294B     		ldr	r3, .L23+12
 19924 0168 A3FB0213 		umull	r1, r3, r3, r2
 19925 016c 4FEAD303 		lsr	r3, r3, #3
 19926 0170 7B62     		str	r3, [r7, #36]
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the parity of the divider */
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 19927              		.loc 1 336 0
 19928 0172 7B6A     		ldr	r3, [r7, #36]
 19929 0174 9BB2     		uxth	r3, r3
 19930 0176 03F00103 		and	r3, r3, #1
 19931 017a BB85     		strh	r3, [r7, #44]	@ movhi
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the i2sdiv prescaler */
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 19932              		.loc 1 339 0
 19933 017c BB8D     		ldrh	r3, [r7, #44]
 19934 017e 7A6A     		ldr	r2, [r7, #36]
 19935 0180 D31A     		subs	r3, r2, r3
 19936 0182 4FEA5303 		lsr	r3, r3, #1
 19937 0186 FB85     		strh	r3, [r7, #46]	@ movhi
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 19938              		.loc 1 342 0
 19939 0188 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 19940 018a 4FEA0323 		lsl	r3, r3, #8
 19941 018e BB85     		strh	r3, [r7, #44]	@ movhi
 19942              	.L10:
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 19943              		.loc 1 346 0
 19944 0190 FB8D     		ldrh	r3, [r7, #46]
 19945 0192 012B     		cmp	r3, #1
 19946 0194 02D9     		bls	.L21
 19947              		.loc 1 346 0 is_stmt 0 discriminator 1
 19948 0196 FB8D     		ldrh	r3, [r7, #46]
 19949 0198 FF2B     		cmp	r3, #255
 19950 019a 05D9     		bls	.L22
 19951              	.L21:
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the default values */
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = 2;
 19952              		.loc 1 349 0 is_stmt 1
 19953 019c 4FF00203 		mov	r3, #2
 19954 01a0 FB85     		strh	r3, [r7, #46]	@ movhi
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = 0;
 19955              		.loc 1 350 0
 19956 01a2 4FF00003 		mov	r3, #0
 19957 01a6 BB85     		strh	r3, [r7, #44]	@ movhi
 19958              	.L22:
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 19959              		.loc 1 354 0
 19960 01a8 3B68     		ldr	r3, [r7, #0]
 19961 01aa DA88     		ldrh	r2, [r3, #6]
 19962 01ac BB8D     		ldrh	r3, [r7, #44]	@ movhi
 19963 01ae 42EA0303 		orr	r3, r2, r3
 19964 01b2 9AB2     		uxth	r2, r3
 19965 01b4 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 19966 01b6 42EA0303 		orr	r3, r2, r3
 19967 01ba 9AB2     		uxth	r2, r3
 19968 01bc 7B68     		ldr	r3, [r7, #4]
 19969 01be 1A84     		strh	r2, [r3, #32]	@ movhi
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 19970              		.loc 1 357 0
 19971 01c0 3B68     		ldr	r3, [r7, #0]
 19972 01c2 1A88     		ldrh	r2, [r3, #0]
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 19973              		.loc 1 358 0
 19974 01c4 3B68     		ldr	r3, [r7, #0]
 19975 01c6 5988     		ldrh	r1, [r3, #2]
 19976 01c8 3B68     		ldr	r3, [r7, #0]
 19977 01ca 9888     		ldrh	r0, [r3, #4]
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 19978              		.loc 1 359 0
 19979 01cc 3B68     		ldr	r3, [r7, #0]
 19980 01ce 9B89     		ldrh	r3, [r3, #12]
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 19981              		.loc 1 358 0
 19982 01d0 40EA0303 		orr	r3, r0, r3
 19983 01d4 9BB2     		uxth	r3, r3
 19984 01d6 41EA0303 		orr	r3, r1, r3
 19985 01da 9BB2     		uxth	r3, r3
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 19986              		.loc 1 357 0
 19987 01dc 42EA0303 		orr	r3, r2, r3
 19988 01e0 9AB2     		uxth	r2, r3
 19989 01e2 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 19990 01e4 42EA0303 		orr	r3, r2, r3
 19991 01e8 9BB2     		uxth	r3, r3
 19992 01ea 43F40063 		orr	r3, r3, #2048
 19993 01ee FB83     		strh	r3, [r7, #30]	@ movhi
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SCFGR */  
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR = tmpreg;   
 19994              		.loc 1 362 0
 19995 01f0 7B68     		ldr	r3, [r7, #4]
 19996 01f2 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 19997 01f4 9A83     		strh	r2, [r3, #28]	@ movhi
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19998              		.loc 1 363 0
 19999 01f6 07F13007 		add	r7, r7, #48
 20000 01fa BD46     		mov	sp, r7
 20001 01fc 80BD     		pop	{r7, pc}
 20002              	.L24:
 20003 01fe 00BF     		.align	2
 20004              	.L23:
 20005 0200 00380040 		.word	1073756160
 20006 0204 00100240 		.word	1073876992
 20007 0208 80969800 		.word	10000000
 20008 020c CDCCCCCC 		.word	-858993459
 20009              		.cfi_endproc
 20010              	.LFE31:
 20012              		.section	.text.SPI_StructInit,"ax",%progbits
 20013              		.align	2
 20014              		.global	SPI_StructInit
 20015              		.thumb
 20016              		.thumb_func
 20018              	SPI_StructInit:
 20019              	.LFB32:
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct : pointer to a SPI_InitTypeDef structure which will be initialized.
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20020              		.loc 1 371 0
 20021              		.cfi_startproc
 20022              		@ args = 0, pretend = 0, frame = 8
 20023              		@ frame_needed = 1, uses_anonymous_args = 0
 20024              		@ link register save eliminated.
 20025 0000 80B4     		push	{r7}
 20026              	.LCFI9:
 20027              		.cfi_def_cfa_offset 4
 20028 0002 83B0     		sub	sp, sp, #12
 20029              	.LCFI10:
 20030              		.cfi_def_cfa_offset 16
 20031 0004 00AF     		add	r7, sp, #0
 20032              		.cfi_offset 7, -4
 20033              	.LCFI11:
 20034              		.cfi_def_cfa_register 7
 20035 0006 7860     		str	r0, [r7, #4]
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_Direction member */
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 20036              		.loc 1 374 0
 20037 0008 7B68     		ldr	r3, [r7, #4]
 20038 000a 4FF00002 		mov	r2, #0
 20039 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_Mode member */
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 20040              		.loc 1 376 0
 20041 0010 7B68     		ldr	r3, [r7, #4]
 20042 0012 4FF00002 		mov	r2, #0
 20043 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_DataSize member */
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 20044              		.loc 1 378 0
 20045 0018 7B68     		ldr	r3, [r7, #4]
 20046 001a 4FF00002 		mov	r2, #0
 20047 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPOL member */
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 20048              		.loc 1 380 0
 20049 0020 7B68     		ldr	r3, [r7, #4]
 20050 0022 4FF00002 		mov	r2, #0
 20051 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPHA member */
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 20052              		.loc 1 382 0
 20053 0028 7B68     		ldr	r3, [r7, #4]
 20054 002a 4FF00002 		mov	r2, #0
 20055 002e 1A81     		strh	r2, [r3, #8]	@ movhi
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_NSS member */
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 20056              		.loc 1 384 0
 20057 0030 7B68     		ldr	r3, [r7, #4]
 20058 0032 4FF00002 		mov	r2, #0
 20059 0036 5A81     		strh	r2, [r3, #10]	@ movhi
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 20060              		.loc 1 386 0
 20061 0038 7B68     		ldr	r3, [r7, #4]
 20062 003a 4FF00002 		mov	r2, #0
 20063 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_FirstBit member */
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 20064              		.loc 1 388 0
 20065 0040 7B68     		ldr	r3, [r7, #4]
 20066 0042 4FF00002 		mov	r2, #0
 20067 0046 DA81     		strh	r2, [r3, #14]	@ movhi
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 20068              		.loc 1 390 0
 20069 0048 7B68     		ldr	r3, [r7, #4]
 20070 004a 4FF00702 		mov	r2, #7
 20071 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20072              		.loc 1 391 0
 20073 0050 07F10C07 		add	r7, r7, #12
 20074 0054 BD46     		mov	sp, r7
 20075 0056 80BC     		pop	{r7}
 20076 0058 7047     		bx	lr
 20077              		.cfi_endproc
 20078              	.LFE32:
 20080 005a 00BF     		.section	.text.I2S_StructInit,"ax",%progbits
 20081              		.align	2
 20082              		.global	I2S_StructInit
 20083              		.thumb
 20084              		.thumb_func
 20086              	I2S_StructInit:
 20087              	.LFB33:
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct : pointer to a I2S_InitTypeDef structure which will be initialized.
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20088              		.loc 1 399 0
 20089              		.cfi_startproc
 20090              		@ args = 0, pretend = 0, frame = 8
 20091              		@ frame_needed = 1, uses_anonymous_args = 0
 20092              		@ link register save eliminated.
 20093 0000 80B4     		push	{r7}
 20094              	.LCFI12:
 20095              		.cfi_def_cfa_offset 4
 20096 0002 83B0     		sub	sp, sp, #12
 20097              	.LCFI13:
 20098              		.cfi_def_cfa_offset 16
 20099 0004 00AF     		add	r7, sp, #0
 20100              		.cfi_offset 7, -4
 20101              	.LCFI14:
 20102              		.cfi_def_cfa_register 7
 20103 0006 7860     		str	r0, [r7, #4]
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Mode member */
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 20104              		.loc 1 402 0
 20105 0008 7B68     		ldr	r3, [r7, #4]
 20106 000a 4FF00002 		mov	r2, #0
 20107 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Standard member */
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 20108              		.loc 1 405 0
 20109 0010 7B68     		ldr	r3, [r7, #4]
 20110 0012 4FF00002 		mov	r2, #0
 20111 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_DataFormat member */
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 20112              		.loc 1 408 0
 20113 0018 7B68     		ldr	r3, [r7, #4]
 20114 001a 4FF00002 		mov	r2, #0
 20115 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 20116              		.loc 1 411 0
 20117 0020 7B68     		ldr	r3, [r7, #4]
 20118 0022 4FF00002 		mov	r2, #0
 20119 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 20120              		.loc 1 414 0
 20121 0028 7B68     		ldr	r3, [r7, #4]
 20122 002a 4FF00202 		mov	r2, #2
 20123 002e 9A60     		str	r2, [r3, #8]
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_CPOL member */
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 20124              		.loc 1 417 0
 20125 0030 7B68     		ldr	r3, [r7, #4]
 20126 0032 4FF00002 		mov	r2, #0
 20127 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20128              		.loc 1 418 0
 20129 0038 07F10C07 		add	r7, r7, #12
 20130 003c BD46     		mov	sp, r7
 20131 003e 80BC     		pop	{r7}
 20132 0040 7047     		bx	lr
 20133              		.cfi_endproc
 20134              	.LFE33:
 20136 0042 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 20137              		.align	2
 20138              		.global	SPI_Cmd
 20139              		.thumb
 20140              		.thumb_func
 20142              	SPI_Cmd:
 20143              	.LFB34:
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20144              		.loc 1 428 0
 20145              		.cfi_startproc
 20146              		@ args = 0, pretend = 0, frame = 8
 20147              		@ frame_needed = 1, uses_anonymous_args = 0
 20148              		@ link register save eliminated.
 20149 0000 80B4     		push	{r7}
 20150              	.LCFI15:
 20151              		.cfi_def_cfa_offset 4
 20152 0002 83B0     		sub	sp, sp, #12
 20153              	.LCFI16:
 20154              		.cfi_def_cfa_offset 16
 20155 0004 00AF     		add	r7, sp, #0
 20156              		.cfi_offset 7, -4
 20157              	.LCFI17:
 20158              		.cfi_def_cfa_register 7
 20159 0006 7860     		str	r0, [r7, #4]
 20160 0008 0B46     		mov	r3, r1
 20161 000a FB70     		strb	r3, [r7, #3]
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20162              		.loc 1 432 0
 20163 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20164 000e 002B     		cmp	r3, #0
 20165 0010 08D0     		beq	.L28
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral */
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_SPE_Set;
 20166              		.loc 1 435 0
 20167 0012 7B68     		ldr	r3, [r7, #4]
 20168 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20169 0016 9BB2     		uxth	r3, r3
 20170 0018 43F04003 		orr	r3, r3, #64
 20171 001c 9AB2     		uxth	r2, r3
 20172 001e 7B68     		ldr	r3, [r7, #4]
 20173 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 20174 0022 07E0     		b	.L27
 20175              	.L28:
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral */
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_SPE_Reset;
 20176              		.loc 1 440 0
 20177 0024 7B68     		ldr	r3, [r7, #4]
 20178 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20179 0028 9BB2     		uxth	r3, r3
 20180 002a 23F04003 		bic	r3, r3, #64
 20181 002e 9AB2     		uxth	r2, r3
 20182 0030 7B68     		ldr	r3, [r7, #4]
 20183 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 20184              	.L27:
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20185              		.loc 1 442 0
 20186 0034 07F10C07 		add	r7, r7, #12
 20187 0038 BD46     		mov	sp, r7
 20188 003a 80BC     		pop	{r7}
 20189 003c 7047     		bx	lr
 20190              		.cfi_endproc
 20191              	.LFE34:
 20193 003e 00BF     		.section	.text.I2S_Cmd,"ax",%progbits
 20194              		.align	2
 20195              		.global	I2S_Cmd
 20196              		.thumb
 20197              		.thumb_func
 20199              	I2S_Cmd:
 20200              	.LFB35:
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral.
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20201              		.loc 1 452 0
 20202              		.cfi_startproc
 20203              		@ args = 0, pretend = 0, frame = 8
 20204              		@ frame_needed = 1, uses_anonymous_args = 0
 20205              		@ link register save eliminated.
 20206 0000 80B4     		push	{r7}
 20207              	.LCFI18:
 20208              		.cfi_def_cfa_offset 4
 20209 0002 83B0     		sub	sp, sp, #12
 20210              	.LCFI19:
 20211              		.cfi_def_cfa_offset 16
 20212 0004 00AF     		add	r7, sp, #0
 20213              		.cfi_offset 7, -4
 20214              	.LCFI20:
 20215              		.cfi_def_cfa_register 7
 20216 0006 7860     		str	r0, [r7, #4]
 20217 0008 0B46     		mov	r3, r1
 20218 000a FB70     		strb	r3, [r7, #3]
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20219              		.loc 1 456 0
 20220 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20221 000e 002B     		cmp	r3, #0
 20222 0010 08D0     		beq	.L31
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR |= I2SCFGR_I2SE_Set;
 20223              		.loc 1 459 0
 20224 0012 7B68     		ldr	r3, [r7, #4]
 20225 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 20226 0016 9BB2     		uxth	r3, r3
 20227 0018 43F48063 		orr	r3, r3, #1024
 20228 001c 9AB2     		uxth	r2, r3
 20229 001e 7B68     		ldr	r3, [r7, #4]
 20230 0020 9A83     		strh	r2, [r3, #28]	@ movhi
 20231 0022 07E0     		b	.L30
 20232              	.L31:
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral (in I2S mode) */
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR &= I2SCFGR_I2SE_Reset;
 20233              		.loc 1 464 0
 20234 0024 7B68     		ldr	r3, [r7, #4]
 20235 0026 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 20236 0028 9BB2     		uxth	r3, r3
 20237 002a 23F48063 		bic	r3, r3, #1024
 20238 002e 9AB2     		uxth	r2, r3
 20239 0030 7B68     		ldr	r3, [r7, #4]
 20240 0032 9A83     		strh	r2, [r3, #28]	@ movhi
 20241              	.L30:
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20242              		.loc 1 466 0
 20243 0034 07F10C07 		add	r7, r7, #12
 20244 0038 BD46     		mov	sp, r7
 20245 003a 80BC     		pop	{r7}
 20246 003c 7047     		bx	lr
 20247              		.cfi_endproc
 20248              	.LFE35:
 20250 003e 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 20251              		.align	2
 20252              		.global	SPI_I2S_ITConfig
 20253              		.thumb
 20254              		.thumb_func
 20256              	SPI_I2S_ITConfig:
 20257              	.LFB36:
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to be enabled or disabled. 
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_ERR: Error interrupt mask
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the specified SPI/I2S interrupt.
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20258              		.loc 1 483 0
 20259              		.cfi_startproc
 20260              		@ args = 0, pretend = 0, frame = 16
 20261              		@ frame_needed = 1, uses_anonymous_args = 0
 20262              		@ link register save eliminated.
 20263 0000 80B4     		push	{r7}
 20264              	.LCFI21:
 20265              		.cfi_def_cfa_offset 4
 20266 0002 85B0     		sub	sp, sp, #20
 20267              	.LCFI22:
 20268              		.cfi_def_cfa_offset 24
 20269 0004 00AF     		add	r7, sp, #0
 20270              		.cfi_offset 7, -4
 20271              	.LCFI23:
 20272              		.cfi_def_cfa_register 7
 20273 0006 7860     		str	r0, [r7, #4]
 20274 0008 1346     		mov	r3, r2
 20275 000a 0A46     		mov	r2, r1
 20276 000c FA70     		strb	r2, [r7, #3]
 20277 000e BB70     		strb	r3, [r7, #2]
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 20278              		.loc 1 484 0
 20279 0010 4FF00003 		mov	r3, #0
 20280 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 20281 0016 4FF00003 		mov	r3, #0
 20282 001a BB81     		strh	r3, [r7, #12]	@ movhi
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 20283              		.loc 1 491 0
 20284 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20285 001e 4FEA1313 		lsr	r3, r3, #4
 20286 0022 DBB2     		uxtb	r3, r3
 20287 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 20288              		.loc 1 494 0
 20289 0026 FB89     		ldrh	r3, [r7, #14]
 20290 0028 4FF00102 		mov	r2, #1
 20291 002c 02FA03F3 		lsl	r3, r2, r3
 20292 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20293              		.loc 1 496 0
 20294 0032 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 20295 0034 002B     		cmp	r3, #0
 20296 0036 09D0     		beq	.L34
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S interrupt */
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= itmask;
 20297              		.loc 1 499 0
 20298 0038 7B68     		ldr	r3, [r7, #4]
 20299 003a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20300 003c 9AB2     		uxth	r2, r3
 20301 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 20302 0040 42EA0303 		orr	r3, r2, r3
 20303 0044 9AB2     		uxth	r2, r3
 20304 0046 7B68     		ldr	r3, [r7, #4]
 20305 0048 9A80     		strh	r2, [r3, #4]	@ movhi
 20306 004a 0BE0     		b	.L33
 20307              	.L34:
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S interrupt */
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 20308              		.loc 1 504 0
 20309 004c 7B68     		ldr	r3, [r7, #4]
 20310 004e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20311 0050 9AB2     		uxth	r2, r3
 20312 0052 BB89     		ldrh	r3, [r7, #12]	@ movhi
 20313 0054 6FEA0303 		mvn	r3, r3
 20314 0058 9BB2     		uxth	r3, r3
 20315 005a 02EA0303 		and	r3, r2, r3
 20316 005e 9AB2     		uxth	r2, r3
 20317 0060 7B68     		ldr	r3, [r7, #4]
 20318 0062 9A80     		strh	r2, [r3, #4]	@ movhi
 20319              	.L33:
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20320              		.loc 1 506 0
 20321 0064 07F11407 		add	r7, r7, #20
 20322 0068 BD46     		mov	sp, r7
 20323 006a 80BC     		pop	{r7}
 20324 006c 7047     		bx	lr
 20325              		.cfi_endproc
 20326              	.LFE36:
 20328 006e 00BF     		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 20329              		.align	2
 20330              		.global	SPI_I2S_DMACmd
 20331              		.thumb
 20332              		.thumb_func
 20334              	SPI_I2S_DMACmd:
 20335              	.LFB37:
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI/I2S DMA transfer request to be enabled or disabled. 
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be any combination of the following values:
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the selected SPI/I2S DMA transfer request.
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20336              		.loc 1 522 0
 20337              		.cfi_startproc
 20338              		@ args = 0, pretend = 0, frame = 8
 20339              		@ frame_needed = 1, uses_anonymous_args = 0
 20340              		@ link register save eliminated.
 20341 0000 80B4     		push	{r7}
 20342              	.LCFI24:
 20343              		.cfi_def_cfa_offset 4
 20344 0002 83B0     		sub	sp, sp, #12
 20345              	.LCFI25:
 20346              		.cfi_def_cfa_offset 16
 20347 0004 00AF     		add	r7, sp, #0
 20348              		.cfi_offset 7, -4
 20349              	.LCFI26:
 20350              		.cfi_def_cfa_register 7
 20351 0006 7860     		str	r0, [r7, #4]
 20352 0008 1346     		mov	r3, r2
 20353 000a 0A46     		mov	r2, r1	@ movhi
 20354 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 20355 000e 7B70     		strb	r3, [r7, #1]
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20356              		.loc 1 527 0
 20357 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20358 0012 002B     		cmp	r3, #0
 20359 0014 09D0     		beq	.L37
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S DMA requests */
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 20360              		.loc 1 530 0
 20361 0016 7B68     		ldr	r3, [r7, #4]
 20362 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20363 001a 9AB2     		uxth	r2, r3
 20364 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20365 001e 42EA0303 		orr	r3, r2, r3
 20366 0022 9AB2     		uxth	r2, r3
 20367 0024 7B68     		ldr	r3, [r7, #4]
 20368 0026 9A80     		strh	r2, [r3, #4]	@ movhi
 20369 0028 0BE0     		b	.L36
 20370              	.L37:
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S DMA requests */
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 20371              		.loc 1 535 0
 20372 002a 7B68     		ldr	r3, [r7, #4]
 20373 002c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20374 002e 9AB2     		uxth	r2, r3
 20375 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20376 0032 6FEA0303 		mvn	r3, r3
 20377 0036 9BB2     		uxth	r3, r3
 20378 0038 02EA0303 		and	r3, r2, r3
 20379 003c 9AB2     		uxth	r2, r3
 20380 003e 7B68     		ldr	r3, [r7, #4]
 20381 0040 9A80     		strh	r2, [r3, #4]	@ movhi
 20382              	.L36:
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20383              		.loc 1 537 0
 20384 0042 07F10C07 		add	r7, r7, #12
 20385 0046 BD46     		mov	sp, r7
 20386 0048 80BC     		pop	{r7}
 20387 004a 7047     		bx	lr
 20388              		.cfi_endproc
 20389              	.LFE37:
 20391              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 20392              		.align	2
 20393              		.global	SPI_I2S_SendData
 20394              		.thumb
 20395              		.thumb_func
 20397              	SPI_I2S_SendData:
 20398              	.LFB38:
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  Data : Data to be transmitted.
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20399              		.loc 1 548 0
 20400              		.cfi_startproc
 20401              		@ args = 0, pretend = 0, frame = 8
 20402              		@ frame_needed = 1, uses_anonymous_args = 0
 20403              		@ link register save eliminated.
 20404 0000 80B4     		push	{r7}
 20405              	.LCFI27:
 20406              		.cfi_def_cfa_offset 4
 20407 0002 83B0     		sub	sp, sp, #12
 20408              	.LCFI28:
 20409              		.cfi_def_cfa_offset 16
 20410 0004 00AF     		add	r7, sp, #0
 20411              		.cfi_offset 7, -4
 20412              	.LCFI29:
 20413              		.cfi_def_cfa_register 7
 20414 0006 7860     		str	r0, [r7, #4]
 20415 0008 0B46     		mov	r3, r1
 20416 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write in the DR register the data to be sent */
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->DR = Data;
 20417              		.loc 1 553 0
 20418 000c 7B68     		ldr	r3, [r7, #4]
 20419 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 20420 0010 9A81     		strh	r2, [r3, #12]	@ movhi
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20421              		.loc 1 554 0
 20422 0012 07F10C07 		add	r7, r7, #12
 20423 0016 BD46     		mov	sp, r7
 20424 0018 80BC     		pop	{r7}
 20425 001a 7047     		bx	lr
 20426              		.cfi_endproc
 20427              	.LFE38:
 20429              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 20430              		.align	2
 20431              		.global	SPI_I2S_ReceiveData
 20432              		.thumb
 20433              		.thumb_func
 20435              	SPI_I2S_ReceiveData:
 20436              	.LFB39:
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The value of the received data.
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20437              		.loc 1 564 0
 20438              		.cfi_startproc
 20439              		@ args = 0, pretend = 0, frame = 8
 20440              		@ frame_needed = 1, uses_anonymous_args = 0
 20441              		@ link register save eliminated.
 20442 0000 80B4     		push	{r7}
 20443              	.LCFI30:
 20444              		.cfi_def_cfa_offset 4
 20445 0002 83B0     		sub	sp, sp, #12
 20446              	.LCFI31:
 20447              		.cfi_def_cfa_offset 16
 20448 0004 00AF     		add	r7, sp, #0
 20449              		.cfi_offset 7, -4
 20450              	.LCFI32:
 20451              		.cfi_def_cfa_register 7
 20452 0006 7860     		str	r0, [r7, #4]
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the data in the DR register */
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->DR;
 20453              		.loc 1 569 0
 20454 0008 7B68     		ldr	r3, [r7, #4]
 20455 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 20456 000c 9BB2     		uxth	r3, r3
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20457              		.loc 1 570 0
 20458 000e 1846     		mov	r0, r3
 20459 0010 07F10C07 		add	r7, r7, #12
 20460 0014 BD46     		mov	sp, r7
 20461 0016 80BC     		pop	{r7}
 20462 0018 7047     		bx	lr
 20463              		.cfi_endproc
 20464              	.LFE39:
 20466 001a 00BF     		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 20467              		.align	2
 20468              		.global	SPI_NSSInternalSoftwareConfig
 20469              		.thumb
 20470              		.thumb_func
 20472              	SPI_NSSInternalSoftwareConfig:
 20473              	.LFB40:
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20474              		.loc 1 582 0
 20475              		.cfi_startproc
 20476              		@ args = 0, pretend = 0, frame = 8
 20477              		@ frame_needed = 1, uses_anonymous_args = 0
 20478              		@ link register save eliminated.
 20479 0000 80B4     		push	{r7}
 20480              	.LCFI33:
 20481              		.cfi_def_cfa_offset 4
 20482 0002 83B0     		sub	sp, sp, #12
 20483              	.LCFI34:
 20484              		.cfi_def_cfa_offset 16
 20485 0004 00AF     		add	r7, sp, #0
 20486              		.cfi_offset 7, -4
 20487              	.LCFI35:
 20488              		.cfi_def_cfa_register 7
 20489 0006 7860     		str	r0, [r7, #4]
 20490 0008 0B46     		mov	r3, r1
 20491 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 20492              		.loc 1 586 0
 20493 000c 7A88     		ldrh	r2, [r7, #2]
 20494 000e 4FF6FF63 		movw	r3, #65279
 20495 0012 9A42     		cmp	r2, r3
 20496 0014 08D0     		beq	.L42
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set NSS pin internally by software */
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 20497              		.loc 1 589 0
 20498 0016 7B68     		ldr	r3, [r7, #4]
 20499 0018 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20500 001a 9BB2     		uxth	r3, r3
 20501 001c 43F48073 		orr	r3, r3, #256
 20502 0020 9AB2     		uxth	r2, r3
 20503 0022 7B68     		ldr	r3, [r7, #4]
 20504 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 20505 0026 07E0     		b	.L41
 20506              	.L42:
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Reset NSS pin internally by software */
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 20507              		.loc 1 594 0
 20508 0028 7B68     		ldr	r3, [r7, #4]
 20509 002a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20510 002c 9BB2     		uxth	r3, r3
 20511 002e 23F48073 		bic	r3, r3, #256
 20512 0032 9AB2     		uxth	r2, r3
 20513 0034 7B68     		ldr	r3, [r7, #4]
 20514 0036 1A80     		strh	r2, [r3, #0]	@ movhi
 20515              	.L41:
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20516              		.loc 1 596 0
 20517 0038 07F10C07 		add	r7, r7, #12
 20518 003c BD46     		mov	sp, r7
 20519 003e 80BC     		pop	{r7}
 20520 0040 7047     		bx	lr
 20521              		.cfi_endproc
 20522              	.LFE40:
 20524 0042 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 20525              		.align	2
 20526              		.global	SPI_SSOutputCmd
 20527              		.thumb
 20528              		.thumb_func
 20530              	SPI_SSOutputCmd:
 20531              	.LFB41:
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20532              		.loc 1 606 0
 20533              		.cfi_startproc
 20534              		@ args = 0, pretend = 0, frame = 8
 20535              		@ frame_needed = 1, uses_anonymous_args = 0
 20536              		@ link register save eliminated.
 20537 0000 80B4     		push	{r7}
 20538              	.LCFI36:
 20539              		.cfi_def_cfa_offset 4
 20540 0002 83B0     		sub	sp, sp, #12
 20541              	.LCFI37:
 20542              		.cfi_def_cfa_offset 16
 20543 0004 00AF     		add	r7, sp, #0
 20544              		.cfi_offset 7, -4
 20545              	.LCFI38:
 20546              		.cfi_def_cfa_register 7
 20547 0006 7860     		str	r0, [r7, #4]
 20548 0008 0B46     		mov	r3, r1
 20549 000a FB70     		strb	r3, [r7, #3]
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20550              		.loc 1 610 0
 20551 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20552 000e 002B     		cmp	r3, #0
 20553 0010 08D0     		beq	.L45
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI SS output */
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= CR2_SSOE_Set;
 20554              		.loc 1 613 0
 20555 0012 7B68     		ldr	r3, [r7, #4]
 20556 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20557 0016 9BB2     		uxth	r3, r3
 20558 0018 43F00403 		orr	r3, r3, #4
 20559 001c 9AB2     		uxth	r2, r3
 20560 001e 7B68     		ldr	r3, [r7, #4]
 20561 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 20562 0022 07E0     		b	.L44
 20563              	.L45:
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI SS output */
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= CR2_SSOE_Reset;
 20564              		.loc 1 618 0
 20565 0024 7B68     		ldr	r3, [r7, #4]
 20566 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 20567 0028 9BB2     		uxth	r3, r3
 20568 002a 23F00403 		bic	r3, r3, #4
 20569 002e 9AB2     		uxth	r2, r3
 20570 0030 7B68     		ldr	r3, [r7, #4]
 20571 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 20572              	.L44:
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20573              		.loc 1 620 0
 20574 0034 07F10C07 		add	r7, r7, #12
 20575 0038 BD46     		mov	sp, r7
 20576 003a 80BC     		pop	{r7}
 20577 003c 7047     		bx	lr
 20578              		.cfi_endproc
 20579              	.LFE41:
 20581 003e 00BF     		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 20582              		.align	2
 20583              		.global	SPI_DataSizeConfig
 20584              		.thumb
 20585              		.thumb_func
 20587              	SPI_DataSizeConfig:
 20588              	.LFB42:
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_16b: Set data frame format to 16bit
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_8b: Set data frame format to 8bit
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20589              		.loc 1 632 0
 20590              		.cfi_startproc
 20591              		@ args = 0, pretend = 0, frame = 8
 20592              		@ frame_needed = 1, uses_anonymous_args = 0
 20593              		@ link register save eliminated.
 20594 0000 80B4     		push	{r7}
 20595              	.LCFI39:
 20596              		.cfi_def_cfa_offset 4
 20597 0002 83B0     		sub	sp, sp, #12
 20598              	.LCFI40:
 20599              		.cfi_def_cfa_offset 16
 20600 0004 00AF     		add	r7, sp, #0
 20601              		.cfi_offset 7, -4
 20602              	.LCFI41:
 20603              		.cfi_def_cfa_register 7
 20604 0006 7860     		str	r0, [r7, #4]
 20605 0008 0B46     		mov	r3, r1
 20606 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear DFF bit */
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 20607              		.loc 1 637 0
 20608 000c 7B68     		ldr	r3, [r7, #4]
 20609 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20610 0010 9BB2     		uxth	r3, r3
 20611 0012 23F40063 		bic	r3, r3, #2048
 20612 0016 9AB2     		uxth	r2, r3
 20613 0018 7B68     		ldr	r3, [r7, #4]
 20614 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set new DFF bit value */
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 20615              		.loc 1 639 0
 20616 001c 7B68     		ldr	r3, [r7, #4]
 20617 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20618 0020 9AB2     		uxth	r2, r3
 20619 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20620 0024 42EA0303 		orr	r3, r2, r3
 20621 0028 9AB2     		uxth	r2, r3
 20622 002a 7B68     		ldr	r3, [r7, #4]
 20623 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20624              		.loc 1 640 0
 20625 002e 07F10C07 		add	r7, r7, #12
 20626 0032 BD46     		mov	sp, r7
 20627 0034 80BC     		pop	{r7}
 20628 0036 7047     		bx	lr
 20629              		.cfi_endproc
 20630              	.LFE42:
 20632              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 20633              		.align	2
 20634              		.global	SPI_TransmitCRC
 20635              		.thumb
 20636              		.thumb_func
 20638              	SPI_TransmitCRC:
 20639              	.LFB43:
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20640              		.loc 1 648 0
 20641              		.cfi_startproc
 20642              		@ args = 0, pretend = 0, frame = 8
 20643              		@ frame_needed = 1, uses_anonymous_args = 0
 20644              		@ link register save eliminated.
 20645 0000 80B4     		push	{r7}
 20646              	.LCFI42:
 20647              		.cfi_def_cfa_offset 4
 20648 0002 83B0     		sub	sp, sp, #12
 20649              	.LCFI43:
 20650              		.cfi_def_cfa_offset 16
 20651 0004 00AF     		add	r7, sp, #0
 20652              		.cfi_offset 7, -4
 20653              	.LCFI44:
 20654              		.cfi_def_cfa_register 7
 20655 0006 7860     		str	r0, [r7, #4]
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Enable the selected SPI CRC transmission */
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= CR1_CRCNext_Set;
 20656              		.loc 1 653 0
 20657 0008 7B68     		ldr	r3, [r7, #4]
 20658 000a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20659 000c 9BB2     		uxth	r3, r3
 20660 000e 43F48053 		orr	r3, r3, #4096
 20661 0012 9AB2     		uxth	r2, r3
 20662 0014 7B68     		ldr	r3, [r7, #4]
 20663 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20664              		.loc 1 654 0
 20665 0018 07F10C07 		add	r7, r7, #12
 20666 001c BD46     		mov	sp, r7
 20667 001e 80BC     		pop	{r7}
 20668 0020 7047     		bx	lr
 20669              		.cfi_endproc
 20670              	.LFE43:
 20672 0022 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 20673              		.align	2
 20674              		.global	SPI_CalculateCRC
 20675              		.thumb
 20676              		.thumb_func
 20678              	SPI_CalculateCRC:
 20679              	.LFB44:
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20680              		.loc 1 664 0
 20681              		.cfi_startproc
 20682              		@ args = 0, pretend = 0, frame = 8
 20683              		@ frame_needed = 1, uses_anonymous_args = 0
 20684              		@ link register save eliminated.
 20685 0000 80B4     		push	{r7}
 20686              	.LCFI45:
 20687              		.cfi_def_cfa_offset 4
 20688 0002 83B0     		sub	sp, sp, #12
 20689              	.LCFI46:
 20690              		.cfi_def_cfa_offset 16
 20691 0004 00AF     		add	r7, sp, #0
 20692              		.cfi_offset 7, -4
 20693              	.LCFI47:
 20694              		.cfi_def_cfa_register 7
 20695 0006 7860     		str	r0, [r7, #4]
 20696 0008 0B46     		mov	r3, r1
 20697 000a FB70     		strb	r3, [r7, #3]
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 20698              		.loc 1 668 0
 20699 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20700 000e 002B     		cmp	r3, #0
 20701 0010 08D0     		beq	.L50
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI CRC calculation */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_CRCEN_Set;
 20702              		.loc 1 671 0
 20703 0012 7B68     		ldr	r3, [r7, #4]
 20704 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20705 0016 9BB2     		uxth	r3, r3
 20706 0018 43F40053 		orr	r3, r3, #8192
 20707 001c 9AB2     		uxth	r2, r3
 20708 001e 7B68     		ldr	r3, [r7, #4]
 20709 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 20710 0022 07E0     		b	.L49
 20711              	.L50:
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI CRC calculation */
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_CRCEN_Reset;
 20712              		.loc 1 676 0
 20713 0024 7B68     		ldr	r3, [r7, #4]
 20714 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20715 0028 9BB2     		uxth	r3, r3
 20716 002a 23F40053 		bic	r3, r3, #8192
 20717 002e 9AB2     		uxth	r2, r3
 20718 0030 7B68     		ldr	r3, [r7, #4]
 20719 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 20720              	.L49:
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20721              		.loc 1 678 0
 20722 0034 07F10C07 		add	r7, r7, #12
 20723 0038 BD46     		mov	sp, r7
 20724 003a 80BC     		pop	{r7}
 20725 003c 7047     		bx	lr
 20726              		.cfi_endproc
 20727              	.LFE44:
 20729 003e 00BF     		.section	.text.SPI_GetCRC,"ax",%progbits
 20730              		.align	2
 20731              		.global	SPI_GetCRC
 20732              		.thumb
 20733              		.thumb_func
 20735              	SPI_GetCRC:
 20736              	.LFB45:
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Tx: Selects Tx CRC register
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Rx: Selects Rx CRC register
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The selected CRC register value..
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20737              		.loc 1 690 0
 20738              		.cfi_startproc
 20739              		@ args = 0, pretend = 0, frame = 16
 20740              		@ frame_needed = 1, uses_anonymous_args = 0
 20741              		@ link register save eliminated.
 20742 0000 80B4     		push	{r7}
 20743              	.LCFI48:
 20744              		.cfi_def_cfa_offset 4
 20745 0002 85B0     		sub	sp, sp, #20
 20746              	.LCFI49:
 20747              		.cfi_def_cfa_offset 24
 20748 0004 00AF     		add	r7, sp, #0
 20749              		.cfi_offset 7, -4
 20750              	.LCFI50:
 20751              		.cfi_def_cfa_register 7
 20752 0006 7860     		str	r0, [r7, #4]
 20753 0008 0B46     		mov	r3, r1
 20754 000a FB70     		strb	r3, [r7, #3]
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t crcreg = 0;
 20755              		.loc 1 691 0
 20756 000c 4FF00003 		mov	r3, #0
 20757 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 20758              		.loc 1 695 0
 20759 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20760 0014 012B     		cmp	r3, #1
 20761 0016 03D0     		beq	.L53
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Tx CRC register */
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->TXCRCR;
 20762              		.loc 1 698 0
 20763 0018 7B68     		ldr	r3, [r7, #4]
 20764 001a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 20765 001c FB81     		strh	r3, [r7, #14]	@ movhi
 20766 001e 02E0     		b	.L54
 20767              	.L53:
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Rx CRC register */
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->RXCRCR;
 20768              		.loc 1 703 0
 20769 0020 7B68     		ldr	r3, [r7, #4]
 20770 0022 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 20771 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 20772              	.L54:
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the selected CRC register */
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return crcreg;
 20773              		.loc 1 706 0
 20774 0026 FB89     		ldrh	r3, [r7, #14]
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20775              		.loc 1 707 0
 20776 0028 1846     		mov	r0, r3
 20777 002a 07F11407 		add	r7, r7, #20
 20778 002e BD46     		mov	sp, r7
 20779 0030 80BC     		pop	{r7}
 20780 0032 7047     		bx	lr
 20781              		.cfi_endproc
 20782              	.LFE45:
 20784              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 20785              		.align	2
 20786              		.global	SPI_GetCRCPolynomial
 20787              		.thumb
 20788              		.thumb_func
 20790              	SPI_GetCRCPolynomial:
 20791              	.LFB46:
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The CRC Polynomial register value.
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20792              		.loc 1 715 0
 20793              		.cfi_startproc
 20794              		@ args = 0, pretend = 0, frame = 8
 20795              		@ frame_needed = 1, uses_anonymous_args = 0
 20796              		@ link register save eliminated.
 20797 0000 80B4     		push	{r7}
 20798              	.LCFI51:
 20799              		.cfi_def_cfa_offset 4
 20800 0002 83B0     		sub	sp, sp, #12
 20801              	.LCFI52:
 20802              		.cfi_def_cfa_offset 16
 20803 0004 00AF     		add	r7, sp, #0
 20804              		.cfi_offset 7, -4
 20805              	.LCFI53:
 20806              		.cfi_def_cfa_register 7
 20807 0006 7860     		str	r0, [r7, #4]
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the CRC polynomial register */
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->CRCPR;
 20808              		.loc 1 720 0
 20809 0008 7B68     		ldr	r3, [r7, #4]
 20810 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 20811 000c 9BB2     		uxth	r3, r3
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20812              		.loc 1 721 0
 20813 000e 1846     		mov	r0, r3
 20814 0010 07F10C07 		add	r7, r7, #12
 20815 0014 BD46     		mov	sp, r7
 20816 0016 80BC     		pop	{r7}
 20817 0018 7047     		bx	lr
 20818              		.cfi_endproc
 20819              	.LFE46:
 20821 001a 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 20822              		.align	2
 20823              		.global	SPI_BiDirectionalLineConfig
 20824              		.thumb
 20825              		.thumb_func
 20827              	SPI_BiDirectionalLineConfig:
 20828              	.LFB47:
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Tx: Selects Tx transmission direction
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Rx: Selects Rx receive direction
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20829              		.loc 1 733 0
 20830              		.cfi_startproc
 20831              		@ args = 0, pretend = 0, frame = 8
 20832              		@ frame_needed = 1, uses_anonymous_args = 0
 20833              		@ link register save eliminated.
 20834 0000 80B4     		push	{r7}
 20835              	.LCFI54:
 20836              		.cfi_def_cfa_offset 4
 20837 0002 83B0     		sub	sp, sp, #12
 20838              	.LCFI55:
 20839              		.cfi_def_cfa_offset 16
 20840 0004 00AF     		add	r7, sp, #0
 20841              		.cfi_offset 7, -4
 20842              	.LCFI56:
 20843              		.cfi_def_cfa_register 7
 20844 0006 7860     		str	r0, [r7, #4]
 20845 0008 0B46     		mov	r3, r1
 20846 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 20847              		.loc 1 737 0
 20848 000c 7B88     		ldrh	r3, [r7, #2]
 20849 000e B3F5804F 		cmp	r3, #16384
 20850 0012 08D1     		bne	.L57
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Tx only mode */
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 20851              		.loc 1 740 0
 20852 0014 7B68     		ldr	r3, [r7, #4]
 20853 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20854 0018 9BB2     		uxth	r3, r3
 20855 001a 43F48043 		orr	r3, r3, #16384
 20856 001e 9AB2     		uxth	r2, r3
 20857 0020 7B68     		ldr	r3, [r7, #4]
 20858 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 20859 0024 07E0     		b	.L56
 20860              	.L57:
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Rx only mode */
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 20861              		.loc 1 745 0
 20862 0026 7B68     		ldr	r3, [r7, #4]
 20863 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 20864 002a 9BB2     		uxth	r3, r3
 20865 002c 23F48043 		bic	r3, r3, #16384
 20866 0030 9AB2     		uxth	r2, r3
 20867 0032 7B68     		ldr	r3, [r7, #4]
 20868 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 20869              	.L56:
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20870              		.loc 1 747 0
 20871 0036 07F10C07 		add	r7, r7, #12
 20872 003a BD46     		mov	sp, r7
 20873 003c 80BC     		pop	{r7}
 20874 003e 7047     		bx	lr
 20875              		.cfi_endproc
 20876              	.LFE47:
 20878              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 20879              		.align	2
 20880              		.global	SPI_I2S_GetFlagStatus
 20881              		.thumb
 20882              		.thumb_func
 20884              	SPI_I2S_GetFlagStatus:
 20885              	.LFB48:
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S flag is set or not.
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI/I2S flag to check. 
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_BSY: Busy flag.
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_OVR: Overrun flag.
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_MODF: Mode Fault flag.
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_CRCERR: CRC Error flag.
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_UDR: Underrun Error flag.
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20886              		.loc 1 767 0
 20887              		.cfi_startproc
 20888              		@ args = 0, pretend = 0, frame = 16
 20889              		@ frame_needed = 1, uses_anonymous_args = 0
 20890              		@ link register save eliminated.
 20891 0000 80B4     		push	{r7}
 20892              	.LCFI57:
 20893              		.cfi_def_cfa_offset 4
 20894 0002 85B0     		sub	sp, sp, #20
 20895              	.LCFI58:
 20896              		.cfi_def_cfa_offset 24
 20897 0004 00AF     		add	r7, sp, #0
 20898              		.cfi_offset 7, -4
 20899              	.LCFI59:
 20900              		.cfi_def_cfa_register 7
 20901 0006 7860     		str	r0, [r7, #4]
 20902 0008 0B46     		mov	r3, r1
 20903 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   FlagStatus bitstatus = RESET;
 20904              		.loc 1 768 0
 20905 000c 4FF00003 		mov	r3, #0
 20906 0010 FB73     		strb	r3, [r7, #15]
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S flag */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 20907              		.loc 1 773 0
 20908 0012 7B68     		ldr	r3, [r7, #4]
 20909 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 20910 0016 9AB2     		uxth	r2, r3
 20911 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20912 001a 02EA0303 		and	r3, r2, r3
 20913 001e 9BB2     		uxth	r3, r3
 20914 0020 002B     		cmp	r3, #0
 20915 0022 03D0     		beq	.L60
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is set */
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 20916              		.loc 1 776 0
 20917 0024 4FF00103 		mov	r3, #1
 20918 0028 FB73     		strb	r3, [r7, #15]
 20919 002a 02E0     		b	.L61
 20920              	.L60:
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is reset */
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 20921              		.loc 1 781 0
 20922 002c 4FF00003 		mov	r3, #0
 20923 0030 FB73     		strb	r3, [r7, #15]
 20924              	.L61:
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_FLAG status */
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return  bitstatus;
 20925              		.loc 1 784 0
 20926 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20927              		.loc 1 785 0
 20928 0034 1846     		mov	r0, r3
 20929 0036 07F11407 		add	r7, r7, #20
 20930 003a BD46     		mov	sp, r7
 20931 003c 80BC     		pop	{r7}
 20932 003e 7047     		bx	lr
 20933              		.cfi_endproc
 20934              	.LFE48:
 20936              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 20937              		.align	2
 20938              		.global	SPI_I2S_ClearFlag
 20939              		.thumb
 20940              		.thumb_func
 20942              	SPI_I2S_ClearFlag:
 20943              	.LFB49:
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR flag.
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun error) flag is cleared by software sequence: a read 
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun error) flag is cleared by a read operation to 
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     SPI_SR register (SPI_I2S_GetFlagStatus()).
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) flag is cleared by software sequence: a read/write 
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20944              		.loc 1 805 0
 20945              		.cfi_startproc
 20946              		@ args = 0, pretend = 0, frame = 8
 20947              		@ frame_needed = 1, uses_anonymous_args = 0
 20948              		@ link register save eliminated.
 20949 0000 80B4     		push	{r7}
 20950              	.LCFI60:
 20951              		.cfi_def_cfa_offset 4
 20952 0002 83B0     		sub	sp, sp, #12
 20953              	.LCFI61:
 20954              		.cfi_def_cfa_offset 16
 20955 0004 00AF     		add	r7, sp, #0
 20956              		.cfi_offset 7, -4
 20957              	.LCFI62:
 20958              		.cfi_def_cfa_register 7
 20959 0006 7860     		str	r0, [r7, #4]
 20960 0008 0B46     		mov	r3, r1
 20961 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Clear the selected SPI CRC Error (CRCERR) flag */
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 20962              		.loc 1 811 0
 20963 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20964 000e 6FEA0303 		mvn	r3, r3
 20965 0012 9AB2     		uxth	r2, r3
 20966 0014 7B68     		ldr	r3, [r7, #4]
 20967 0016 1A81     		strh	r2, [r3, #8]	@ movhi
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 20968              		.loc 1 812 0
 20969 0018 07F10C07 		add	r7, r7, #12
 20970 001c BD46     		mov	sp, r7
 20971 001e 80BC     		pop	{r7}
 20972 0020 7047     		bx	lr
 20973              		.cfi_endproc
 20974              	.LFE49:
 20976 0022 00BF     		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 20977              		.align	2
 20978              		.global	SPI_I2S_GetITStatus
 20979              		.thumb
 20980              		.thumb_func
 20982              	SPI_I2S_GetITStatus:
 20983              	.LFB50:
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to check. 
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_OVR: Overrun interrupt.
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_MODF: Mode Fault interrupt.
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_CRCERR: CRC Error interrupt.
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_IT_UDR: Underrun Error interrupt.
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 20984              		.loc 1 830 0
 20985              		.cfi_startproc
 20986              		@ args = 0, pretend = 0, frame = 16
 20987              		@ frame_needed = 1, uses_anonymous_args = 0
 20988              		@ link register save eliminated.
 20989 0000 80B4     		push	{r7}
 20990              	.LCFI63:
 20991              		.cfi_def_cfa_offset 4
 20992 0002 85B0     		sub	sp, sp, #20
 20993              	.LCFI64:
 20994              		.cfi_def_cfa_offset 24
 20995 0004 00AF     		add	r7, sp, #0
 20996              		.cfi_offset 7, -4
 20997              	.LCFI65:
 20998              		.cfi_def_cfa_register 7
 20999 0006 7860     		str	r0, [r7, #4]
 21000 0008 0B46     		mov	r3, r1
 21001 000a FB70     		strb	r3, [r7, #3]
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ITStatus bitstatus = RESET;
 21002              		.loc 1 831 0
 21003 000c 4FF00003 		mov	r3, #0
 21004 0010 FB73     		strb	r3, [r7, #15]
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 21005              		.loc 1 832 0
 21006 0012 4FF00003 		mov	r3, #0
 21007 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 21008 0018 4FF00003 		mov	r3, #0
 21009 001c 7B81     		strh	r3, [r7, #10]	@ movhi
 21010 001e 4FF00003 		mov	r3, #0
 21011 0022 3B81     		strh	r3, [r7, #8]	@ movhi
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 21012              		.loc 1 839 0
 21013 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21014 0026 03F00F03 		and	r3, r3, #15
 21015 002a 4FF00102 		mov	r2, #1
 21016 002e 02FA03F3 		lsl	r3, r2, r3
 21017 0032 BB81     		strh	r3, [r7, #12]	@ movhi
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT mask */
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 21018              		.loc 1 842 0
 21019 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21020 0036 4FEA1313 		lsr	r3, r3, #4
 21021 003a DBB2     		uxtb	r3, r3
 21022 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 21023              		.loc 1 845 0
 21024 003e 7B89     		ldrh	r3, [r7, #10]
 21025 0040 4FF00102 		mov	r2, #1
 21026 0044 02FA03F3 		lsl	r3, r2, r3
 21027 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 21028              		.loc 1 848 0
 21029 004a 7B68     		ldr	r3, [r7, #4]
 21030 004c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 21031 004e 9AB2     		uxth	r2, r3
 21032 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 21033 0052 02EA0303 		and	r3, r2, r3
 21034 0056 3B81     		strh	r3, [r7, #8]	@ movhi
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S interrupt */
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 21035              		.loc 1 851 0
 21036 0058 7B68     		ldr	r3, [r7, #4]
 21037 005a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 21038 005c 9AB2     		uxth	r2, r3
 21039 005e BB89     		ldrh	r3, [r7, #12]	@ movhi
 21040 0060 02EA0303 		and	r3, r2, r3
 21041 0064 9BB2     		uxth	r3, r3
 21042 0066 002B     		cmp	r3, #0
 21043 0068 06D0     		beq	.L64
 21044              		.loc 1 851 0 is_stmt 0 discriminator 1
 21045 006a 3B89     		ldrh	r3, [r7, #8]
 21046 006c 002B     		cmp	r3, #0
 21047 006e 03D0     		beq	.L64
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is set */
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 21048              		.loc 1 854 0 is_stmt 1
 21049 0070 4FF00103 		mov	r3, #1
 21050 0074 FB73     		strb	r3, [r7, #15]
 21051 0076 02E0     		b	.L65
 21052              	.L64:
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is reset */
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 21053              		.loc 1 859 0
 21054 0078 4FF00003 		mov	r3, #0
 21055 007c FB73     		strb	r3, [r7, #15]
 21056              	.L65:
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_IT status */
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return bitstatus;
 21057              		.loc 1 862 0
 21058 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 21059              		.loc 1 863 0
 21060 0080 1846     		mov	r0, r3
 21061 0082 07F11407 		add	r7, r7, #20
 21062 0086 BD46     		mov	sp, r7
 21063 0088 80BC     		pop	{r7}
 21064 008a 7047     		bx	lr
 21065              		.cfi_endproc
 21066              	.LFE50:
 21068              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 21069              		.align	2
 21070              		.global	SPI_I2S_ClearITPendingBit
 21071              		.thumb
 21072              		.thumb_func
 21074              	SPI_I2S_ClearITPendingBit:
 21075              	.LFB51:
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR interrupt pending bit.   
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun Error) interrupt pending bit is cleared by software 
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun Error) interrupt pending bit is cleared by a read 
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetITStatus()).
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     the SPI).
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 21076              		.loc 1 884 0
 21077              		.cfi_startproc
 21078              		@ args = 0, pretend = 0, frame = 16
 21079              		@ frame_needed = 1, uses_anonymous_args = 0
 21080              		@ link register save eliminated.
 21081 0000 80B4     		push	{r7}
 21082              	.LCFI66:
 21083              		.cfi_def_cfa_offset 4
 21084 0002 85B0     		sub	sp, sp, #20
 21085              	.LCFI67:
 21086              		.cfi_def_cfa_offset 24
 21087 0004 00AF     		add	r7, sp, #0
 21088              		.cfi_offset 7, -4
 21089              	.LCFI68:
 21090              		.cfi_def_cfa_register 7
 21091 0006 7860     		str	r0, [r7, #4]
 21092 0008 0B46     		mov	r3, r1
 21093 000a FB70     		strb	r3, [r7, #3]
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0;
 21094              		.loc 1 885 0
 21095 000c 4FF00003 		mov	r3, #0
 21096 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI IT index */
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 21097              		.loc 1 891 0
 21098 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21099 0014 03F00F03 		and	r3, r3, #15
 21100 0018 4FF00102 		mov	r2, #1
 21101 001c 02FA03F3 		lsl	r3, r2, r3
 21102 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 21103              		.loc 1 894 0
 21104 0022 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21105 0024 6FEA0303 		mvn	r3, r3
 21106 0028 9AB2     		uxth	r2, r3
 21107 002a 7B68     		ldr	r3, [r7, #4]
 21108 002c 1A81     		strh	r2, [r3, #8]	@ movhi
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 21109              		.loc 1 895 0
 21110 002e 07F11407 		add	r7, r7, #20
 21111 0032 BD46     		mov	sp, r7
 21112 0034 80BC     		pop	{r7}
 21113 0036 7047     		bx	lr
 21114              		.cfi_endproc
 21115              	.LFE51:
 21117              		.text
 21118              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_spi.c
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19536  .text.SPI_I2S_DeInit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19541  .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19610  .text.SPI_I2S_DeInit:00000074 $d
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19617  .text.SPI_Init:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19622  .text.SPI_Init:00000000 SPI_Init
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19724  .text.I2S_Init:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:19729  .text.I2S_Init:00000000 I2S_Init
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20005  .text.I2S_Init:00000200 $d
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20013  .text.SPI_StructInit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20018  .text.SPI_StructInit:00000000 SPI_StructInit
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20081  .text.I2S_StructInit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20086  .text.I2S_StructInit:00000000 I2S_StructInit
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20137  .text.SPI_Cmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20142  .text.SPI_Cmd:00000000 SPI_Cmd
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20194  .text.I2S_Cmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20199  .text.I2S_Cmd:00000000 I2S_Cmd
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20251  .text.SPI_I2S_ITConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20256  .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20329  .text.SPI_I2S_DMACmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20334  .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20392  .text.SPI_I2S_SendData:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20397  .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20430  .text.SPI_I2S_ReceiveData:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20435  .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20467  .text.SPI_NSSInternalSoftwareConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20472  .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20525  .text.SPI_SSOutputCmd:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20530  .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20582  .text.SPI_DataSizeConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20587  .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20633  .text.SPI_TransmitCRC:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20638  .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20673  .text.SPI_CalculateCRC:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20678  .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20730  .text.SPI_GetCRC:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20735  .text.SPI_GetCRC:00000000 SPI_GetCRC
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20785  .text.SPI_GetCRCPolynomial:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20790  .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20822  .text.SPI_BiDirectionalLineConfig:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20827  .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20879  .text.SPI_I2S_GetFlagStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20884  .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20937  .text.SPI_I2S_ClearFlag:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20942  .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20977  .text.SPI_I2S_GetITStatus:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:20982  .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:21069  .text.SPI_I2S_ClearITPendingBit:00000000 $t
C:\Users\sMi\AppData\Local\Temp\cc35ArXY.s:21074  .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
